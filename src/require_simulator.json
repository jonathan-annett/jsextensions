{"sha1":"68eda4e609aa8c231a2133ef311a56ea092b4b14","pkg":{"src":"(function(x){x[0][x[1]]=(function()    {\n        var\n        dir,\n    cache={},\n    aliases={\n        \"../node_modules/browser-punycode/punycode.js\": \"punycode\",\n        \"../node_modules/browser-url/url.js\": \"url\",\n        \"../node_modules/browser-querystring/index.js\": \"querystring\",\n        \"../node_modules/browser-util/util.js\": \"util\",\n        \"../node_modules/inherits/inherits.js\": \"inherits\",\n        \"../node_modules/is-arguments/index.js\": \"is-arguments\",\n        \"../node_modules/is-generator-function/index.js\": \"is-generator-function\",\n        \"../node_modules/browser-path/path.js\": \"path\"\n    },\n        __sim_require = function require(dirname,file) {\n          //file = file.search(/^\\.{1}/) ===0 ? file.replace(/^\\.{1}/,dirname) : file;\n          file=aliases[file]||file;\n          var mod = cache[file];\n          if (mod) return mod;\n          if (dir [file]) {\n            cache[file] = mod = dir[file].load();\n            return mod;\n          }\n          throw JSON.stringify({error:\"file not found\",filename:file,dirname : dirname});\n        };\n    \n        \n    \n        dir = {\n             \"punycode\" : {\n            name:\"browser-punycode\",\n            path:\"../node_modules/browser-punycode/punycode.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-punycode/punycode.js\n                'use strict';\n                \n                /** Highest positive signed 32-bit float value */\n                const maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n                \n                /** Bootstring parameters */\n                const base = 36;\n                const tMin = 1;\n                const tMax = 26;\n                const skew = 38;\n                const damp = 700;\n                const initialBias = 72;\n                const initialN = 128; // 0x80\n                const delimiter = '-'; // '\\x2D'\n                \n                /** Regular expressions */\n                const regexPunycode = /^xn--/;\n                const regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\n                const regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n                \n                /** Error messages */\n                const errors = {\n                    'overflow': 'Overflow: input needs wider integers to process',\n                    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n                    'invalid-input': 'Invalid input'\n                };\n                \n                /** Convenience shortcuts */\n                const baseMinusTMin = base - tMin;\n                const floor = Math.floor;\n                const stringFromCharCode = String.fromCharCode;\n                \n                /*--------------------------------------------------------------------------*/\n                \n                /**\n                 * A generic error utility function.\n                 * @private\n                 * @param {String} type The error type.\n                 * @returns {Error} Throws a `RangeError` with the applicable error message.\n                 */\n                function error(type) {\n                    throw new RangeError(errors[type]);\n                }\n                \n                /**\n                 * A generic `Array#map` utility function.\n                 * @private\n                 * @param {Array} array The array to iterate over.\n                 * @param {Function} callback The function that gets called for every array\n                 * item.\n                 * @returns {Array} A new array of values returned by the callback function.\n                 */\n                function map(array, fn) {\n                    const result = [];\n                    let length = array.length;\n                    while (length--) {\n                        result[length] = fn(array[length]);\n                    }\n                    return result;\n                }\n                \n                /**\n                 * A simple `Array#map`-like wrapper to work with domain name strings or email\n                 * addresses.\n                 * @private\n                 * @param {String} domain The domain name or email address.\n                 * @param {Function} callback The function that gets called for every\n                 * character.\n                 * @returns {Array} A new string of characters returned by the callback\n                 * function.\n                 */\n                function mapDomain(string, fn) {\n                    const parts = string.split('@');\n                    let result = '';\n                    if (parts.length > 1) {\n                        // In email addresses, only the domain name should be punycoded. Leave\n                        // the local part (i.e. everything up to `@`) intact.\n                        result = parts[0] + '@';\n                        string = parts[1];\n                    }\n                    // Avoid `split(regex)` for IE8 compatibility. See #17.\n                    string = string.replace(regexSeparators, '\\x2E');\n                    const labels = string.split('.');\n                    const encoded = map(labels, fn).join('.');\n                    return result + encoded;\n                }\n                \n                /**\n                 * Creates an array containing the numeric code points of each Unicode\n                 * character in the string. While JavaScript uses UCS-2 internally,\n                 * this function will convert a pair of surrogate halves (each of which\n                 * UCS-2 exposes as separate characters) into a single code point,\n                 * matching UTF-16.\n                 * @see `punycode.ucs2.encode`\n                 * @see <https://mathiasbynens.be/notes/javascript-encoding>\n                 * @memberOf punycode.ucs2\n                 * @name decode\n                 * @param {String} string The Unicode input string (UCS-2).\n                 * @returns {Array} The new array of code points.\n                 */\n                function ucs2decode(string) {\n                    const output = [];\n                    let counter = 0;\n                    const length = string.length;\n                    while (counter < length) {\n                        const value = string.charCodeAt(counter++);\n                        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n                            // It's a high surrogate, and there is a next character.\n                            const extra = string.charCodeAt(counter++);\n                            if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n                                output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n                            } else {\n                                // It's an unmatched surrogate; only append this code unit, in case the\n                                // next code unit is the high surrogate of a surrogate pair.\n                                output.push(value);\n                                counter--;\n                            }\n                        } else {\n                            output.push(value);\n                        }\n                    }\n                    return output;\n                }\n                \n                /**\n                 * Creates a string based on an array of numeric code points.\n                 * @see `punycode.ucs2.decode`\n                 * @memberOf punycode.ucs2\n                 * @name encode\n                 * @param {Array} codePoints The array of numeric code points.\n                 * @returns {String} The new Unicode string (UCS-2).\n                 */\n                const ucs2encode = array => String.fromCodePoint(...array);\n                \n                /**\n                 * Converts a basic code point into a digit/integer.\n                 * @see `digitToBasic()`\n                 * @private\n                 * @param {Number} codePoint The basic numeric code point value.\n                 * @returns {Number} The numeric value of a basic code point (for use in\n                 * representing integers) in the range `0` to `base - 1`, or `base` if\n                 * the code point does not represent a value.\n                 */\n                const basicToDigit = function(codePoint) {\n                    if (codePoint - 0x30 < 0x0A) {\n                        return codePoint - 0x16;\n                    }\n                    if (codePoint - 0x41 < 0x1A) {\n                        return codePoint - 0x41;\n                    }\n                    if (codePoint - 0x61 < 0x1A) {\n                        return codePoint - 0x61;\n                    }\n                    return base;\n                };\n                \n                /**\n                 * Converts a digit/integer into a basic code point.\n                 * @see `basicToDigit()`\n                 * @private\n                 * @param {Number} digit The numeric value of a basic code point.\n                 * @returns {Number} The basic code point whose value (when used for\n                 * representing integers) is `digit`, which needs to be in the range\n                 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n                 * used; else, the lowercase form is used. The behavior is undefined\n                 * if `flag` is non-zero and `digit` has no uppercase form.\n                 */\n                const digitToBasic = function(digit, flag) {\n                    //  0..25 map to ASCII a..z or A..Z\n                    // 26..35 map to ASCII 0..9\n                    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n                };\n                \n                /**\n                 * Bias adaptation function as per section 3.4 of RFC 3492.\n                 * https://tools.ietf.org/html/rfc3492#section-3.4\n                 * @private\n                 */\n                const adapt = function(delta, numPoints, firstTime) {\n                    let k = 0;\n                    delta = firstTime ? floor(delta / damp) : delta >> 1;\n                    delta += floor(delta / numPoints);\n                    for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n                        delta = floor(delta / baseMinusTMin);\n                    }\n                    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n                };\n                \n                /**\n                 * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n                 * symbols.\n                 * @memberOf punycode\n                 * @param {String} input The Punycode string of ASCII-only symbols.\n                 * @returns {String} The resulting string of Unicode symbols.\n                 */\n                const decode = function(input) {\n                    // Don't use UCS-2.\n                    const output = [];\n                    const inputLength = input.length;\n                    let i = 0;\n                    let n = initialN;\n                    let bias = initialBias;\n                \n                    // Handle the basic code points: let `basic` be the number of input code\n                    // points before the last delimiter, or `0` if there is none, then copy\n                    // the first basic code points to the output.\n                \n                    let basic = input.lastIndexOf(delimiter);\n                    if (basic < 0) {\n                        basic = 0;\n                    }\n                \n                    for (let j = 0; j < basic; ++j) {\n                        // if it's not a basic code point\n                        if (input.charCodeAt(j) >= 0x80) {\n                            error('not-basic');\n                        }\n                        output.push(input.charCodeAt(j));\n                    }\n                \n                    // Main decoding loop: start just after the last delimiter if any basic code\n                    // points were copied; start at the beginning otherwise.\n                \n                    for (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n                \n                        // `index` is the index of the next character to be consumed.\n                        // Decode a generalized variable-length integer into `delta`,\n                        // which gets added to `i`. The overflow checking is easier\n                        // if we increase `i` as we go, then subtract off its starting\n                        // value at the end to obtain `delta`.\n                        let oldi = i;\n                        for (let w = 1, k = base; /* no condition */; k += base) {\n                \n                            if (index >= inputLength) {\n                                error('invalid-input');\n                            }\n                \n                            const digit = basicToDigit(input.charCodeAt(index++));\n                \n                            if (digit >= base || digit > floor((maxInt - i) / w)) {\n                                error('overflow');\n                            }\n                \n                            i += digit * w;\n                            const t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n                \n                            if (digit < t) {\n                                break;\n                            }\n                \n                            const baseMinusT = base - t;\n                            if (w > floor(maxInt / baseMinusT)) {\n                                error('overflow');\n                            }\n                \n                            w *= baseMinusT;\n                \n                        }\n                \n                        const out = output.length + 1;\n                        bias = adapt(i - oldi, out, oldi == 0);\n                \n                        // `i` was supposed to wrap around from `out` to `0`,\n                        // incrementing `n` each time, so we'll fix that now:\n                        if (floor(i / out) > maxInt - n) {\n                            error('overflow');\n                        }\n                \n                        n += floor(i / out);\n                        i %= out;\n                \n                        // Insert `n` at position `i` of the output.\n                        output.splice(i++, 0, n);\n                \n                    }\n                \n                    return String.fromCodePoint(...output);\n                };\n                \n                /**\n                 * Converts a string of Unicode symbols (e.g. a domain name label) to a\n                 * Punycode string of ASCII-only symbols.\n                 * @memberOf punycode\n                 * @param {String} input The string of Unicode symbols.\n                 * @returns {String} The resulting Punycode string of ASCII-only symbols.\n                 */\n                const encode = function(input) {\n                    const output = [];\n                \n                    // Convert the input in UCS-2 to an array of Unicode code points.\n                    input = ucs2decode(input);\n                \n                    // Cache the length.\n                    let inputLength = input.length;\n                \n                    // Initialize the state.\n                    let n = initialN;\n                    let delta = 0;\n                    let bias = initialBias;\n                \n                    // Handle the basic code points.\n                    for (const currentValue of input) {\n                        if (currentValue < 0x80) {\n                            output.push(stringFromCharCode(currentValue));\n                        }\n                    }\n                \n                    let basicLength = output.length;\n                    let handledCPCount = basicLength;\n                \n                    // `handledCPCount` is the number of code points that have been handled;\n                    // `basicLength` is the number of basic code points.\n                \n                    // Finish the basic string with a delimiter unless it's empty.\n                    if (basicLength) {\n                        output.push(delimiter);\n                    }\n                \n                    // Main encoding loop:\n                    while (handledCPCount < inputLength) {\n                \n                        // All non-basic code points < n have been handled already. Find the next\n                        // larger one:\n                        let m = maxInt;\n                        for (const currentValue of input) {\n                            if (currentValue >= n && currentValue < m) {\n                                m = currentValue;\n                            }\n                        }\n                \n                        // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n                        // but guard against overflow.\n                        const handledCPCountPlusOne = handledCPCount + 1;\n                        if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n                            error('overflow');\n                        }\n                \n                        delta += (m - n) * handledCPCountPlusOne;\n                        n = m;\n                \n                        for (const currentValue of input) {\n                            if (currentValue < n && ++delta > maxInt) {\n                                error('overflow');\n                            }\n                            if (currentValue == n) {\n                                // Represent delta as a generalized variable-length integer.\n                                let q = delta;\n                                for (let k = base; /* no condition */; k += base) {\n                                    const t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n                                    if (q < t) {\n                                        break;\n                                    }\n                                    const qMinusT = q - t;\n                                    const baseMinusT = base - t;\n                                    output.push(\n                                        stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n                                    );\n                                    q = floor(qMinusT / baseMinusT);\n                                }\n                \n                                output.push(stringFromCharCode(digitToBasic(q, 0)));\n                                bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n                                delta = 0;\n                                ++handledCPCount;\n                            }\n                        }\n                \n                        ++delta;\n                        ++n;\n                \n                    }\n                    return output.join('');\n                };\n                \n                /**\n                 * Converts a Punycode string representing a domain name or an email address\n                 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n                 * it doesn't matter if you call it on a string that has already been\n                 * converted to Unicode.\n                 * @memberOf punycode\n                 * @param {String} input The Punycoded domain name or email address to\n                 * convert to Unicode.\n                 * @returns {String} The Unicode representation of the given Punycode\n                 * string.\n                 */\n                const toUnicode = function(input) {\n                    return mapDomain(input, function(string) {\n                        return regexPunycode.test(string)\n                            ? decode(string.slice(4).toLowerCase())\n                            : string;\n                    });\n                };\n                \n                /**\n                 * Converts a Unicode string representing a domain name or an email address to\n                 * Punycode. Only the non-ASCII parts of the domain name will be converted,\n                 * i.e. it doesn't matter if you call it with a domain that's already in\n                 * ASCII.\n                 * @memberOf punycode\n                 * @param {String} input The domain name or email address to convert, as a\n                 * Unicode string.\n                 * @returns {String} The Punycode representation of the given domain name or\n                 * email address.\n                 */\n                const toASCII = function(input) {\n                    return mapDomain(input, function(string) {\n                        return regexNonASCII.test(string)\n                            ? 'xn--' + encode(string)\n                            : string;\n                    });\n                };\n                \n                /*--------------------------------------------------------------------------*/\n                \n                /** Define the public API */\n                const punycode = {\n                    /**\n                     * A string representing the current Punycode.js version number.\n                     * @memberOf punycode\n                     * @type String\n                     */\n                    'version': '2.1.0',\n                    /**\n                     * An object of methods to convert from JavaScript's internal character\n                     * representation (UCS-2) to Unicode code points, and back.\n                     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n                     * @memberOf punycode\n                     * @type Object\n                     */\n                    'ucs2': {\n                        'decode': ucs2decode,\n                        'encode': ucs2encode\n                    },\n                    'decode': decode,\n                    'encode': encode,\n                    'toASCII': toASCII,\n                    'toUnicode': toUnicode\n                };\n                \n                module.exports = punycode;\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-punycode/punycode.js sha1 = 39ab3964d954c66ab440a590444fd7dd3493be37\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-punycode\"),\"punycode.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-punycode\")},\n    \"url\" : {\n            name:\"browser-url\",\n            path:\"../node_modules/browser-url/url.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-url/url.js\n                // Copyright Joyent, Inc. and other Node contributors.\n                //\n                // Permission is hereby granted, free of charge, to any person obtaining a\n                // copy of this software and associated documentation files (the\n                // \"Software\"), to deal in the Software without restriction, including\n                // without limitation the rights to use, copy, modify, merge, publish,\n                // distribute, sublicense, and/or sell copies of the Software, and to permit\n                // persons to whom the Software is furnished to do so, subject to the\n                // following conditions:\n                //\n                // The above copyright notice and this permission notice shall be included\n                // in all copies or substantial portions of the Software.\n                //\n                // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n                // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n                // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n                // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n                // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n                // USE OR OTHER DEALINGS IN THE SOFTWARE.\n                \n                'use strict';\n                \n                var punycode = require('punycode');\n                var util = require('./util');\n                \n                exports.parse = urlParse;\n                exports.resolve = urlResolve;\n                exports.resolveObject = urlResolveObject;\n                exports.format = urlFormat;\n                \n                exports.Url = Url;\n                \n                function Url() {\n                  this.protocol = null;\n                  this.slashes = null;\n                  this.auth = null;\n                  this.host = null;\n                  this.port = null;\n                  this.hostname = null;\n                  this.hash = null;\n                  this.search = null;\n                  this.query = null;\n                  this.pathname = null;\n                  this.path = null;\n                  this.href = null;\n                }\n                \n                // Reference: RFC 3986, RFC 1808, RFC 2396\n                \n                // define these here so at least they only have to be\n                // compiled once on the first module load.\n                var protocolPattern = /^([a-z0-9.+-]+:)/i,\n                    portPattern = /:[0-9]*$/,\n                \n                    // Special case for a simple path URL\n                    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n                \n                    // RFC 2396: characters reserved for delimiting URLs.\n                    // We actually just auto-escape these.\n                    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n                \n                    // RFC 2396: characters not allowed for various reasons.\n                    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n                \n                    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n                    autoEscape = ['\\''].concat(unwise),\n                    // Characters that are never ever allowed in a hostname.\n                    // Note that any invalid chars are also handled, but these\n                    // are the ones that are *expected* to be seen, so we fast-path\n                    // them.\n                    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n                    hostEndingChars = ['/', '?', '#'],\n                    hostnameMaxLen = 255,\n                    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n                    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n                    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n                    unsafeProtocol = {\n                      'javascript': true,\n                      'javascript:': true\n                    },\n                    // protocols that never have a hostname.\n                    hostlessProtocol = {\n                      'javascript': true,\n                      'javascript:': true\n                    },\n                    // protocols that always contain a // bit.\n                    slashedProtocol = {\n                      'http': true,\n                      'https': true,\n                      'ftp': true,\n                      'gopher': true,\n                      'file': true,\n                      'http:': true,\n                      'https:': true,\n                      'ftp:': true,\n                      'gopher:': true,\n                      'file:': true\n                    },\n                    querystring = require('querystring');\n                \n                function urlParse(url, parseQueryString, slashesDenoteHost) {\n                  if (url && util.isObject(url) && url instanceof Url) return url;\n                \n                  var u = new Url;\n                  u.parse(url, parseQueryString, slashesDenoteHost);\n                  return u;\n                }\n                \n                Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n                  if (!util.isString(url)) {\n                    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n                  }\n                \n                  // Copy chrome, IE, opera backslash-handling behavior.\n                  // Back slashes before the query string get converted to forward slashes\n                  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n                  var queryIndex = url.indexOf('?'),\n                      splitter =\n                          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n                      uSplit = url.split(splitter),\n                      slashRegex = /\\\\/g;\n                  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n                  url = uSplit.join(splitter);\n                \n                  var rest = url;\n                \n                  // trim before proceeding.\n                  // This is to support parse stuff like \"  http://foo.com  \\n\"\n                  rest = rest.trim();\n                \n                  if (!slashesDenoteHost && url.split('#').length === 1) {\n                    // Try fast path regexp\n                    var simplePath = simplePathPattern.exec(rest);\n                    if (simplePath) {\n                      this.path = rest;\n                      this.href = rest;\n                      this.pathname = simplePath[1];\n                      if (simplePath[2]) {\n                        this.search = simplePath[2];\n                        if (parseQueryString) {\n                          this.query = querystring.parse(this.search.substr(1));\n                        } else {\n                          this.query = this.search.substr(1);\n                        }\n                      } else if (parseQueryString) {\n                        this.search = '';\n                        this.query = {};\n                      }\n                      return this;\n                    }\n                  }\n                \n                  var proto = protocolPattern.exec(rest);\n                  if (proto) {\n                    proto = proto[0];\n                    var lowerProto = proto.toLowerCase();\n                    this.protocol = lowerProto;\n                    rest = rest.substr(proto.length);\n                  }\n                \n                  // figure out if it's got a host\n                  // user@server is *always* interpreted as a hostname, and url\n                  // resolution will treat //foo/bar as host=foo,path=bar because that's\n                  // how the browser resolves relative URLs.\n                  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n                    var slashes = rest.substr(0, 2) === '//';\n                    if (slashes && !(proto && hostlessProtocol[proto])) {\n                      rest = rest.substr(2);\n                      this.slashes = true;\n                    }\n                  }\n                \n                  if (!hostlessProtocol[proto] &&\n                      (slashes || (proto && !slashedProtocol[proto]))) {\n                \n                    // there's a hostname.\n                    // the first instance of /, ?, ;, or # ends the host.\n                    //\n                    // If there is an @ in the hostname, then non-host chars *are* allowed\n                    // to the left of the last @ sign, unless some host-ending character\n                    // comes *before* the @-sign.\n                    // URLs are obnoxious.\n                    //\n                    // ex:\n                    // http://a@b@c/ => user:a@b host:c\n                    // http://a@b?@c => user:a host:c path:/?@c\n                \n                    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n                    // Review our test case against browsers more comprehensively.\n                \n                    // find the first instance of any hostEndingChars\n                    var hostEnd = -1;\n                    for (var i = 0; i < hostEndingChars.length; i++) {\n                      var hec = rest.indexOf(hostEndingChars[i]);\n                      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n                        hostEnd = hec;\n                    }\n                \n                    // at this point, either we have an explicit point where the\n                    // auth portion cannot go past, or the last @ char is the decider.\n                    var auth, atSign;\n                    if (hostEnd === -1) {\n                      // atSign can be anywhere.\n                      atSign = rest.lastIndexOf('@');\n                    } else {\n                      // atSign must be in auth portion.\n                      // http://a@b/c@d => host:b auth:a path:/c@d\n                      atSign = rest.lastIndexOf('@', hostEnd);\n                    }\n                \n                    // Now we have a portion which is definitely the auth.\n                    // Pull that off.\n                    if (atSign !== -1) {\n                      auth = rest.slice(0, atSign);\n                      rest = rest.slice(atSign + 1);\n                      this.auth = decodeURIComponent(auth);\n                    }\n                \n                    // the host is the remaining to the left of the first non-host char\n                    hostEnd = -1;\n                    for (var i = 0; i < nonHostChars.length; i++) {\n                      var hec = rest.indexOf(nonHostChars[i]);\n                      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n                        hostEnd = hec;\n                    }\n                    // if we still have not hit it, then the entire thing is a host.\n                    if (hostEnd === -1)\n                      hostEnd = rest.length;\n                \n                    this.host = rest.slice(0, hostEnd);\n                    rest = rest.slice(hostEnd);\n                \n                    // pull out port.\n                    this.parseHost();\n                \n                    // we've indicated that there is a hostname,\n                    // so even if it's empty, it has to be present.\n                    this.hostname = this.hostname || '';\n                \n                    // if hostname begins with [ and ends with ]\n                    // assume that it's an IPv6 address.\n                    var ipv6Hostname = this.hostname[0] === '[' &&\n                        this.hostname[this.hostname.length - 1] === ']';\n                \n                    // validate a little.\n                    if (!ipv6Hostname) {\n                      var hostparts = this.hostname.split(/\\./);\n                      for (var i = 0, l = hostparts.length; i < l; i++) {\n                        var part = hostparts[i];\n                        if (!part) continue;\n                        if (!part.match(hostnamePartPattern)) {\n                          var newpart = '';\n                          for (var j = 0, k = part.length; j < k; j++) {\n                            if (part.charCodeAt(j) > 127) {\n                              // we replace non-ASCII char with a temporary placeholder\n                              // we need this to make sure size of hostname is not\n                              // broken by replacing non-ASCII by nothing\n                              newpart += 'x';\n                            } else {\n                              newpart += part[j];\n                            }\n                          }\n                          // we test again with ASCII char only\n                          if (!newpart.match(hostnamePartPattern)) {\n                            var validParts = hostparts.slice(0, i);\n                            var notHost = hostparts.slice(i + 1);\n                            var bit = part.match(hostnamePartStart);\n                            if (bit) {\n                              validParts.push(bit[1]);\n                              notHost.unshift(bit[2]);\n                            }\n                            if (notHost.length) {\n                              rest = '/' + notHost.join('.') + rest;\n                            }\n                            this.hostname = validParts.join('.');\n                            break;\n                          }\n                        }\n                      }\n                    }\n                \n                    if (this.hostname.length > hostnameMaxLen) {\n                      this.hostname = '';\n                    } else {\n                      // hostnames are always lower case.\n                      this.hostname = this.hostname.toLowerCase();\n                    }\n                \n                    if (!ipv6Hostname) {\n                      // IDNA Support: Returns a punycoded representation of \"domain\".\n                      // It only converts parts of the domain name that\n                      // have non-ASCII characters, i.e. it doesn't matter if\n                      // you call it with a domain that already is ASCII-only.\n                      this.hostname = punycode.toASCII(this.hostname);\n                    }\n                \n                    var p = this.port ? ':' + this.port : '';\n                    var h = this.hostname || '';\n                    this.host = h + p;\n                    this.href += this.host;\n                \n                    // strip [ and ] from the hostname\n                    // the host field still retains them, though\n                    if (ipv6Hostname) {\n                      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n                      if (rest[0] !== '/') {\n                        rest = '/' + rest;\n                      }\n                    }\n                  }\n                \n                  // now rest is set to the post-host stuff.\n                  // chop off any delim chars.\n                  if (!unsafeProtocol[lowerProto]) {\n                \n                    // First, make 100% sure that any \"autoEscape\" chars get\n                    // escaped, even if encodeURIComponent doesn't think they\n                    // need to be.\n                    for (var i = 0, l = autoEscape.length; i < l; i++) {\n                      var ae = autoEscape[i];\n                      if (rest.indexOf(ae) === -1)\n                        continue;\n                      var esc = encodeURIComponent(ae);\n                      if (esc === ae) {\n                        esc = escape(ae);\n                      }\n                      rest = rest.split(ae).join(esc);\n                    }\n                  }\n                \n                \n                  // chop off from the tail first.\n                  var hash = rest.indexOf('#');\n                  if (hash !== -1) {\n                    // got a fragment string.\n                    this.hash = rest.substr(hash);\n                    rest = rest.slice(0, hash);\n                  }\n                  var qm = rest.indexOf('?');\n                  if (qm !== -1) {\n                    this.search = rest.substr(qm);\n                    this.query = rest.substr(qm + 1);\n                    if (parseQueryString) {\n                      this.query = querystring.parse(this.query);\n                    }\n                    rest = rest.slice(0, qm);\n                  } else if (parseQueryString) {\n                    // no query string, but parseQueryString still requested\n                    this.search = '';\n                    this.query = {};\n                  }\n                  if (rest) this.pathname = rest;\n                  if (slashedProtocol[lowerProto] &&\n                      this.hostname && !this.pathname) {\n                    this.pathname = '/';\n                  }\n                \n                  //to support http.request\n                  if (this.pathname || this.search) {\n                    var p = this.pathname || '';\n                    var s = this.search || '';\n                    this.path = p + s;\n                  }\n                \n                  // finally, reconstruct the href based on what has been validated.\n                  this.href = this.format();\n                  return this;\n                };\n                \n                // format a parsed object into a url string\n                function urlFormat(obj) {\n                  // ensure it's an object, and not a string url.\n                  // If it's an obj, this is a no-op.\n                  // this way, you can call url_format() on strings\n                  // to clean up potentially wonky urls.\n                  if (util.isString(obj)) obj = urlParse(obj);\n                  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n                  return obj.format();\n                }\n                \n                Url.prototype.format = function() {\n                  var auth = this.auth || '';\n                  if (auth) {\n                    auth = encodeURIComponent(auth);\n                    auth = auth.replace(/%3A/i, ':');\n                    auth += '@';\n                  }\n                \n                  var protocol = this.protocol || '',\n                      pathname = this.pathname || '',\n                      hash = this.hash || '',\n                      host = false,\n                      query = '';\n                \n                  if (this.host) {\n                    host = auth + this.host;\n                  } else if (this.hostname) {\n                    host = auth + (this.hostname.indexOf(':') === -1 ?\n                        this.hostname :\n                        '[' + this.hostname + ']');\n                    if (this.port) {\n                      host += ':' + this.port;\n                    }\n                  }\n                \n                  if (this.query &&\n                      util.isObject(this.query) &&\n                      Object.keys(this.query).length) {\n                    query = querystring.stringify(this.query);\n                  }\n                \n                  var search = this.search || (query && ('?' + query)) || '';\n                \n                  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n                \n                  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n                  // unless they had them to begin with.\n                  if (this.slashes ||\n                      (!protocol || slashedProtocol[protocol]) && host !== false) {\n                    host = '//' + (host || '');\n                    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n                  } else if (!host) {\n                    host = '';\n                  }\n                \n                  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n                  if (search && search.charAt(0) !== '?') search = '?' + search;\n                \n                  pathname = pathname.replace(/[?#]/g, function(match) {\n                    return encodeURIComponent(match);\n                  });\n                  search = search.replace('#', '%23');\n                \n                  return protocol + host + pathname + search + hash;\n                };\n                \n                function urlResolve(source, relative) {\n                  return urlParse(source, false, true).resolve(relative);\n                }\n                \n                Url.prototype.resolve = function(relative) {\n                  return this.resolveObject(urlParse(relative, false, true)).format();\n                };\n                \n                function urlResolveObject(source, relative) {\n                  if (!source) return relative;\n                  return urlParse(source, false, true).resolveObject(relative);\n                }\n                \n                Url.prototype.resolveObject = function(relative) {\n                  if (util.isString(relative)) {\n                    var rel = new Url();\n                    rel.parse(relative, false, true);\n                    relative = rel;\n                  }\n                \n                  var result = new Url();\n                  var tkeys = Object.keys(this);\n                  for (var tk = 0; tk < tkeys.length; tk++) {\n                    var tkey = tkeys[tk];\n                    result[tkey] = this[tkey];\n                  }\n                \n                  // hash is always overridden, no matter what.\n                  // even href=\"\" will remove it.\n                  result.hash = relative.hash;\n                \n                  // if the relative url is empty, then there's nothing left to do here.\n                  if (relative.href === '') {\n                    result.href = result.format();\n                    return result;\n                  }\n                \n                  // hrefs like //foo/bar always cut to the protocol.\n                  if (relative.slashes && !relative.protocol) {\n                    // take everything except the protocol from relative\n                    var rkeys = Object.keys(relative);\n                    for (var rk = 0; rk < rkeys.length; rk++) {\n                      var rkey = rkeys[rk];\n                      if (rkey !== 'protocol')\n                        result[rkey] = relative[rkey];\n                    }\n                \n                    //urlParse appends trailing / to urls like http://www.example.com\n                    if (slashedProtocol[result.protocol] &&\n                        result.hostname && !result.pathname) {\n                      result.path = result.pathname = '/';\n                    }\n                \n                    result.href = result.format();\n                    return result;\n                  }\n                \n                  if (relative.protocol && relative.protocol !== result.protocol) {\n                    // if it's a known url protocol, then changing\n                    // the protocol does weird things\n                    // first, if it's not file:, then we MUST have a host,\n                    // and if there was a path\n                    // to begin with, then we MUST have a path.\n                    // if it is file:, then the host is dropped,\n                    // because that's known to be hostless.\n                    // anything else is assumed to be absolute.\n                    if (!slashedProtocol[relative.protocol]) {\n                      var keys = Object.keys(relative);\n                      for (var v = 0; v < keys.length; v++) {\n                        var k = keys[v];\n                        result[k] = relative[k];\n                      }\n                      result.href = result.format();\n                      return result;\n                    }\n                \n                    result.protocol = relative.protocol;\n                    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n                      var relPath = (relative.pathname || '').split('/');\n                      while (relPath.length && !(relative.host = relPath.shift()));\n                      if (!relative.host) relative.host = '';\n                      if (!relative.hostname) relative.hostname = '';\n                      if (relPath[0] !== '') relPath.unshift('');\n                      if (relPath.length < 2) relPath.unshift('');\n                      result.pathname = relPath.join('/');\n                    } else {\n                      result.pathname = relative.pathname;\n                    }\n                    result.search = relative.search;\n                    result.query = relative.query;\n                    result.host = relative.host || '';\n                    result.auth = relative.auth;\n                    result.hostname = relative.hostname || relative.host;\n                    result.port = relative.port;\n                    // to support http.request\n                    if (result.pathname || result.search) {\n                      var p = result.pathname || '';\n                      var s = result.search || '';\n                      result.path = p + s;\n                    }\n                    result.slashes = result.slashes || relative.slashes;\n                    result.href = result.format();\n                    return result;\n                  }\n                \n                  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n                      isRelAbs = (\n                          relative.host ||\n                          relative.pathname && relative.pathname.charAt(0) === '/'\n                      ),\n                      mustEndAbs = (isRelAbs || isSourceAbs ||\n                                    (result.host && relative.pathname)),\n                      removeAllDots = mustEndAbs,\n                      srcPath = result.pathname && result.pathname.split('/') || [],\n                      relPath = relative.pathname && relative.pathname.split('/') || [],\n                      psychotic = result.protocol && !slashedProtocol[result.protocol];\n                \n                  // if the url is a non-slashed url, then relative\n                  // links like ../.. should be able\n                  // to crawl up to the hostname, as well.  This is strange.\n                  // result.protocol has already been set by now.\n                  // Later on, put the first path part into the host field.\n                  if (psychotic) {\n                    result.hostname = '';\n                    result.port = null;\n                    if (result.host) {\n                      if (srcPath[0] === '') srcPath[0] = result.host;\n                      else srcPath.unshift(result.host);\n                    }\n                    result.host = '';\n                    if (relative.protocol) {\n                      relative.hostname = null;\n                      relative.port = null;\n                      if (relative.host) {\n                        if (relPath[0] === '') relPath[0] = relative.host;\n                        else relPath.unshift(relative.host);\n                      }\n                      relative.host = null;\n                    }\n                    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n                  }\n                \n                  if (isRelAbs) {\n                    // it's absolute.\n                    result.host = (relative.host || relative.host === '') ?\n                                  relative.host : result.host;\n                    result.hostname = (relative.hostname || relative.hostname === '') ?\n                                      relative.hostname : result.hostname;\n                    result.search = relative.search;\n                    result.query = relative.query;\n                    srcPath = relPath;\n                    // fall through to the dot-handling below.\n                  } else if (relPath.length) {\n                    // it's relative\n                    // throw away the existing file, and take the new path instead.\n                    if (!srcPath) srcPath = [];\n                    srcPath.pop();\n                    srcPath = srcPath.concat(relPath);\n                    result.search = relative.search;\n                    result.query = relative.query;\n                  } else if (!util.isNullOrUndefined(relative.search)) {\n                    // just pull out the search.\n                    // like href='?foo'.\n                    // Put this after the other two cases because it simplifies the booleans\n                    if (psychotic) {\n                      result.hostname = result.host = srcPath.shift();\n                      //occationaly the auth can get stuck only in host\n                      //this especially happens in cases like\n                      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n                      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                                       result.host.split('@') : false;\n                      if (authInHost) {\n                        result.auth = authInHost.shift();\n                        result.host = result.hostname = authInHost.shift();\n                      }\n                    }\n                    result.search = relative.search;\n                    result.query = relative.query;\n                    //to support http.request\n                    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n                      result.path = (result.pathname ? result.pathname : '') +\n                                    (result.search ? result.search : '');\n                    }\n                    result.href = result.format();\n                    return result;\n                  }\n                \n                  if (!srcPath.length) {\n                    // no path at all.  easy.\n                    // we've already handled the other stuff above.\n                    result.pathname = null;\n                    //to support http.request\n                    if (result.search) {\n                      result.path = '/' + result.search;\n                    } else {\n                      result.path = null;\n                    }\n                    result.href = result.format();\n                    return result;\n                  }\n                \n                  // if a url ENDs in . or .., then it must get a trailing slash.\n                  // however, if it ends in anything else non-slashy,\n                  // then it must NOT get a trailing slash.\n                  var last = srcPath.slice(-1)[0];\n                  var hasTrailingSlash = (\n                      (result.host || relative.host || srcPath.length > 1) &&\n                      (last === '.' || last === '..') || last === '');\n                \n                  // strip single dots, resolve double dots to parent dir\n                  // if the path tries to go above the root, `up` ends up > 0\n                  var up = 0;\n                  for (var i = srcPath.length; i >= 0; i--) {\n                    last = srcPath[i];\n                    if (last === '.') {\n                      srcPath.splice(i, 1);\n                    } else if (last === '..') {\n                      srcPath.splice(i, 1);\n                      up++;\n                    } else if (up) {\n                      srcPath.splice(i, 1);\n                      up--;\n                    }\n                  }\n                \n                  // if the path is allowed to go above the root, restore leading ..s\n                  if (!mustEndAbs && !removeAllDots) {\n                    for (; up--; up) {\n                      srcPath.unshift('..');\n                    }\n                  }\n                \n                  if (mustEndAbs && srcPath[0] !== '' &&\n                      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n                    srcPath.unshift('');\n                  }\n                \n                  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n                    srcPath.push('');\n                  }\n                \n                  var isAbsolute = srcPath[0] === '' ||\n                      (srcPath[0] && srcPath[0].charAt(0) === '/');\n                \n                  // put the host back\n                  if (psychotic) {\n                    result.hostname = result.host = isAbsolute ? '' :\n                                                    srcPath.length ? srcPath.shift() : '';\n                    //occationaly the auth can get stuck only in host\n                    //this especially happens in cases like\n                    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n                    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                                     result.host.split('@') : false;\n                    if (authInHost) {\n                      result.auth = authInHost.shift();\n                      result.host = result.hostname = authInHost.shift();\n                    }\n                  }\n                \n                  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n                \n                  if (mustEndAbs && !isAbsolute) {\n                    srcPath.unshift('');\n                  }\n                \n                  if (!srcPath.length) {\n                    result.pathname = null;\n                    result.path = null;\n                  } else {\n                    result.pathname = srcPath.join('/');\n                  }\n                \n                  //to support request.http\n                  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n                    result.path = (result.pathname ? result.pathname : '') +\n                                  (result.search ? result.search : '');\n                  }\n                  result.auth = relative.auth || result.auth;\n                  result.slashes = result.slashes || relative.slashes;\n                  result.href = result.format();\n                  return result;\n                };\n                \n                Url.prototype.parseHost = function() {\n                  var host = this.host;\n                  var port = portPattern.exec(host);\n                  if (port) {\n                    port = port[0];\n                    if (port !== ':') {\n                      this.port = port.substr(1);\n                    }\n                    host = host.substr(0, host.length - port.length);\n                  }\n                  if (host) this.hostname = host;\n                };\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-url/url.js sha1 = 78d0ac233252dbbecf7afc93c2c3ad56965f53e2\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-url\"),\"url.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-url\")},\n    \"./util\" : {\n            name:\"url\",\n            path:\"../node_modules/browser-url/util.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-url/util.js\n                'use strict';\n                \n                module.exports = {\n                  isString: function(arg) {\n                    return typeof(arg) === 'string';\n                  },\n                  isObject: function(arg) {\n                    return typeof(arg) === 'object' && arg !== null;\n                  },\n                  isNull: function(arg) {\n                    return arg === null;\n                  },\n                  isNullOrUndefined: function(arg) {\n                    return arg == null;\n                  }\n                };\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-url/util.js sha1 = b83cee072b6381001e94414862d934d65004d92b\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-url\"),\"util.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-url\")},\n    \"querystring\" : {\n            name:\"browser-querystring\",\n            path:\"../node_modules/browser-querystring/index.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/index.js\n                'use strict';\n                \n                exports.decode = exports.parse = require('./decode');\n                exports.encode = exports.stringify = require('./encode');\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/index.js sha1 = cb7fd2835f652938cfe501f3f0c225e2646eb801\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\"),\"index.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\")},\n    \"./util\" : {\n            name:\"url\",\n            path:\"../node_modules/browser-url/util.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-url/util.js\n                'use strict';\n                \n                module.exports = {\n                  isString: function(arg) {\n                    return typeof(arg) === 'string';\n                  },\n                  isObject: function(arg) {\n                    return typeof(arg) === 'object' && arg !== null;\n                  },\n                  isNull: function(arg) {\n                    return arg === null;\n                  },\n                  isNullOrUndefined: function(arg) {\n                    return arg == null;\n                  }\n                };\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-url/util.js sha1 = b83cee072b6381001e94414862d934d65004d92b\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-url\"),\"util.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-url\")},\n    \"./decode\" : {\n            name:\"querystring\",\n            path:\"../node_modules/browser-querystring/decode.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/decode.js\n                // Copyright Joyent, Inc. and other Node contributors.\n                //\n                // Permission is hereby granted, free of charge, to any person obtaining a\n                // copy of this software and associated documentation files (the\n                // \"Software\"), to deal in the Software without restriction, including\n                // without limitation the rights to use, copy, modify, merge, publish,\n                // distribute, sublicense, and/or sell copies of the Software, and to permit\n                // persons to whom the Software is furnished to do so, subject to the\n                // following conditions:\n                //\n                // The above copyright notice and this permission notice shall be included\n                // in all copies or substantial portions of the Software.\n                //\n                // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n                // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n                // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n                // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n                // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n                // USE OR OTHER DEALINGS IN THE SOFTWARE.\n                \n                'use strict';\n                \n                // If obj.hasOwnProperty has been overridden, then calling\n                // obj.hasOwnProperty(prop) will break.\n                // See: https://github.com/joyent/node/issues/1707\n                function hasOwnProperty(obj, prop) {\n                  return Object.prototype.hasOwnProperty.call(obj, prop);\n                }\n                \n                module.exports = function(qs, sep, eq, options) {\n                  sep = sep || '&';\n                  eq = eq || '=';\n                  var obj = {};\n                \n                  if (typeof qs !== 'string' || qs.length === 0) {\n                    return obj;\n                  }\n                \n                  var regexp = /\\+/g;\n                  qs = qs.split(sep);\n                \n                  var maxKeys = 1000;\n                  if (options && typeof options.maxKeys === 'number') {\n                    maxKeys = options.maxKeys;\n                  }\n                \n                  var len = qs.length;\n                  // maxKeys <= 0 means that we should not limit keys count\n                  if (maxKeys > 0 && len > maxKeys) {\n                    len = maxKeys;\n                  }\n                \n                  for (var i = 0; i < len; ++i) {\n                    var x = qs[i].replace(regexp, '%20'),\n                        idx = x.indexOf(eq),\n                        kstr, vstr, k, v;\n                \n                    if (idx >= 0) {\n                      kstr = x.substr(0, idx);\n                      vstr = x.substr(idx + 1);\n                    } else {\n                      kstr = x;\n                      vstr = '';\n                    }\n                \n                    k = decodeURIComponent(kstr);\n                    v = decodeURIComponent(vstr);\n                \n                    if (!hasOwnProperty(obj, k)) {\n                      obj[k] = v;\n                    } else if (Array.isArray(obj[k])) {\n                      obj[k].push(v);\n                    } else {\n                      obj[k] = [obj[k], v];\n                    }\n                  }\n                \n                  return obj;\n                };\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/decode.js sha1 = 78c13537ae65852bb6b1df4563ced3a27f848376\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\"),\"decode.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\")},\n    \"./encode\" : {\n            name:\"querystring\",\n            path:\"../node_modules/browser-querystring/encode.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/encode.js\n                // Copyright Joyent, Inc. and other Node contributors.\n                //\n                // Permission is hereby granted, free of charge, to any person obtaining a\n                // copy of this software and associated documentation files (the\n                // \"Software\"), to deal in the Software without restriction, including\n                // without limitation the rights to use, copy, modify, merge, publish,\n                // distribute, sublicense, and/or sell copies of the Software, and to permit\n                // persons to whom the Software is furnished to do so, subject to the\n                // following conditions:\n                //\n                // The above copyright notice and this permission notice shall be included\n                // in all copies or substantial portions of the Software.\n                //\n                // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n                // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n                // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n                // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n                // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n                // USE OR OTHER DEALINGS IN THE SOFTWARE.\n                \n                'use strict';\n                \n                var stringifyPrimitive = function(v) {\n                  switch (typeof v) {\n                    case 'string':\n                      return v;\n                \n                    case 'boolean':\n                      return v ? 'true' : 'false';\n                \n                    case 'number':\n                      return isFinite(v) ? v : '';\n                \n                    default:\n                      return '';\n                  }\n                };\n                \n                module.exports = function(obj, sep, eq, name) {\n                  sep = sep || '&';\n                  eq = eq || '=';\n                  if (obj === null) {\n                    obj = undefined;\n                  }\n                \n                  if (typeof obj === 'object') {\n                    return Object.keys(obj).map(function(k) {\n                      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n                      if (Array.isArray(obj[k])) {\n                        return obj[k].map(function(v) {\n                          return ks + encodeURIComponent(stringifyPrimitive(v));\n                        }).join(sep);\n                      } else {\n                        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n                      }\n                    }).join(sep);\n                \n                  }\n                \n                  if (!name) return '';\n                  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n                         encodeURIComponent(stringifyPrimitive(obj));\n                };\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/encode.js sha1 = bc42441192cea9de787398850f1d308980421017\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\"),\"encode.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\")},\n    \"./decode\" : {\n            name:\"querystring\",\n            path:\"../node_modules/browser-querystring/decode.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/decode.js\n                // Copyright Joyent, Inc. and other Node contributors.\n                //\n                // Permission is hereby granted, free of charge, to any person obtaining a\n                // copy of this software and associated documentation files (the\n                // \"Software\"), to deal in the Software without restriction, including\n                // without limitation the rights to use, copy, modify, merge, publish,\n                // distribute, sublicense, and/or sell copies of the Software, and to permit\n                // persons to whom the Software is furnished to do so, subject to the\n                // following conditions:\n                //\n                // The above copyright notice and this permission notice shall be included\n                // in all copies or substantial portions of the Software.\n                //\n                // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n                // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n                // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n                // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n                // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n                // USE OR OTHER DEALINGS IN THE SOFTWARE.\n                \n                'use strict';\n                \n                // If obj.hasOwnProperty has been overridden, then calling\n                // obj.hasOwnProperty(prop) will break.\n                // See: https://github.com/joyent/node/issues/1707\n                function hasOwnProperty(obj, prop) {\n                  return Object.prototype.hasOwnProperty.call(obj, prop);\n                }\n                \n                module.exports = function(qs, sep, eq, options) {\n                  sep = sep || '&';\n                  eq = eq || '=';\n                  var obj = {};\n                \n                  if (typeof qs !== 'string' || qs.length === 0) {\n                    return obj;\n                  }\n                \n                  var regexp = /\\+/g;\n                  qs = qs.split(sep);\n                \n                  var maxKeys = 1000;\n                  if (options && typeof options.maxKeys === 'number') {\n                    maxKeys = options.maxKeys;\n                  }\n                \n                  var len = qs.length;\n                  // maxKeys <= 0 means that we should not limit keys count\n                  if (maxKeys > 0 && len > maxKeys) {\n                    len = maxKeys;\n                  }\n                \n                  for (var i = 0; i < len; ++i) {\n                    var x = qs[i].replace(regexp, '%20'),\n                        idx = x.indexOf(eq),\n                        kstr, vstr, k, v;\n                \n                    if (idx >= 0) {\n                      kstr = x.substr(0, idx);\n                      vstr = x.substr(idx + 1);\n                    } else {\n                      kstr = x;\n                      vstr = '';\n                    }\n                \n                    k = decodeURIComponent(kstr);\n                    v = decodeURIComponent(vstr);\n                \n                    if (!hasOwnProperty(obj, k)) {\n                      obj[k] = v;\n                    } else if (Array.isArray(obj[k])) {\n                      obj[k].push(v);\n                    } else {\n                      obj[k] = [obj[k], v];\n                    }\n                  }\n                \n                  return obj;\n                };\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/decode.js sha1 = 78c13537ae65852bb6b1df4563ced3a27f848376\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\"),\"decode.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\")},\n    \"util\" : {\n            name:\"browser-util\",\n            path:\"../node_modules/browser-util/util.js\",\n            load: (function (module,require,__filename,__dirname){var process = {\n        \"env\": {},\n        \"cwd\": function(){ return \"/\";}\n    },exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/util.js\n                // Copyright Joyent, Inc. and other Node contributors.\n                //\n                // Permission is hereby granted, free of charge, to any person obtaining a\n                // copy of this software and associated documentation files (the\n                // \"Software\"), to deal in the Software without restriction, including\n                // without limitation the rights to use, copy, modify, merge, publish,\n                // distribute, sublicense, and/or sell copies of the Software, and to permit\n                // persons to whom the Software is furnished to do so, subject to the\n                // following conditions:\n                //\n                // The above copyright notice and this permission notice shall be included\n                // in all copies or substantial portions of the Software.\n                //\n                // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n                // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n                // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n                // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n                // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n                // USE OR OTHER DEALINGS IN THE SOFTWARE.\n                \n                var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n                  function getOwnPropertyDescriptors(obj) {\n                    var keys = Object.keys(obj);\n                    var descriptors = {};\n                    for (var i = 0; i < keys.length; i++) {\n                      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n                    }\n                    return descriptors;\n                  };\n                \n                var formatRegExp = /%[sdj%]/g;\n                exports.format = function(f) {\n                  if (!isString(f)) {\n                    var objects = [];\n                    for (var i = 0; i < arguments.length; i++) {\n                      objects.push(inspect(arguments[i]));\n                    }\n                    return objects.join(' ');\n                  }\n                \n                  var i = 1;\n                  var args = arguments;\n                  var len = args.length;\n                  var str = String(f).replace(formatRegExp, function(x) {\n                    if (x === '%%') return '%';\n                    if (i >= len) return x;\n                    switch (x) {\n                      case '%s': return String(args[i++]);\n                      case '%d': return Number(args[i++]);\n                      case '%j':\n                        try {\n                          return JSON.stringify(args[i++]);\n                        } catch (_) {\n                          return '[Circular]';\n                        }\n                      default:\n                        return x;\n                    }\n                  });\n                  for (var x = args[i]; i < len; x = args[++i]) {\n                    if (isNull(x) || !isObject(x)) {\n                      str += ' ' + x;\n                    } else {\n                      str += ' ' + inspect(x);\n                    }\n                  }\n                  return str;\n                };\n                \n                \n                // Mark that a method should not be used.\n                // Returns a modified function which warns once by default.\n                // If --no-deprecation is set, then it is a no-op.\n                exports.deprecate = function(fn, msg) {\n                  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n                    return fn;\n                  }\n                \n                  // Allow for deprecating things in the process of starting up.\n                  if (typeof process === 'undefined') {\n                    return function() {\n                      return exports.deprecate(fn, msg).apply(this, arguments);\n                    };\n                  }\n                \n                  var warned = false;\n                  function deprecated() {\n                    if (!warned) {\n                      if (process.throwDeprecation) {\n                        throw new Error(msg);\n                      } else if (process.traceDeprecation) {\n                        console.trace(msg);\n                      } else {\n                        console.error(msg);\n                      }\n                      warned = true;\n                    }\n                    return fn.apply(this, arguments);\n                  }\n                \n                  return deprecated;\n                };\n                \n                \n                var debugs = {};\n                var debugEnvRegex = /^$/;\n                \n                if (process.env.NODE_DEBUG) {\n                  var debugEnv = process.env.NODE_DEBUG;\n                  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n                    .replace(/\\*/g, '.*')\n                    .replace(/,/g, '$|^')\n                    .toUpperCase();\n                  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n                }\n                exports.debuglog = function(set) {\n                  set = set.toUpperCase();\n                  if (!debugs[set]) {\n                    if (debugEnvRegex.test(set)) {\n                      var pid = process.pid;\n                      debugs[set] = function() {\n                        var msg = exports.format.apply(exports, arguments);\n                        console.error('%s %d: %s', set, pid, msg);\n                      };\n                    } else {\n                      debugs[set] = function() {};\n                    }\n                  }\n                  return debugs[set];\n                };\n                \n                \n                /**\n                 * Echos the value of a value. Trys to print the value out\n                 * in the best way possible given the different types.\n                 *\n                 * @param {Object} obj The object to print out.\n                 * @param {Object} opts Optional options object that alters the output.\n                 */\n                /* legacy: obj, showHidden, depth, colors*/\n                function inspect(obj, opts) {\n                  // default options\n                  var ctx = {\n                    seen: [],\n                    stylize: stylizeNoColor\n                  };\n                  // legacy...\n                  if (arguments.length >= 3) ctx.depth = arguments[2];\n                  if (arguments.length >= 4) ctx.colors = arguments[3];\n                  if (isBoolean(opts)) {\n                    // legacy...\n                    ctx.showHidden = opts;\n                  } else if (opts) {\n                    // got an \"options\" object\n                    exports._extend(ctx, opts);\n                  }\n                  // set default options\n                  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n                  if (isUndefined(ctx.depth)) ctx.depth = 2;\n                  if (isUndefined(ctx.colors)) ctx.colors = false;\n                  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n                  if (ctx.colors) ctx.stylize = stylizeWithColor;\n                  return formatValue(ctx, obj, ctx.depth);\n                }\n                exports.inspect = inspect;\n                \n                \n                // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n                inspect.colors = {\n                  'bold' : [1, 22],\n                  'italic' : [3, 23],\n                  'underline' : [4, 24],\n                  'inverse' : [7, 27],\n                  'white' : [37, 39],\n                  'grey' : [90, 39],\n                  'black' : [30, 39],\n                  'blue' : [34, 39],\n                  'cyan' : [36, 39],\n                  'green' : [32, 39],\n                  'magenta' : [35, 39],\n                  'red' : [31, 39],\n                  'yellow' : [33, 39]\n                };\n                \n                // Don't use 'blue' not visible on cmd.exe\n                inspect.styles = {\n                  'special': 'cyan',\n                  'number': 'yellow',\n                  'boolean': 'yellow',\n                  'undefined': 'grey',\n                  'null': 'bold',\n                  'string': 'green',\n                  'date': 'magenta',\n                  // \"name\": intentionally not styling\n                  'regexp': 'red'\n                };\n                \n                \n                function stylizeWithColor(str, styleType) {\n                  var style = inspect.styles[styleType];\n                \n                  if (style) {\n                    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n                           '\\u001b[' + inspect.colors[style][1] + 'm';\n                  } else {\n                    return str;\n                  }\n                }\n                \n                \n                function stylizeNoColor(str, styleType) {\n                  return str;\n                }\n                \n                \n                function arrayToHash(array) {\n                  var hash = {};\n                \n                  array.forEach(function(val, idx) {\n                    hash[val] = true;\n                  });\n                \n                  return hash;\n                }\n                \n                \n                function formatValue(ctx, value, recurseTimes) {\n                  // Provide a hook for user-specified inspect functions.\n                  // Check that value is an object with an inspect function on it\n                  if (ctx.customInspect &&\n                      value &&\n                      isFunction(value.inspect) &&\n                      // Filter out the util module, it's inspect function is special\n                      value.inspect !== exports.inspect &&\n                      // Also filter out any prototype objects using the circular check.\n                      !(value.constructor && value.constructor.prototype === value)) {\n                    var ret = value.inspect(recurseTimes, ctx);\n                    if (!isString(ret)) {\n                      ret = formatValue(ctx, ret, recurseTimes);\n                    }\n                    return ret;\n                  }\n                \n                  // Primitive types cannot have properties\n                  var primitive = formatPrimitive(ctx, value);\n                  if (primitive) {\n                    return primitive;\n                  }\n                \n                  // Look up the keys of the object.\n                  var keys = Object.keys(value);\n                  var visibleKeys = arrayToHash(keys);\n                \n                  if (ctx.showHidden) {\n                    keys = Object.getOwnPropertyNames(value);\n                  }\n                \n                  // IE doesn't make error fields non-enumerable\n                  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n                  if (isError(value)\n                      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n                    return formatError(value);\n                  }\n                \n                  // Some type of object without properties can be shortcutted.\n                  if (keys.length === 0) {\n                    if (isFunction(value)) {\n                      var name = value.name ? ': ' + value.name : '';\n                      return ctx.stylize('[Function' + name + ']', 'special');\n                    }\n                    if (isRegExp(value)) {\n                      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n                    }\n                    if (isDate(value)) {\n                      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n                    }\n                    if (isError(value)) {\n                      return formatError(value);\n                    }\n                  }\n                \n                  var base = '', array = false, braces = ['{', '}'];\n                \n                  // Make Array say that they are Array\n                  if (isArray(value)) {\n                    array = true;\n                    braces = ['[', ']'];\n                  }\n                \n                  // Make functions say that they are functions\n                  if (isFunction(value)) {\n                    var n = value.name ? ': ' + value.name : '';\n                    base = ' [Function' + n + ']';\n                  }\n                \n                  // Make RegExps say that they are RegExps\n                  if (isRegExp(value)) {\n                    base = ' ' + RegExp.prototype.toString.call(value);\n                  }\n                \n                  // Make dates with properties first say the date\n                  if (isDate(value)) {\n                    base = ' ' + Date.prototype.toUTCString.call(value);\n                  }\n                \n                  // Make error with message first say the error\n                  if (isError(value)) {\n                    base = ' ' + formatError(value);\n                  }\n                \n                  if (keys.length === 0 && (!array || value.length == 0)) {\n                    return braces[0] + base + braces[1];\n                  }\n                \n                  if (recurseTimes < 0) {\n                    if (isRegExp(value)) {\n                      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n                    } else {\n                      return ctx.stylize('[Object]', 'special');\n                    }\n                  }\n                \n                  ctx.seen.push(value);\n                \n                  var output;\n                  if (array) {\n                    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n                  } else {\n                    output = keys.map(function(key) {\n                      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n                    });\n                  }\n                \n                  ctx.seen.pop();\n                \n                  return reduceToSingleString(output, base, braces);\n                }\n                \n                \n                function formatPrimitive(ctx, value) {\n                  if (isUndefined(value))\n                    return ctx.stylize('undefined', 'undefined');\n                  if (isString(value)) {\n                    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                                             .replace(/'/g, \"\\\\'\")\n                                                             .replace(/\\\\\"/g, '\"') + '\\'';\n                    return ctx.stylize(simple, 'string');\n                  }\n                  if (isNumber(value))\n                    return ctx.stylize('' + value, 'number');\n                  if (isBoolean(value))\n                    return ctx.stylize('' + value, 'boolean');\n                  // For some reason typeof null is \"object\", so special case here.\n                  if (isNull(value))\n                    return ctx.stylize('null', 'null');\n                }\n                \n                \n                function formatError(value) {\n                  return '[' + Error.prototype.toString.call(value) + ']';\n                }\n                \n                \n                function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n                  var output = [];\n                  for (var i = 0, l = value.length; i < l; ++i) {\n                    if (hasOwnProperty(value, String(i))) {\n                      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n                          String(i), true));\n                    } else {\n                      output.push('');\n                    }\n                  }\n                  keys.forEach(function(key) {\n                    if (!key.match(/^\\d+$/)) {\n                      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n                          key, true));\n                    }\n                  });\n                  return output;\n                }\n                \n                \n                function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n                  var name, str, desc;\n                  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n                  if (desc.get) {\n                    if (desc.set) {\n                      str = ctx.stylize('[Getter/Setter]', 'special');\n                    } else {\n                      str = ctx.stylize('[Getter]', 'special');\n                    }\n                  } else {\n                    if (desc.set) {\n                      str = ctx.stylize('[Setter]', 'special');\n                    }\n                  }\n                  if (!hasOwnProperty(visibleKeys, key)) {\n                    name = '[' + key + ']';\n                  }\n                  if (!str) {\n                    if (ctx.seen.indexOf(desc.value) < 0) {\n                      if (isNull(recurseTimes)) {\n                        str = formatValue(ctx, desc.value, null);\n                      } else {\n                        str = formatValue(ctx, desc.value, recurseTimes - 1);\n                      }\n                      if (str.indexOf('\\n') > -1) {\n                        if (array) {\n                          str = str.split('\\n').map(function(line) {\n                            return '  ' + line;\n                          }).join('\\n').substr(2);\n                        } else {\n                          str = '\\n' + str.split('\\n').map(function(line) {\n                            return '   ' + line;\n                          }).join('\\n');\n                        }\n                      }\n                    } else {\n                      str = ctx.stylize('[Circular]', 'special');\n                    }\n                  }\n                  if (isUndefined(name)) {\n                    if (array && key.match(/^\\d+$/)) {\n                      return str;\n                    }\n                    name = JSON.stringify('' + key);\n                    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n                      name = name.substr(1, name.length - 2);\n                      name = ctx.stylize(name, 'name');\n                    } else {\n                      name = name.replace(/'/g, \"\\\\'\")\n                                 .replace(/\\\\\"/g, '\"')\n                                 .replace(/(^\"|\"$)/g, \"'\");\n                      name = ctx.stylize(name, 'string');\n                    }\n                  }\n                \n                  return name + ': ' + str;\n                }\n                \n                \n                function reduceToSingleString(output, base, braces) {\n                  var numLinesEst = 0;\n                  var length = output.reduce(function(prev, cur) {\n                    numLinesEst++;\n                    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n                    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n                  }, 0);\n                \n                  if (length > 60) {\n                    return braces[0] +\n                           (base === '' ? '' : base + '\\n ') +\n                           ' ' +\n                           output.join(',\\n  ') +\n                           ' ' +\n                           braces[1];\n                  }\n                \n                  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n                }\n                \n                \n                // NOTE: These type checking functions intentionally don't use `instanceof`\n                // because it is fragile and can be easily faked with `Object.create()`.\n                exports.types = require('./support/types');\n                \n                function isArray(ar) {\n                  return Array.isArray(ar);\n                }\n                exports.isArray = isArray;\n                \n                function isBoolean(arg) {\n                  return typeof arg === 'boolean';\n                }\n                exports.isBoolean = isBoolean;\n                \n                function isNull(arg) {\n                  return arg === null;\n                }\n                exports.isNull = isNull;\n                \n                function isNullOrUndefined(arg) {\n                  return arg == null;\n                }\n                exports.isNullOrUndefined = isNullOrUndefined;\n                \n                function isNumber(arg) {\n                  return typeof arg === 'number';\n                }\n                exports.isNumber = isNumber;\n                \n                function isString(arg) {\n                  return typeof arg === 'string';\n                }\n                exports.isString = isString;\n                \n                function isSymbol(arg) {\n                  return typeof arg === 'symbol';\n                }\n                exports.isSymbol = isSymbol;\n                \n                function isUndefined(arg) {\n                  return arg === void 0;\n                }\n                exports.isUndefined = isUndefined;\n                \n                function isRegExp(re) {\n                  return isObject(re) && objectToString(re) === '[object RegExp]';\n                }\n                exports.isRegExp = isRegExp;\n                exports.types.isRegExp = isRegExp;\n                \n                function isObject(arg) {\n                  return typeof arg === 'object' && arg !== null;\n                }\n                exports.isObject = isObject;\n                \n                function isDate(d) {\n                  return isObject(d) && objectToString(d) === '[object Date]';\n                }\n                exports.isDate = isDate;\n                exports.types.isDate = isDate;\n                \n                function isError(e) {\n                  return isObject(e) &&\n                      (objectToString(e) === '[object Error]' || e instanceof Error);\n                }\n                exports.isError = isError;\n                exports.types.isNativeError = isError;\n                \n                function isFunction(arg) {\n                  return typeof arg === 'function';\n                }\n                exports.isFunction = isFunction;\n                \n                function isPrimitive(arg) {\n                  return arg === null ||\n                         typeof arg === 'boolean' ||\n                         typeof arg === 'number' ||\n                         typeof arg === 'string' ||\n                         typeof arg === 'symbol' ||  // ES6 symbol\n                         typeof arg === 'undefined';\n                }\n                exports.isPrimitive = isPrimitive;\n                \n                exports.isBuffer = require('./support/isBuffer');\n                \n                function objectToString(o) {\n                  return Object.prototype.toString.call(o);\n                }\n                \n                \n                function pad(n) {\n                  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n                }\n                \n                \n                var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n                              'Oct', 'Nov', 'Dec'];\n                \n                // 26 Feb 16:19:34\n                function timestamp() {\n                  var d = new Date();\n                  var time = [pad(d.getHours()),\n                              pad(d.getMinutes()),\n                              pad(d.getSeconds())].join(':');\n                  return [d.getDate(), months[d.getMonth()], time].join(' ');\n                }\n                \n                \n                // log is just a thin wrapper to console.log that prepends a timestamp\n                exports.log = function() {\n                  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n                };\n                \n                \n                /**\n                 * Inherit the prototype methods from one constructor into another.\n                 *\n                 * The Function.prototype.inherits from lang.js rewritten as a standalone\n                 * function (not on Function.prototype). NOTE: If this file is to be loaded\n                 * during bootstrapping this function needs to be rewritten using some native\n                 * functions as prototype setup using normal JavaScript does not work as\n                 * expected during bootstrapping (see mirror.js in r114903).\n                 *\n                 * @param {function} ctor Constructor function which needs to inherit the\n                 *     prototype.\n                 * @param {function} superCtor Constructor function to inherit prototype from.\n                 */\n                exports.inherits = require('inherits');\n                \n                exports._extend = function(origin, add) {\n                  // Don't do anything if add isn't an object\n                  if (!add || !isObject(add)) return origin;\n                \n                  var keys = Object.keys(add);\n                  var i = keys.length;\n                  while (i--) {\n                    origin[keys[i]] = add[keys[i]];\n                  }\n                  return origin;\n                };\n                \n                function hasOwnProperty(obj, prop) {\n                  return Object.prototype.hasOwnProperty.call(obj, prop);\n                }\n                \n                var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n                \n                exports.promisify = function promisify(original) {\n                  if (typeof original !== 'function')\n                    throw new TypeError('The \"original\" argument must be of type Function');\n                \n                  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n                    var fn = original[kCustomPromisifiedSymbol];\n                    if (typeof fn !== 'function') {\n                      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n                    }\n                    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n                      value: fn, enumerable: false, writable: false, configurable: true\n                    });\n                    return fn;\n                  }\n                \n                  function fn() {\n                    var promiseResolve, promiseReject;\n                    var promise = new Promise(function (resolve, reject) {\n                      promiseResolve = resolve;\n                      promiseReject = reject;\n                    });\n                \n                    var args = [];\n                    for (var i = 0; i < arguments.length; i++) {\n                      args.push(arguments[i]);\n                    }\n                    args.push(function (err, value) {\n                      if (err) {\n                        promiseReject(err);\n                      } else {\n                        promiseResolve(value);\n                      }\n                    });\n                \n                    try {\n                      original.apply(this, args);\n                    } catch (err) {\n                      promiseReject(err);\n                    }\n                \n                    return promise;\n                  }\n                \n                  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n                \n                  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n                    value: fn, enumerable: false, writable: false, configurable: true\n                  });\n                  return Object.defineProperties(\n                    fn,\n                    getOwnPropertyDescriptors(original)\n                  );\n                }\n                \n                exports.promisify.custom = kCustomPromisifiedSymbol\n                \n                function callbackifyOnRejected(reason, cb) {\n                  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n                  // Because `null` is a special error value in callbacks which means \"no error\n                  // occurred\", we error-wrap so the callback consumer can distinguish between\n                  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n                  if (!reason) {\n                    var newReason = new Error('Promise was rejected with a falsy value');\n                    newReason.reason = reason;\n                    reason = newReason;\n                  }\n                  return cb(reason);\n                }\n                \n                function callbackify(original) {\n                  if (typeof original !== 'function') {\n                    throw new TypeError('The \"original\" argument must be of type Function');\n                  }\n                \n                  // We DO NOT return the promise as it gives the user a false sense that\n                  // the promise is actually somehow related to the callback's execution\n                  // and that the callback throwing will reject the promise.\n                  function callbackified() {\n                    var args = [];\n                    for (var i = 0; i < arguments.length; i++) {\n                      args.push(arguments[i]);\n                    }\n                \n                    var maybeCb = args.pop();\n                    if (typeof maybeCb !== 'function') {\n                      throw new TypeError('The last argument must be of type Function');\n                    }\n                    var self = this;\n                    var cb = function() {\n                      return maybeCb.apply(self, arguments);\n                    };\n                    // In true node style we process the callback on `nextTick` with all the\n                    // implications (stack, `uncaughtException`, `async_hooks`)\n                    original.apply(this, args)\n                      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n                            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n                  }\n                \n                  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n                  Object.defineProperties(callbackified,\n                                          getOwnPropertyDescriptors(original));\n                  return callbackified;\n                }\n                exports.callbackify = callbackify;\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/util.js sha1 = 6c4ffc8c5c96de1ecf5d8fe3422e9cd99f3b5200\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util\"),\"util.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util\")},\n    \"./support/types\" : {\n            name:\"types\",\n            path:\"../node_modules/browser-util/support/types.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/types.js\n                // Currently in sync with Node.js lib/internal/util/types.js\n                // https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n                \n                'use strict';\n                \n                var isBuffer = require('./isBuffer');\n                \n                var isArgumentsObject = require('is-arguments');\n                var isGeneratorFunction = require('is-generator-function');\n                \n                function uncurryThis(f) {\n                  return f.call.bind(f);\n                }\n                \n                var BigIntSupported = typeof BigInt !== 'undefined';\n                var SymbolSupported = typeof Symbol !== 'undefined';\n                var SymbolToStringTagSupported = SymbolSupported && typeof Symbol.toStringTag !== 'undefined';\n                var Uint8ArraySupported = typeof Uint8Array !== 'undefined';\n                var ArrayBufferSupported = typeof ArrayBuffer !== 'undefined';\n                \n                if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                  var TypedArrayPrototype = Object.getPrototypeOf(Uint8Array.prototype);\n                \n                  var TypedArrayProto_toStringTag =\n                      uncurryThis(\n                        Object.getOwnPropertyDescriptor(TypedArrayPrototype,\n                                                        Symbol.toStringTag).get);\n                \n                }\n                \n                var ObjectToString = uncurryThis(Object.prototype.toString);\n                \n                var numberValue = uncurryThis(Number.prototype.valueOf);\n                var stringValue = uncurryThis(String.prototype.valueOf);\n                var booleanValue = uncurryThis(Boolean.prototype.valueOf);\n                \n                if (BigIntSupported) {\n                  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n                }\n                \n                if (SymbolSupported) {\n                  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n                }\n                \n                function checkBoxedPrimitive(value, prototypeValueOf) {\n                  if (typeof value !== 'object') {\n                    return false;\n                  }\n                  try {\n                    prototypeValueOf(value);\n                    return true;\n                  } catch(e) {\n                    return false;\n                  }\n                }\n                \n                exports.isArgumentsObject = isArgumentsObject;\n                \n                exports.isGeneratorFunction = isGeneratorFunction;\n                \n                // Taken from here and modified for better browser support\n                // https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\n                function isPromise(input) {\n                    return (\n                        (\n                            typeof Promise !== 'undefined' &&\n                            input instanceof Promise\n                        ) ||\n                        (\n                            input !== null &&\n                            typeof input === 'object' &&\n                            typeof input.then === 'function' &&\n                            typeof input.catch === 'function'\n                        )\n                    );\n                }\n                exports.isPromise = isPromise;\n                \n                function isArrayBufferView(value) {\n                  if (ArrayBufferSupported && ArrayBuffer.isView) {\n                    return ArrayBuffer.isView(value);\n                  }\n                \n                  return (\n                    isTypedArray(value) ||\n                    isDataView(value)\n                  );\n                }\n                exports.isArrayBufferView = isArrayBufferView;\n                \n                function isTypedArray(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) !== undefined;\n                  } else {\n                    return (\n                      isUint8Array(value) ||\n                      isUint8ClampedArray(value) ||\n                      isUint16Array(value) ||\n                      isUint32Array(value) ||\n                      isInt8Array(value) ||\n                      isInt16Array(value) ||\n                      isInt32Array(value) ||\n                      isFloat32Array(value) ||\n                      isFloat64Array(value) ||\n                      isBigInt64Array(value) ||\n                      isBigUint64Array(value)\n                    );\n                  }\n                }\n                exports.isTypedArray = isTypedArray;\n                \n                function isUint8Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Uint8Array';\n                  } else {\n                    return (\n                      ObjectToString(value) === '[object Uint8Array]' ||\n                      // If it's a Buffer instance _and_ has a `.buffer` property,\n                      // this is an ArrayBuffer based buffer; thus it's an Uint8Array\n                      // (Old Node.js had a custom non-Uint8Array implementation)\n                      isBuffer(value) && value.buffer !== undefined\n                    );\n                  }\n                }\n                exports.isUint8Array = isUint8Array;\n                \n                function isUint8ClampedArray(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Uint8ClampedArray';\n                  } else {\n                    return ObjectToString(value) === '[object Uint8ClampedArray]';\n                  }\n                }\n                exports.isUint8ClampedArray = isUint8ClampedArray;\n                \n                function isUint16Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Uint16Array';\n                  } else {\n                    return ObjectToString(value) === '[object Uint16Array]';\n                  }\n                }\n                exports.isUint16Array = isUint16Array;\n                \n                function isUint32Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Uint32Array';\n                  } else {\n                    return ObjectToString(value) === '[object Uint32Array]';\n                  }\n                }\n                exports.isUint32Array = isUint32Array;\n                \n                function isInt8Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Int8Array';\n                  } else {\n                    return ObjectToString(value) === '[object Int8Array]';\n                  }\n                }\n                exports.isInt8Array = isInt8Array;\n                \n                function isInt16Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Int16Array';\n                  } else {\n                    return ObjectToString(value) === '[object Int16Array]';\n                  }\n                }\n                exports.isInt16Array = isInt16Array;\n                \n                function isInt32Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Int32Array';\n                  } else {\n                    return ObjectToString(value) === '[object Int32Array]';\n                  }\n                }\n                exports.isInt32Array = isInt32Array;\n                \n                function isFloat32Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Float32Array';\n                  } else {\n                    return ObjectToString(value) === '[object Float32Array]';\n                  }\n                }\n                exports.isFloat32Array = isFloat32Array;\n                \n                function isFloat64Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Float64Array';\n                  } else {\n                    return ObjectToString(value) === '[object Float64Array]';\n                  }\n                }\n                exports.isFloat64Array = isFloat64Array;\n                \n                function isBigInt64Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'BigInt64Array';\n                  } else {\n                    return ObjectToString(value) === '[object BigInt64Array]';\n                  }\n                }\n                exports.isBigInt64Array = isBigInt64Array;\n                \n                function isBigUint64Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'BigUint64Array';\n                  } else {\n                    return ObjectToString(value) === '[object BigUint64Array]';\n                  }\n                }\n                exports.isBigUint64Array = isBigUint64Array;\n                \n                function isMapToString(value) {\n                  return ObjectToString(value) === '[object Map]';\n                }\n                isMapToString.working = (\n                  typeof Map !== 'undefined' &&\n                  isMapToString(new Map())\n                );\n                \n                function isMap(value) {\n                  if (typeof Map === 'undefined') {\n                    return false;\n                  }\n                \n                  return isMapToString.working\n                    ? isMapToString(value)\n                    : value instanceof Map;\n                }\n                exports.isMap = isMap;\n                \n                function isSetToString(value) {\n                  return ObjectToString(value) === '[object Set]';\n                }\n                isSetToString.working = (\n                  typeof Set !== 'undefined' &&\n                  isSetToString(new Set())\n                );\n                function isSet(value) {\n                  if (typeof Set === 'undefined') {\n                    return false;\n                  }\n                \n                  return isSetToString.working\n                    ? isSetToString(value)\n                    : value instanceof Set;\n                }\n                exports.isSet = isSet;\n                \n                function isWeakMapToString(value) {\n                  return ObjectToString(value) === '[object WeakMap]';\n                }\n                isWeakMapToString.working = (\n                  typeof WeakMap !== 'undefined' &&\n                  isWeakMapToString(new WeakMap())\n                );\n                function isWeakMap(value) {\n                  if (typeof WeakMap === 'undefined') {\n                    return false;\n                  }\n                \n                  return isWeakMapToString.working\n                    ? isWeakMapToString(value)\n                    : value instanceof WeakMap;\n                }\n                exports.isWeakMap = isWeakMap;\n                \n                function isWeakSetToString(value) {\n                  return ObjectToString(value) === '[object WeakSet]';\n                }\n                isWeakSetToString.working = (\n                  typeof WeakSet !== 'undefined' &&\n                  isWeakSetToString(new WeakSet())\n                );\n                function isWeakSet(value) {\n                  return isWeakSetToString(value);\n                  if (typeof WeakSet === 'undefined') {\n                    return false;\n                  }\n                \n                  return isWeakSetToString.working\n                    ? isWeakSetToString(value)\n                    : value instanceof WeakSet;\n                }\n                exports.isWeakSet = isWeakSet;\n                \n                function isArrayBufferToString(value) {\n                  return ObjectToString(value) === '[object ArrayBuffer]';\n                }\n                isArrayBufferToString.working = (\n                  typeof ArrayBuffer !== 'undefined' &&\n                  isArrayBufferToString(new ArrayBuffer())\n                );\n                function isArrayBuffer(value) {\n                  if (typeof ArrayBuffer === 'undefined') {\n                    return false;\n                  }\n                \n                  return isArrayBufferToString.working\n                    ? isArrayBufferToString(value)\n                    : value instanceof ArrayBuffer;\n                }\n                exports.isArrayBuffer = isArrayBuffer;\n                \n                function isDataViewToString(value) {\n                  return ObjectToString(value) === '[object DataView]';\n                }\n                isDataViewToString.working = (\n                  typeof ArrayBuffer !== 'undefined' &&\n                  typeof DataView !== 'undefined' &&\n                  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n                );\n                function isDataView(value) {\n                  if (typeof DataView === 'undefined') {\n                    return false;\n                  }\n                \n                  return isDataViewToString.working\n                    ? isDataViewToString(value)\n                    : value instanceof DataView;\n                }\n                exports.isDataView = isDataView;\n                \n                function isSharedArrayBufferToString(value) {\n                  return ObjectToString(value) === '[object SharedArrayBuffer]';\n                }\n                isSharedArrayBufferToString.working = (\n                  typeof SharedArrayBuffer !== 'undefined' &&\n                  isSharedArrayBufferToString(new SharedArrayBuffer())\n                );\n                function isSharedArrayBuffer(value) {\n                  if (typeof SharedArrayBuffer === 'undefined') {\n                    return false;\n                  }\n                \n                  return isSharedArrayBufferToString.working\n                    ? isSharedArrayBufferToString(value)\n                    : value instanceof SharedArrayBuffer;\n                }\n                exports.isSharedArrayBuffer = isSharedArrayBuffer;\n                \n                function isAsyncFunction(value) {\n                  return ObjectToString(value) === '[object AsyncFunction]';\n                }\n                exports.isAsyncFunction = isAsyncFunction;\n                \n                function isMapIterator(value) {\n                  return ObjectToString(value) === '[object Map Iterator]';\n                }\n                exports.isMapIterator = isMapIterator;\n                \n                function isSetIterator(value) {\n                  return ObjectToString(value) === '[object Set Iterator]';\n                }\n                exports.isSetIterator = isSetIterator;\n                \n                function isGeneratorObject(value) {\n                  return ObjectToString(value) === '[object Generator]';\n                }\n                exports.isGeneratorObject = isGeneratorObject;\n                \n                function isWebAssemblyCompiledModule(value) {\n                  return ObjectToString(value) === '[object WebAssembly.Module]';\n                }\n                exports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n                \n                function isNumberObject(value) {\n                  return checkBoxedPrimitive(value, numberValue);\n                }\n                exports.isNumberObject = isNumberObject;\n                \n                function isStringObject(value) {\n                  return checkBoxedPrimitive(value, stringValue);\n                }\n                exports.isStringObject = isStringObject;\n                \n                function isBooleanObject(value) {\n                  return checkBoxedPrimitive(value, booleanValue);\n                }\n                exports.isBooleanObject = isBooleanObject;\n                \n                function isBigIntObject(value) {\n                  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n                }\n                exports.isBigIntObject = isBigIntObject;\n                \n                function isSymbolObject(value) {\n                  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n                }\n                exports.isSymbolObject = isSymbolObject;\n                \n                function isBoxedPrimitive(value) {\n                  return (\n                    isNumberObject(value) ||\n                    isStringObject(value) ||\n                    isBooleanObject(value) ||\n                    isBigIntObject(value) ||\n                    isSymbolObject(value)\n                  );\n                }\n                exports.isBoxedPrimitive = isBoxedPrimitive;\n                \n                function isAnyArrayBuffer(value) {\n                  return Uint8ArraySupported && (\n                    isArrayBuffer(value) ||\n                    isSharedArrayBuffer(value)\n                  );\n                }\n                exports.isAnyArrayBuffer = isAnyArrayBuffer;\n                \n                ['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n                  Object.defineProperty(exports, method, {\n                    enumerable: false,\n                    value: function() {\n                      throw new Error(method + ' is not supported in userland');\n                    }\n                  });\n                });\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/types.js sha1 = 3bfa608d786eeb0caad9f69079a1a13006fd50a9\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\"),\"types.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\")},\n    \"./support/isBuffer\" : {\n            name:\"isBuffer\",\n            path:\"../node_modules/browser-util/support/isBuffer.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js\n                module.exports = function isBuffer(arg) {\n                  return arg instanceof Buffer;\n                }\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js sha1 = ab526fa0e6a7e7f560d2126a632cc8342158334d\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\"),\"isBuffer.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\")},\n    \"inherits\" : {\n            name:\"inherits\",\n            path:\"../node_modules/inherits/inherits.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/inherits/inherits.js\n                try {\n                  var util = require('util');\n                  if (typeof util.inherits !== 'function') throw '';\n                  module.exports = util.inherits;\n                } catch (e) {\n                  module.exports = require('./inherits_browser.js');\n                }\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/inherits/inherits.js sha1 = 491caba7b70590f6dcbe37d7edccd9f89ac1b9fd\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/inherits\"),\"inherits.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/inherits\")},\n    \"./support/types\" : {\n            name:\"types\",\n            path:\"../node_modules/browser-util/support/types.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/types.js\n                // Currently in sync with Node.js lib/internal/util/types.js\n                // https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n                \n                'use strict';\n                \n                var isBuffer = require('./isBuffer');\n                \n                var isArgumentsObject = require('is-arguments');\n                var isGeneratorFunction = require('is-generator-function');\n                \n                function uncurryThis(f) {\n                  return f.call.bind(f);\n                }\n                \n                var BigIntSupported = typeof BigInt !== 'undefined';\n                var SymbolSupported = typeof Symbol !== 'undefined';\n                var SymbolToStringTagSupported = SymbolSupported && typeof Symbol.toStringTag !== 'undefined';\n                var Uint8ArraySupported = typeof Uint8Array !== 'undefined';\n                var ArrayBufferSupported = typeof ArrayBuffer !== 'undefined';\n                \n                if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                  var TypedArrayPrototype = Object.getPrototypeOf(Uint8Array.prototype);\n                \n                  var TypedArrayProto_toStringTag =\n                      uncurryThis(\n                        Object.getOwnPropertyDescriptor(TypedArrayPrototype,\n                                                        Symbol.toStringTag).get);\n                \n                }\n                \n                var ObjectToString = uncurryThis(Object.prototype.toString);\n                \n                var numberValue = uncurryThis(Number.prototype.valueOf);\n                var stringValue = uncurryThis(String.prototype.valueOf);\n                var booleanValue = uncurryThis(Boolean.prototype.valueOf);\n                \n                if (BigIntSupported) {\n                  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n                }\n                \n                if (SymbolSupported) {\n                  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n                }\n                \n                function checkBoxedPrimitive(value, prototypeValueOf) {\n                  if (typeof value !== 'object') {\n                    return false;\n                  }\n                  try {\n                    prototypeValueOf(value);\n                    return true;\n                  } catch(e) {\n                    return false;\n                  }\n                }\n                \n                exports.isArgumentsObject = isArgumentsObject;\n                \n                exports.isGeneratorFunction = isGeneratorFunction;\n                \n                // Taken from here and modified for better browser support\n                // https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\n                function isPromise(input) {\n                    return (\n                        (\n                            typeof Promise !== 'undefined' &&\n                            input instanceof Promise\n                        ) ||\n                        (\n                            input !== null &&\n                            typeof input === 'object' &&\n                            typeof input.then === 'function' &&\n                            typeof input.catch === 'function'\n                        )\n                    );\n                }\n                exports.isPromise = isPromise;\n                \n                function isArrayBufferView(value) {\n                  if (ArrayBufferSupported && ArrayBuffer.isView) {\n                    return ArrayBuffer.isView(value);\n                  }\n                \n                  return (\n                    isTypedArray(value) ||\n                    isDataView(value)\n                  );\n                }\n                exports.isArrayBufferView = isArrayBufferView;\n                \n                function isTypedArray(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) !== undefined;\n                  } else {\n                    return (\n                      isUint8Array(value) ||\n                      isUint8ClampedArray(value) ||\n                      isUint16Array(value) ||\n                      isUint32Array(value) ||\n                      isInt8Array(value) ||\n                      isInt16Array(value) ||\n                      isInt32Array(value) ||\n                      isFloat32Array(value) ||\n                      isFloat64Array(value) ||\n                      isBigInt64Array(value) ||\n                      isBigUint64Array(value)\n                    );\n                  }\n                }\n                exports.isTypedArray = isTypedArray;\n                \n                function isUint8Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Uint8Array';\n                  } else {\n                    return (\n                      ObjectToString(value) === '[object Uint8Array]' ||\n                      // If it's a Buffer instance _and_ has a `.buffer` property,\n                      // this is an ArrayBuffer based buffer; thus it's an Uint8Array\n                      // (Old Node.js had a custom non-Uint8Array implementation)\n                      isBuffer(value) && value.buffer !== undefined\n                    );\n                  }\n                }\n                exports.isUint8Array = isUint8Array;\n                \n                function isUint8ClampedArray(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Uint8ClampedArray';\n                  } else {\n                    return ObjectToString(value) === '[object Uint8ClampedArray]';\n                  }\n                }\n                exports.isUint8ClampedArray = isUint8ClampedArray;\n                \n                function isUint16Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Uint16Array';\n                  } else {\n                    return ObjectToString(value) === '[object Uint16Array]';\n                  }\n                }\n                exports.isUint16Array = isUint16Array;\n                \n                function isUint32Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Uint32Array';\n                  } else {\n                    return ObjectToString(value) === '[object Uint32Array]';\n                  }\n                }\n                exports.isUint32Array = isUint32Array;\n                \n                function isInt8Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Int8Array';\n                  } else {\n                    return ObjectToString(value) === '[object Int8Array]';\n                  }\n                }\n                exports.isInt8Array = isInt8Array;\n                \n                function isInt16Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Int16Array';\n                  } else {\n                    return ObjectToString(value) === '[object Int16Array]';\n                  }\n                }\n                exports.isInt16Array = isInt16Array;\n                \n                function isInt32Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Int32Array';\n                  } else {\n                    return ObjectToString(value) === '[object Int32Array]';\n                  }\n                }\n                exports.isInt32Array = isInt32Array;\n                \n                function isFloat32Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Float32Array';\n                  } else {\n                    return ObjectToString(value) === '[object Float32Array]';\n                  }\n                }\n                exports.isFloat32Array = isFloat32Array;\n                \n                function isFloat64Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'Float64Array';\n                  } else {\n                    return ObjectToString(value) === '[object Float64Array]';\n                  }\n                }\n                exports.isFloat64Array = isFloat64Array;\n                \n                function isBigInt64Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'BigInt64Array';\n                  } else {\n                    return ObjectToString(value) === '[object BigInt64Array]';\n                  }\n                }\n                exports.isBigInt64Array = isBigInt64Array;\n                \n                function isBigUint64Array(value) {\n                  if (Uint8ArraySupported && SymbolToStringTagSupported) {\n                    return TypedArrayProto_toStringTag(value) === 'BigUint64Array';\n                  } else {\n                    return ObjectToString(value) === '[object BigUint64Array]';\n                  }\n                }\n                exports.isBigUint64Array = isBigUint64Array;\n                \n                function isMapToString(value) {\n                  return ObjectToString(value) === '[object Map]';\n                }\n                isMapToString.working = (\n                  typeof Map !== 'undefined' &&\n                  isMapToString(new Map())\n                );\n                \n                function isMap(value) {\n                  if (typeof Map === 'undefined') {\n                    return false;\n                  }\n                \n                  return isMapToString.working\n                    ? isMapToString(value)\n                    : value instanceof Map;\n                }\n                exports.isMap = isMap;\n                \n                function isSetToString(value) {\n                  return ObjectToString(value) === '[object Set]';\n                }\n                isSetToString.working = (\n                  typeof Set !== 'undefined' &&\n                  isSetToString(new Set())\n                );\n                function isSet(value) {\n                  if (typeof Set === 'undefined') {\n                    return false;\n                  }\n                \n                  return isSetToString.working\n                    ? isSetToString(value)\n                    : value instanceof Set;\n                }\n                exports.isSet = isSet;\n                \n                function isWeakMapToString(value) {\n                  return ObjectToString(value) === '[object WeakMap]';\n                }\n                isWeakMapToString.working = (\n                  typeof WeakMap !== 'undefined' &&\n                  isWeakMapToString(new WeakMap())\n                );\n                function isWeakMap(value) {\n                  if (typeof WeakMap === 'undefined') {\n                    return false;\n                  }\n                \n                  return isWeakMapToString.working\n                    ? isWeakMapToString(value)\n                    : value instanceof WeakMap;\n                }\n                exports.isWeakMap = isWeakMap;\n                \n                function isWeakSetToString(value) {\n                  return ObjectToString(value) === '[object WeakSet]';\n                }\n                isWeakSetToString.working = (\n                  typeof WeakSet !== 'undefined' &&\n                  isWeakSetToString(new WeakSet())\n                );\n                function isWeakSet(value) {\n                  return isWeakSetToString(value);\n                  if (typeof WeakSet === 'undefined') {\n                    return false;\n                  }\n                \n                  return isWeakSetToString.working\n                    ? isWeakSetToString(value)\n                    : value instanceof WeakSet;\n                }\n                exports.isWeakSet = isWeakSet;\n                \n                function isArrayBufferToString(value) {\n                  return ObjectToString(value) === '[object ArrayBuffer]';\n                }\n                isArrayBufferToString.working = (\n                  typeof ArrayBuffer !== 'undefined' &&\n                  isArrayBufferToString(new ArrayBuffer())\n                );\n                function isArrayBuffer(value) {\n                  if (typeof ArrayBuffer === 'undefined') {\n                    return false;\n                  }\n                \n                  return isArrayBufferToString.working\n                    ? isArrayBufferToString(value)\n                    : value instanceof ArrayBuffer;\n                }\n                exports.isArrayBuffer = isArrayBuffer;\n                \n                function isDataViewToString(value) {\n                  return ObjectToString(value) === '[object DataView]';\n                }\n                isDataViewToString.working = (\n                  typeof ArrayBuffer !== 'undefined' &&\n                  typeof DataView !== 'undefined' &&\n                  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n                );\n                function isDataView(value) {\n                  if (typeof DataView === 'undefined') {\n                    return false;\n                  }\n                \n                  return isDataViewToString.working\n                    ? isDataViewToString(value)\n                    : value instanceof DataView;\n                }\n                exports.isDataView = isDataView;\n                \n                function isSharedArrayBufferToString(value) {\n                  return ObjectToString(value) === '[object SharedArrayBuffer]';\n                }\n                isSharedArrayBufferToString.working = (\n                  typeof SharedArrayBuffer !== 'undefined' &&\n                  isSharedArrayBufferToString(new SharedArrayBuffer())\n                );\n                function isSharedArrayBuffer(value) {\n                  if (typeof SharedArrayBuffer === 'undefined') {\n                    return false;\n                  }\n                \n                  return isSharedArrayBufferToString.working\n                    ? isSharedArrayBufferToString(value)\n                    : value instanceof SharedArrayBuffer;\n                }\n                exports.isSharedArrayBuffer = isSharedArrayBuffer;\n                \n                function isAsyncFunction(value) {\n                  return ObjectToString(value) === '[object AsyncFunction]';\n                }\n                exports.isAsyncFunction = isAsyncFunction;\n                \n                function isMapIterator(value) {\n                  return ObjectToString(value) === '[object Map Iterator]';\n                }\n                exports.isMapIterator = isMapIterator;\n                \n                function isSetIterator(value) {\n                  return ObjectToString(value) === '[object Set Iterator]';\n                }\n                exports.isSetIterator = isSetIterator;\n                \n                function isGeneratorObject(value) {\n                  return ObjectToString(value) === '[object Generator]';\n                }\n                exports.isGeneratorObject = isGeneratorObject;\n                \n                function isWebAssemblyCompiledModule(value) {\n                  return ObjectToString(value) === '[object WebAssembly.Module]';\n                }\n                exports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n                \n                function isNumberObject(value) {\n                  return checkBoxedPrimitive(value, numberValue);\n                }\n                exports.isNumberObject = isNumberObject;\n                \n                function isStringObject(value) {\n                  return checkBoxedPrimitive(value, stringValue);\n                }\n                exports.isStringObject = isStringObject;\n                \n                function isBooleanObject(value) {\n                  return checkBoxedPrimitive(value, booleanValue);\n                }\n                exports.isBooleanObject = isBooleanObject;\n                \n                function isBigIntObject(value) {\n                  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n                }\n                exports.isBigIntObject = isBigIntObject;\n                \n                function isSymbolObject(value) {\n                  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n                }\n                exports.isSymbolObject = isSymbolObject;\n                \n                function isBoxedPrimitive(value) {\n                  return (\n                    isNumberObject(value) ||\n                    isStringObject(value) ||\n                    isBooleanObject(value) ||\n                    isBigIntObject(value) ||\n                    isSymbolObject(value)\n                  );\n                }\n                exports.isBoxedPrimitive = isBoxedPrimitive;\n                \n                function isAnyArrayBuffer(value) {\n                  return Uint8ArraySupported && (\n                    isArrayBuffer(value) ||\n                    isSharedArrayBuffer(value)\n                  );\n                }\n                exports.isAnyArrayBuffer = isAnyArrayBuffer;\n                \n                ['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n                  Object.defineProperty(exports, method, {\n                    enumerable: false,\n                    value: function() {\n                      throw new Error(method + ' is not supported in userland');\n                    }\n                  });\n                });\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/types.js sha1 = 3bfa608d786eeb0caad9f69079a1a13006fd50a9\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\"),\"types.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\")},\n    \"./isBuffer\" : {\n            name:\"isBuffer\",\n            path:\"../node_modules/browser-util/support/isBuffer.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js\n                module.exports = function isBuffer(arg) {\n                  return arg instanceof Buffer;\n                }\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js sha1 = ab526fa0e6a7e7f560d2126a632cc8342158334d\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\"),\"isBuffer.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\")},\n    \"is-arguments\" : {\n            name:\"is-arguments\",\n            path:\"../node_modules/is-arguments/index.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/is-arguments/index.js\n                'use strict';\n                \n                var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n                var toStr = Object.prototype.toString;\n                \n                var isStandardArguments = function isArguments(value) {\n                    if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n                        return false;\n                    }\n                    return toStr.call(value) === '[object Arguments]';\n                };\n                \n                var isLegacyArguments = function isArguments(value) {\n                    if (isStandardArguments(value)) {\n                        return true;\n                    }\n                    return value !== null &&\n                        typeof value === 'object' &&\n                        typeof value.length === 'number' &&\n                        value.length >= 0 &&\n                        toStr.call(value) !== '[object Array]' &&\n                        toStr.call(value.callee) === '[object Function]';\n                };\n                \n                var supportsStandardArguments = (function () {\n                    return isStandardArguments(arguments);\n                }());\n                \n                isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n                \n                module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/is-arguments/index.js sha1 = 03e026d417599e244476071ea2b165c63bb647a5\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/is-arguments\"),\"index.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/is-arguments\")},\n    \"is-generator-function\" : {\n            name:\"is-generator-function\",\n            path:\"../node_modules/is-generator-function/index.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/is-generator-function/index.js\n                'use strict';\n                \n                var toStr = Object.prototype.toString;\n                var fnToStr = Function.prototype.toString;\n                var isFnRegex = /^\\s*(?:function)?\\*/;\n                var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n                var getProto = Object.getPrototypeOf;\n                var getGeneratorFunc = function () { // eslint-disable-line consistent-return\n                    if (!hasToStringTag) {\n                        return false;\n                    }\n                    try {\n                        return Function('return function*() {}')();\n                    } catch (e) {\n                    }\n                };\n                var generatorFunc = getGeneratorFunc();\n                var GeneratorFunction = generatorFunc ? getProto(generatorFunc) : {};\n                \n                module.exports = function isGeneratorFunction(fn) {\n                    if (typeof fn !== 'function') {\n                        return false;\n                    }\n                    if (isFnRegex.test(fnToStr.call(fn))) {\n                        return true;\n                    }\n                    if (!hasToStringTag) {\n                        var str = toStr.call(fn);\n                        return str === '[object GeneratorFunction]';\n                    }\n                    return getProto(fn) === GeneratorFunction;\n                };\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/is-generator-function/index.js sha1 = aa4dacfbf2826bea0fdfb40c9e566137f53456b9\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/is-generator-function\"),\"index.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/is-generator-function\")},\n    \"./inherits_browser.js\" : {\n            name:\"inherits\",\n            path:\"../node_modules/inherits/inherits_browser.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/inherits/inherits_browser.js\n                if (typeof Object.create === 'function') {\n                  // implementation from standard node.js 'util' module\n                  module.exports = function inherits(ctor, superCtor) {\n                    ctor.super_ = superCtor\n                    ctor.prototype = Object.create(superCtor.prototype, {\n                      constructor: {\n                        value: ctor,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                      }\n                    });\n                  };\n                } else {\n                  // old school shim for old browsers\n                  module.exports = function inherits(ctor, superCtor) {\n                    ctor.super_ = superCtor\n                    var TempCtor = function () {}\n                    TempCtor.prototype = superCtor.prototype\n                    ctor.prototype = new TempCtor()\n                    ctor.prototype.constructor = ctor\n                  }\n                }\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/inherits/inherits_browser.js sha1 = 7c13eacf36e79e5e7dd257d80ec25846e4df7eb3\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/inherits\"),\"inherits_browser.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/inherits\")},\n    \"./isBuffer\" : {\n            name:\"isBuffer\",\n            path:\"../node_modules/browser-util/support/isBuffer.js\",\n            load: (function (module,require,__filename,__dirname){var exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js\n                module.exports = function isBuffer(arg) {\n                  return arg instanceof Buffer;\n                }\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js sha1 = ab526fa0e6a7e7f560d2126a632cc8342158334d\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\"),\"isBuffer.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\")},\n    \"path\" : {\n            name:\"browser-path\",\n            path:\"../node_modules/browser-path/path.js\",\n            load: (function (module,require,__filename,__dirname){var process = {\n        \"env\": {},\n        \"cwd\": function(){ return \"/\";}\n    },exports = module.exports;\n             // paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-path/path.js\n                // Copyright Joyent, Inc. and other Node contributors.\n                //\n                // Permission is hereby granted, free of charge, to any person obtaining a\n                // copy of this software and associated documentation files (the\n                // \"Software\"), to deal in the Software without restriction, including\n                // without limitation the rights to use, copy, modify, merge, publish,\n                // distribute, sublicense, and/or sell copies of the Software, and to permit\n                // persons to whom the Software is furnished to do so, subject to the\n                // following conditions:\n                //\n                // The above copyright notice and this permission notice shall be included\n                // in all copies or substantial portions of the Software.\n                //\n                // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n                // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n                // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n                // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n                // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n                // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n                // USE OR OTHER DEALINGS IN THE SOFTWARE.\n                \n                'use strict';\n                \n                \n                var isWindows = process.platform === 'win32';\n                var util = require('util');\n                \n                \n                // resolves . and .. elements in a path array with directory names there\n                // must be no slashes or device names (c:\\) in the array\n                // (so also no leading and trailing slashes - it does not distinguish\n                // relative and absolute paths)\n                function normalizeArray(parts, allowAboveRoot) {\n                  var res = [];\n                  for (var i = 0; i < parts.length; i++) {\n                    var p = parts[i];\n                \n                    // ignore empty parts\n                    if (!p || p === '.')\n                      continue;\n                \n                    if (p === '..') {\n                      if (res.length && res[res.length - 1] !== '..') {\n                        res.pop();\n                      } else if (allowAboveRoot) {\n                        res.push('..');\n                      }\n                    } else {\n                      res.push(p);\n                    }\n                  }\n                \n                  return res;\n                }\n                \n                // returns an array with empty elements removed from either end of the input\n                // array or the original array if no elements need to be removed\n                function trimArray(arr) {\n                  var lastIndex = arr.length - 1;\n                  var start = 0;\n                  for (; start <= lastIndex; start++) {\n                    if (arr[start])\n                      break;\n                  }\n                \n                  var end = lastIndex;\n                  for (; end >= 0; end--) {\n                    if (arr[end])\n                      break;\n                  }\n                \n                  if (start === 0 && end === lastIndex)\n                    return arr;\n                  if (start > end)\n                    return [];\n                  return arr.slice(start, end + 1);\n                }\n                \n                // Regex to split a windows path into three parts: [*, device, slash,\n                // tail] windows-only\n                var splitDeviceRe =\n                    /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n                \n                // Regex to split the tail part of the above into [*, dir, basename, ext]\n                var splitTailRe =\n                    /^([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/;\n                \n                var win32 = {};\n                \n                // Function to split a filename into [root, dir, basename, ext]\n                function win32SplitPath(filename) {\n                  // Separate device+slash from tail\n                  var result = splitDeviceRe.exec(filename),\n                      device = (result[1] || '') + (result[2] || ''),\n                      tail = result[3] || '';\n                  // Split the tail into dir, basename and extension\n                  var result2 = splitTailRe.exec(tail),\n                      dir = result2[1],\n                      basename = result2[2],\n                      ext = result2[3];\n                  return [device, dir, basename, ext];\n                }\n                \n                function win32StatPath(path) {\n                  var result = splitDeviceRe.exec(path),\n                      device = result[1] || '',\n                      isUnc = !!device && device[1] !== ':';\n                  return {\n                    device: device,\n                    isUnc: isUnc,\n                    isAbsolute: isUnc || !!result[2], // UNC paths are always absolute\n                    tail: result[3]\n                  };\n                }\n                \n                function normalizeUNCRoot(device) {\n                  return '\\\\\\\\' + device.replace(/^[\\\\\\/]+/, '').replace(/[\\\\\\/]+/g, '\\\\');\n                }\n                \n                // path.resolve([from ...], to)\n                win32.resolve = function() {\n                  var resolvedDevice = '',\n                      resolvedTail = '',\n                      resolvedAbsolute = false;\n                \n                  for (var i = arguments.length - 1; i >= -1; i--) {\n                    var path;\n                    if (i >= 0) {\n                      path = arguments[i];\n                    } else if (!resolvedDevice) {\n                      path = process.cwd();\n                    } else {\n                      // Windows has the concept of drive-specific current working\n                      // directories. If we've resolved a drive letter but not yet an\n                      // absolute path, get cwd for that drive. We're sure the device is not\n                      // an unc path at this points, because unc paths are always absolute.\n                      path = process.env['=' + resolvedDevice];\n                      // Verify that a drive-local cwd was found and that it actually points\n                      // to our drive. If not, default to the drive's root.\n                      if (!path || path.substr(0, 3).toLowerCase() !==\n                          resolvedDevice.toLowerCase() + '\\\\') {\n                        path = resolvedDevice + '\\\\';\n                      }\n                    }\n                \n                    // Skip empty and invalid entries\n                    if (!util.isString(path)) {\n                      throw new TypeError('Arguments to path.resolve must be strings');\n                    } else if (!path) {\n                      continue;\n                    }\n                \n                    var result = win32StatPath(path),\n                        device = result.device,\n                        isUnc = result.isUnc,\n                        isAbsolute = result.isAbsolute,\n                        tail = result.tail;\n                \n                    if (device &&\n                        resolvedDevice &&\n                        device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                      // This path points to another device so it is not applicable\n                      continue;\n                    }\n                \n                    if (!resolvedDevice) {\n                      resolvedDevice = device;\n                    }\n                    if (!resolvedAbsolute) {\n                      resolvedTail = tail + '\\\\' + resolvedTail;\n                      resolvedAbsolute = isAbsolute;\n                    }\n                \n                    if (resolvedDevice && resolvedAbsolute) {\n                      break;\n                    }\n                  }\n                \n                  // Convert slashes to backslashes when `resolvedDevice` points to an UNC\n                  // root. Also squash multiple slashes into a single one where appropriate.\n                  if (isUnc) {\n                    resolvedDevice = normalizeUNCRoot(resolvedDevice);\n                  }\n                \n                  // At this point the path should be resolved to a full absolute path,\n                  // but handle relative paths to be safe (might happen when process.cwd()\n                  // fails)\n                \n                  // Normalize the tail path\n                  resolvedTail = normalizeArray(resolvedTail.split(/[\\\\\\/]+/),\n                                                !resolvedAbsolute).join('\\\\');\n                \n                  return (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\n                         '.';\n                };\n                \n                \n                win32.normalize = function(path) {\n                  var result = win32StatPath(path),\n                      device = result.device,\n                      isUnc = result.isUnc,\n                      isAbsolute = result.isAbsolute,\n                      tail = result.tail,\n                      trailingSlash = /[\\\\\\/]$/.test(tail);\n                \n                  // Normalize the tail path\n                  tail = normalizeArray(tail.split(/[\\\\\\/]+/), !isAbsolute).join('\\\\');\n                \n                  if (!tail && !isAbsolute) {\n                    tail = '.';\n                  }\n                  if (tail && trailingSlash) {\n                    tail += '\\\\';\n                  }\n                \n                  // Convert slashes to backslashes when `device` points to an UNC root.\n                  // Also squash multiple slashes into a single one where appropriate.\n                  if (isUnc) {\n                    device = normalizeUNCRoot(device);\n                  }\n                \n                  return device + (isAbsolute ? '\\\\' : '') + tail;\n                };\n                \n                \n                win32.isAbsolute = function(path) {\n                  return win32StatPath(path).isAbsolute;\n                };\n                \n                win32.join = function() {\n                  var paths = [];\n                  for (var i = 0; i < arguments.length; i++) {\n                    var arg = arguments[i];\n                    if (!util.isString(arg)) {\n                      throw new TypeError('Arguments to path.join must be strings');\n                    }\n                    if (arg) {\n                      paths.push(arg);\n                    }\n                  }\n                \n                  var joined = paths.join('\\\\');\n                \n                  // Make sure that the joined path doesn't start with two slashes, because\n                  // normalize() will mistake it for an UNC path then.\n                  //\n                  // This step is skipped when it is very clear that the user actually\n                  // intended to point at an UNC path. This is assumed when the first\n                  // non-empty string arguments starts with exactly two slashes followed by\n                  // at least one more non-slash character.\n                  //\n                  // Note that for normalize() to treat a path as an UNC path it needs to\n                  // have at least 2 components, so we don't filter for that here.\n                  // This means that the user can use join to construct UNC paths from\n                  // a server name and a share name; for example:\n                  //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\')\n                  if (!/^[\\\\\\/]{2}[^\\\\\\/]/.test(paths[0])) {\n                    joined = joined.replace(/^[\\\\\\/]{2,}/, '\\\\');\n                  }\n                \n                  return win32.normalize(joined);\n                };\n                \n                \n                // path.relative(from, to)\n                // it will solve the relative path from 'from' to 'to', for instance:\n                // from = 'C:\\\\orandea\\\\test\\\\aaa'\n                // to = 'C:\\\\orandea\\\\impl\\\\bbb'\n                // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n                win32.relative = function(from, to) {\n                  from = win32.resolve(from);\n                  to = win32.resolve(to);\n                \n                  // windows is not case sensitive\n                  var lowerFrom = from.toLowerCase();\n                  var lowerTo = to.toLowerCase();\n                \n                  var toParts = trimArray(to.split('\\\\'));\n                \n                  var lowerFromParts = trimArray(lowerFrom.split('\\\\'));\n                  var lowerToParts = trimArray(lowerTo.split('\\\\'));\n                \n                  var length = Math.min(lowerFromParts.length, lowerToParts.length);\n                  var samePartsLength = length;\n                  for (var i = 0; i < length; i++) {\n                    if (lowerFromParts[i] !== lowerToParts[i]) {\n                      samePartsLength = i;\n                      break;\n                    }\n                  }\n                \n                  if (samePartsLength == 0) {\n                    return to;\n                  }\n                \n                  var outputParts = [];\n                  for (var i = samePartsLength; i < lowerFromParts.length; i++) {\n                    outputParts.push('..');\n                  }\n                \n                  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n                \n                  return outputParts.join('\\\\');\n                };\n                \n                \n                win32._makeLong = function(path) {\n                  // Note: this will *probably* throw somewhere.\n                  if (!util.isString(path))\n                    return path;\n                \n                  if (!path) {\n                    return '';\n                  }\n                \n                  var resolvedPath = win32.resolve(path);\n                \n                  if (/^[a-zA-Z]\\:\\\\/.test(resolvedPath)) {\n                    // path is local filesystem path, which needs to be converted\n                    // to long UNC path.\n                    return '\\\\\\\\?\\\\' + resolvedPath;\n                  } else if (/^\\\\\\\\[^?.]/.test(resolvedPath)) {\n                    // path is network UNC path, which needs to be converted\n                    // to long UNC path.\n                    return '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.substring(2);\n                  }\n                \n                  return path;\n                };\n                \n                \n                win32.dirname = function(path) {\n                  var result = win32SplitPath(path),\n                      root = result[0],\n                      dir = result[1];\n                \n                  if (!root && !dir) {\n                    // No dirname whatsoever\n                    return '.';\n                  }\n                \n                  if (dir) {\n                    // It has a dirname, strip trailing slash\n                    dir = dir.substr(0, dir.length - 1);\n                  }\n                \n                  return root + dir;\n                };\n                \n                \n                win32.basename = function(path, ext) {\n                  var f = win32SplitPath(path)[2];\n                  // TODO: make this comparison case-insensitive on windows?\n                  if (ext && f.substr(-1 * ext.length) === ext) {\n                    f = f.substr(0, f.length - ext.length);\n                  }\n                  return f;\n                };\n                \n                \n                win32.extname = function(path) {\n                  return win32SplitPath(path)[3];\n                };\n                \n                win32.format = function(pathObject) {\n                  if (!util.isObject(pathObject)) {\n                    throw new TypeError(\n                        \"Parameter 'pathObject' must be an object, not \" + typeof pathObject\n                    );\n                  }\n                \n                  var root = pathObject.root || '';\n                \n                  if (!util.isString(root)) {\n                    throw new TypeError(\n                        \"'pathObject.root' must be a string or undefined, not \" +\n                        typeof pathObject.root\n                    );\n                  }\n                \n                  var dir = pathObject.dir;\n                  var base = pathObject.base || '';\n                  if (!dir) {\n                    return base;\n                  }\n                  if (dir[dir.length - 1] === win32.sep) {\n                    return dir + base;\n                  }\n                  return dir + win32.sep + base;\n                };\n                \n                \n                win32.parse = function(pathString) {\n                  if (!util.isString(pathString)) {\n                    throw new TypeError(\n                        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n                    );\n                  }\n                  var allParts = win32SplitPath(pathString);\n                  if (!allParts || allParts.length !== 4) {\n                    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n                  }\n                  return {\n                    root: allParts[0],\n                    dir: allParts[0] + allParts[1].slice(0, -1),\n                    base: allParts[2],\n                    ext: allParts[3],\n                    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\n                  };\n                };\n                \n                \n                win32.sep = '\\\\';\n                win32.delimiter = ';';\n                \n                \n                // Split a filename into [root, dir, basename, ext], unix version\n                // 'root' is just a slash, or nothing.\n                var splitPathRe =\n                    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n                var posix = {};\n                \n                \n                function posixSplitPath(filename) {\n                  return splitPathRe.exec(filename).slice(1);\n                }\n                \n                \n                // path.resolve([from ...], to)\n                // posix version\n                posix.resolve = function() {\n                  var resolvedPath = '',\n                      resolvedAbsolute = false;\n                \n                  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n                    var path = (i >= 0) ? arguments[i] : process.cwd();\n                \n                    // Skip empty and invalid entries\n                    if (!util.isString(path)) {\n                      throw new TypeError('Arguments to path.resolve must be strings');\n                    } else if (!path) {\n                      continue;\n                    }\n                \n                    resolvedPath = path + '/' + resolvedPath;\n                    resolvedAbsolute = path[0] === '/';\n                  }\n                \n                  // At this point the path should be resolved to a full absolute path, but\n                  // handle relative paths to be safe (might happen when process.cwd() fails)\n                \n                  // Normalize the path\n                  resolvedPath = normalizeArray(resolvedPath.split('/'),\n                                                !resolvedAbsolute).join('/');\n                \n                  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n                };\n                \n                // path.normalize(path)\n                // posix version\n                posix.normalize = function(path) {\n                  var isAbsolute = posix.isAbsolute(path),\n                      trailingSlash = path && path[path.length - 1] === '/';\n                \n                  // Normalize the path\n                  path = normalizeArray(path.split('/'), !isAbsolute).join('/');\n                \n                  if (!path && !isAbsolute) {\n                    path = '.';\n                  }\n                  if (path && trailingSlash) {\n                    path += '/';\n                  }\n                \n                  return (isAbsolute ? '/' : '') + path;\n                };\n                \n                // posix version\n                posix.isAbsolute = function(path) {\n                  return path.charAt(0) === '/';\n                };\n                \n                // posix version\n                posix.join = function() {\n                  var path = '';\n                  for (var i = 0; i < arguments.length; i++) {\n                    var segment = arguments[i];\n                    if (!util.isString(segment)) {\n                      throw new TypeError('Arguments to path.join must be strings');\n                    }\n                    if (segment) {\n                      if (!path) {\n                        path += segment;\n                      } else {\n                        path += '/' + segment;\n                      }\n                    }\n                  }\n                  return posix.normalize(path);\n                };\n                \n                \n                // path.relative(from, to)\n                // posix version\n                posix.relative = function(from, to) {\n                  from = posix.resolve(from).substr(1);\n                  to = posix.resolve(to).substr(1);\n                \n                  var fromParts = trimArray(from.split('/'));\n                  var toParts = trimArray(to.split('/'));\n                \n                  var length = Math.min(fromParts.length, toParts.length);\n                  var samePartsLength = length;\n                  for (var i = 0; i < length; i++) {\n                    if (fromParts[i] !== toParts[i]) {\n                      samePartsLength = i;\n                      break;\n                    }\n                  }\n                \n                  var outputParts = [];\n                  for (var i = samePartsLength; i < fromParts.length; i++) {\n                    outputParts.push('..');\n                  }\n                \n                  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n                \n                  return outputParts.join('/');\n                };\n                \n                \n                posix._makeLong = function(path) {\n                  return path;\n                };\n                \n                \n                posix.dirname = function(path) {\n                  var result = posixSplitPath(path),\n                      root = result[0],\n                      dir = result[1];\n                \n                  if (!root && !dir) {\n                    // No dirname whatsoever\n                    return '.';\n                  }\n                \n                  if (dir) {\n                    // It has a dirname, strip trailing slash\n                    dir = dir.substr(0, dir.length - 1);\n                  }\n                \n                  return root + dir;\n                };\n                \n                \n                posix.basename = function(path, ext) {\n                  var f = posixSplitPath(path)[2];\n                  // TODO: make this comparison case-insensitive on windows?\n                  if (ext && f.substr(-1 * ext.length) === ext) {\n                    f = f.substr(0, f.length - ext.length);\n                  }\n                  return f;\n                };\n                \n                \n                posix.extname = function(path) {\n                  return posixSplitPath(path)[3];\n                };\n                \n                \n                posix.format = function(pathObject) {\n                  if (!util.isObject(pathObject)) {\n                    throw new TypeError(\n                        \"Parameter 'pathObject' must be an object, not \" + typeof pathObject\n                    );\n                  }\n                \n                  var root = pathObject.root || '';\n                \n                  if (!util.isString(root)) {\n                    throw new TypeError(\n                        \"'pathObject.root' must be a string or undefined, not \" +\n                        typeof pathObject.root\n                    );\n                  }\n                \n                  var dir = pathObject.dir ? pathObject.dir + posix.sep : '';\n                  var base = pathObject.base || '';\n                  return dir + base;\n                };\n                \n                \n                posix.parse = function(pathString) {\n                  if (!util.isString(pathString)) {\n                    throw new TypeError(\n                        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n                    );\n                  }\n                  var allParts = posixSplitPath(pathString);\n                  if (!allParts || allParts.length !== 4) {\n                    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n                  }\n                  allParts[1] = allParts[1] || '';\n                  allParts[2] = allParts[2] || '';\n                  allParts[3] = allParts[3] || '';\n                \n                  return {\n                    root: allParts[0],\n                    dir: allParts[0] + allParts[1].slice(0, -1),\n                    base: allParts[2],\n                    ext: allParts[3],\n                    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)\n                  };\n                };\n                \n                \n                posix.sep = '/';\n                posix.delimiter = ':';\n                \n                \n                if (isWindows)\n                  module.exports = win32;\n                else /* posix */\n                  module.exports = posix;\n                \n                module.exports.posix = posix;\n                module.exports.win32 = win32;\n                \n             // paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-path/path.js sha1 = f14f27107c2666c5ea412b37e34ab947ec3d2453\n             return module.exports;}).bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-path\"),\"path.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-path\")},\n            \n             ___the___:\"end\"\n        };\n    \n    \n        var mod=function (module,require,__filename,__dirname) {var exports=module.exports;\n            //paste-begin: http://npmjs.com\n                 module.exports = (function(){var res={};[\"punycode\",\"url\",\"querystring\",\"util\",\"path\"].forEach(function(m){res[m]=require(m);});return res;})();\n            //paste-end: http://npmjs.com\n            return module.exports;\n        };\n    \n        return mod({exports:{}},__sim_require.bind(this,\".\"),\"browser-internal.js\",\".\");\n    \n    })();})(typeof process+typeof module+typeof require==='objectobjectfunction'?[module,\"exports\"]:[window,\"simRequire\"]);","min_src":"(function(x){x[0][x[1]]=function(){var dir,cache={},aliases={\"../node_modules/browser-punycode/punycode.js\":\"punycode\",\"../node_modules/browser-url/url.js\":\"url\",\"../node_modules/browser-querystring/index.js\":\"querystring\",\"../node_modules/browser-util/util.js\":\"util\",\"../node_modules/inherits/inherits.js\":\"inherits\",\"../node_modules/is-arguments/index.js\":\"is-arguments\",\"../node_modules/is-generator-function/index.js\":\"is-generator-function\",\"../node_modules/browser-path/path.js\":\"path\"},__sim_require=function require(dirname,file){//file = file.search(/^\\.{1}/) ===0 ? file.replace(/^\\.{1}/,dirname) : file;\nfile=aliases[file]||file;var mod=cache[file];if(mod)return mod;if(dir[file]){cache[file]=mod=dir[file].load();return mod}throw JSON.stringify({error:\"file not found\",filename:file,dirname:dirname})};dir={\"punycode\":{name:\"browser-punycode\",path:\"../node_modules/browser-punycode/punycode.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-punycode/punycode.js\n\"use strict\";/** Highest positive signed 32-bit float value */const maxInt=2147483647;// aka. 0x7FFFFFFF or 2^31-1\n/** Bootstring parameters */const base=36;const tMin=1;const tMax=26;const skew=38;const damp=700;const initialBias=72;const initialN=128;// 0x80\nconst delimiter=\"-\";// '\\x2D'\n/** Regular expressions */const regexPunycode=/^xn--/;const regexNonASCII=/[^\\0-\\x7E]/;// non-ASCII chars\nconst regexSeparators=/[\\x2E\\u3002\\uFF0E\\uFF61]/g;// RFC 3490 separators\n/** Error messages */const errors={\"overflow\":\"Overflow: input needs wider integers to process\",\"not-basic\":\"Illegal input >= 0x80 (not a basic code point)\",\"invalid-input\":\"Invalid input\"};/** Convenience shortcuts */const baseMinusTMin=base-tMin;const floor=Math.floor;const stringFromCharCode=String.fromCharCode;/*--------------------------------------------------------------------------*//**\n                 * A generic error utility function.\n                 * @private\n                 * @param {String} type The error type.\n                 * @returns {Error} Throws a `RangeError` with the applicable error message.\n                 */function error(type){throw new RangeError(errors[type])}/**\n                 * A generic `Array#map` utility function.\n                 * @private\n                 * @param {Array} array The array to iterate over.\n                 * @param {Function} callback The function that gets called for every array\n                 * item.\n                 * @returns {Array} A new array of values returned by the callback function.\n                 */function map(array,fn){const result=[];let length=array.length;while(length--){result[length]=fn(array[length])}return result}/**\n                 * A simple `Array#map`-like wrapper to work with domain name strings or email\n                 * addresses.\n                 * @private\n                 * @param {String} domain The domain name or email address.\n                 * @param {Function} callback The function that gets called for every\n                 * character.\n                 * @returns {Array} A new string of characters returned by the callback\n                 * function.\n                 */function mapDomain(string,fn){const parts=string.split(\"@\");let result=\"\";if(parts.length>1){// In email addresses, only the domain name should be punycoded. Leave\n// the local part (i.e. everything up to `@`) intact.\nresult=parts[0]+\"@\";string=parts[1]}// Avoid `split(regex)` for IE8 compatibility. See #17.\nstring=string.replace(regexSeparators,\".\");const labels=string.split(\".\");const encoded=map(labels,fn).join(\".\");return result+encoded}/**\n                 * Creates an array containing the numeric code points of each Unicode\n                 * character in the string. While JavaScript uses UCS-2 internally,\n                 * this function will convert a pair of surrogate halves (each of which\n                 * UCS-2 exposes as separate characters) into a single code point,\n                 * matching UTF-16.\n                 * @see `punycode.ucs2.encode`\n                 * @see <https://mathiasbynens.be/notes/javascript-encoding>\n                 * @memberOf punycode.ucs2\n                 * @name decode\n                 * @param {String} string The Unicode input string (UCS-2).\n                 * @returns {Array} The new array of code points.\n                 */function ucs2decode(string){const output=[];let counter=0;const length=string.length;while(counter<length){const value=string.charCodeAt(counter++);if(value>=55296&&value<=56319&&counter<length){// It's a high surrogate, and there is a next character.\nconst extra=string.charCodeAt(counter++);if((extra&64512)==56320){// Low surrogate.\noutput.push(((value&1023)<<10)+(extra&1023)+65536)}else{// It's an unmatched surrogate; only append this code unit, in case the\n// next code unit is the high surrogate of a surrogate pair.\noutput.push(value);counter--}}else{output.push(value)}}return output}/**\n                 * Creates a string based on an array of numeric code points.\n                 * @see `punycode.ucs2.decode`\n                 * @memberOf punycode.ucs2\n                 * @name encode\n                 * @param {Array} codePoints The array of numeric code points.\n                 * @returns {String} The new Unicode string (UCS-2).\n                 */const ucs2encode=array=>String.fromCodePoint(...array);/**\n                 * Converts a basic code point into a digit/integer.\n                 * @see `digitToBasic()`\n                 * @private\n                 * @param {Number} codePoint The basic numeric code point value.\n                 * @returns {Number} The numeric value of a basic code point (for use in\n                 * representing integers) in the range `0` to `base - 1`, or `base` if\n                 * the code point does not represent a value.\n                 */const basicToDigit=function(codePoint){if(codePoint-48<10){return codePoint-22}if(codePoint-65<26){return codePoint-65}if(codePoint-97<26){return codePoint-97}return base};/**\n                 * Converts a digit/integer into a basic code point.\n                 * @see `basicToDigit()`\n                 * @private\n                 * @param {Number} digit The numeric value of a basic code point.\n                 * @returns {Number} The basic code point whose value (when used for\n                 * representing integers) is `digit`, which needs to be in the range\n                 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n                 * used; else, the lowercase form is used. The behavior is undefined\n                 * if `flag` is non-zero and `digit` has no uppercase form.\n                 */const digitToBasic=function(digit,flag){//  0..25 map to ASCII a..z or A..Z\n// 26..35 map to ASCII 0..9\nreturn digit+22+75*(digit<26)-((flag!=0)<<5)};/**\n                 * Bias adaptation function as per section 3.4 of RFC 3492.\n                 * https://tools.ietf.org/html/rfc3492#section-3.4\n                 * @private\n                 */const adapt=function(delta,numPoints,firstTime){let k=0;delta=firstTime?floor(delta/damp):delta>>1;delta+=floor(delta/numPoints);for(;/* no initialization */delta>baseMinusTMin*tMax>>1;k+=base){delta=floor(delta/baseMinusTMin)}return floor(k+(baseMinusTMin+1)*delta/(delta+skew))};/**\n                 * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n                 * symbols.\n                 * @memberOf punycode\n                 * @param {String} input The Punycode string of ASCII-only symbols.\n                 * @returns {String} The resulting string of Unicode symbols.\n                 */const decode=function(input){// Don't use UCS-2.\nconst output=[];const inputLength=input.length;let i=0;let n=initialN;let bias=initialBias;// Handle the basic code points: let `basic` be the number of input code\n// points before the last delimiter, or `0` if there is none, then copy\n// the first basic code points to the output.\nlet basic=input.lastIndexOf(delimiter);if(basic<0){basic=0}for(let j=0;j<basic;++j){// if it's not a basic code point\nif(input.charCodeAt(j)>=128){error(\"not-basic\")}output.push(input.charCodeAt(j))}// Main decoding loop: start just after the last delimiter if any basic code\n// points were copied; start at the beginning otherwise.\nfor(let index=basic>0?basic+1:0;index<inputLength;)/* no final expression */{// `index` is the index of the next character to be consumed.\n// Decode a generalized variable-length integer into `delta`,\n// which gets added to `i`. The overflow checking is easier\n// if we increase `i` as we go, then subtract off its starting\n// value at the end to obtain `delta`.\nlet oldi=i;for(let w=1,k=base;;/* no condition */k+=base){if(index>=inputLength){error(\"invalid-input\")}const digit=basicToDigit(input.charCodeAt(index++));if(digit>=base||digit>floor((maxInt-i)/w)){error(\"overflow\")}i+=digit*w;const t=k<=bias?tMin:k>=bias+tMax?tMax:k-bias;if(digit<t){break}const baseMinusT=base-t;if(w>floor(maxInt/baseMinusT)){error(\"overflow\")}w*=baseMinusT}const out=output.length+1;bias=adapt(i-oldi,out,oldi==0);// `i` was supposed to wrap around from `out` to `0`,\n// incrementing `n` each time, so we'll fix that now:\nif(floor(i/out)>maxInt-n){error(\"overflow\")}n+=floor(i/out);i%=out;// Insert `n` at position `i` of the output.\noutput.splice(i++,0,n)}return String.fromCodePoint(...output)};/**\n                 * Converts a string of Unicode symbols (e.g. a domain name label) to a\n                 * Punycode string of ASCII-only symbols.\n                 * @memberOf punycode\n                 * @param {String} input The string of Unicode symbols.\n                 * @returns {String} The resulting Punycode string of ASCII-only symbols.\n                 */const encode=function(input){const output=[];// Convert the input in UCS-2 to an array of Unicode code points.\ninput=ucs2decode(input);// Cache the length.\nlet inputLength=input.length;// Initialize the state.\nlet n=initialN;let delta=0;let bias=initialBias;// Handle the basic code points.\nfor(const currentValue of input){if(currentValue<128){output.push(stringFromCharCode(currentValue))}}let basicLength=output.length;let handledCPCount=basicLength;// `handledCPCount` is the number of code points that have been handled;\n// `basicLength` is the number of basic code points.\n// Finish the basic string with a delimiter unless it's empty.\nif(basicLength){output.push(delimiter)}// Main encoding loop:\nwhile(handledCPCount<inputLength){// All non-basic code points < n have been handled already. Find the next\n// larger one:\nlet m=maxInt;for(const currentValue of input){if(currentValue>=n&&currentValue<m){m=currentValue}}// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n// but guard against overflow.\nconst handledCPCountPlusOne=handledCPCount+1;if(m-n>floor((maxInt-delta)/handledCPCountPlusOne)){error(\"overflow\")}delta+=(m-n)*handledCPCountPlusOne;n=m;for(const currentValue of input){if(currentValue<n&&++delta>maxInt){error(\"overflow\")}if(currentValue==n){// Represent delta as a generalized variable-length integer.\nlet q=delta;for(let k=base;;/* no condition */k+=base){const t=k<=bias?tMin:k>=bias+tMax?tMax:k-bias;if(q<t){break}const qMinusT=q-t;const baseMinusT=base-t;output.push(stringFromCharCode(digitToBasic(t+qMinusT%baseMinusT,0)));q=floor(qMinusT/baseMinusT)}output.push(stringFromCharCode(digitToBasic(q,0)));bias=adapt(delta,handledCPCountPlusOne,handledCPCount==basicLength);delta=0;++handledCPCount}}++delta;++n}return output.join(\"\")};/**\n                 * Converts a Punycode string representing a domain name or an email address\n                 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n                 * it doesn't matter if you call it on a string that has already been\n                 * converted to Unicode.\n                 * @memberOf punycode\n                 * @param {String} input The Punycoded domain name or email address to\n                 * convert to Unicode.\n                 * @returns {String} The Unicode representation of the given Punycode\n                 * string.\n                 */const toUnicode=function(input){return mapDomain(input,function(string){return regexPunycode.test(string)?decode(string.slice(4).toLowerCase()):string})};/**\n                 * Converts a Unicode string representing a domain name or an email address to\n                 * Punycode. Only the non-ASCII parts of the domain name will be converted,\n                 * i.e. it doesn't matter if you call it with a domain that's already in\n                 * ASCII.\n                 * @memberOf punycode\n                 * @param {String} input The domain name or email address to convert, as a\n                 * Unicode string.\n                 * @returns {String} The Punycode representation of the given domain name or\n                 * email address.\n                 */const toASCII=function(input){return mapDomain(input,function(string){return regexNonASCII.test(string)?\"xn--\"+encode(string):string})};/*--------------------------------------------------------------------------*//** Define the public API */const punycode={/**\n                     * A string representing the current Punycode.js version number.\n                     * @memberOf punycode\n                     * @type String\n                     */\"version\":\"2.1.0\",/**\n                     * An object of methods to convert from JavaScript's internal character\n                     * representation (UCS-2) to Unicode code points, and back.\n                     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n                     * @memberOf punycode\n                     * @type Object\n                     */\"ucs2\":{\"decode\":ucs2decode,\"encode\":ucs2encode},\"decode\":decode,\"encode\":encode,\"toASCII\":toASCII,\"toUnicode\":toUnicode};module.exports=punycode;// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-punycode/punycode.js sha1 = 39ab3964d954c66ab440a590444fd7dd3493be37\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-punycode\"),\"punycode.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-punycode\")},\"url\":{name:\"browser-url\",path:\"../node_modules/browser-url/url.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-url/url.js\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\"use strict\";var punycode=require(\"punycode\");var util=require(\"./util\");exports.parse=urlParse;exports.resolve=urlResolve;exports.resolveObject=urlResolveObject;exports.format=urlFormat;exports.Url=Url;function Url(){this.protocol=null;this.slashes=null;this.auth=null;this.host=null;this.port=null;this.hostname=null;this.hash=null;this.search=null;this.query=null;this.pathname=null;this.path=null;this.href=null}// Reference: RFC 3986, RFC 1808, RFC 2396\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern=/^([a-z0-9.+-]+:)/i,portPattern=/:[0-9]*$/,// Special case for a simple path URL\nsimplePathPattern=/^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\ndelims=[\"<\",\">\",\"\\\"\",\"`\",\" \",\"\\r\",\"\\n\",\"\\t\"],// RFC 2396: characters not allowed for various reasons.\nunwise=[\"{\",\"}\",\"|\",\"\\\\\",\"^\",\"`\"].concat(delims),// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nautoEscape=[\"'\"].concat(unwise),// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nnonHostChars=[\"%\",\"/\",\"?\",\";\",\"#\"].concat(autoEscape),hostEndingChars=[\"/\",\"?\",\"#\"],hostnameMaxLen=255,hostnamePartPattern=/^[+a-z0-9A-Z_-]{0,63}$/,hostnamePartStart=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,// protocols that can allow \"unsafe\" and \"unwise\" chars.\nunsafeProtocol={\"javascript\":true,\"javascript:\":true},// protocols that never have a hostname.\nhostlessProtocol={\"javascript\":true,\"javascript:\":true},// protocols that always contain a // bit.\nslashedProtocol={\"http\":true,\"https\":true,\"ftp\":true,\"gopher\":true,\"file\":true,\"http:\":true,\"https:\":true,\"ftp:\":true,\"gopher:\":true,\"file:\":true},querystring=require(\"querystring\");function urlParse(url,parseQueryString,slashesDenoteHost){if(url&&util.isObject(url)&&url instanceof Url)return url;var u=new Url;u.parse(url,parseQueryString,slashesDenoteHost);return u}Url.prototype.parse=function(url,parseQueryString,slashesDenoteHost){if(!util.isString(url)){throw new TypeError(\"Parameter 'url' must be a string, not \"+typeof url)}// Copy chrome, IE, opera backslash-handling behavior.\n// Back slashes before the query string get converted to forward slashes\n// See: https://code.google.com/p/chromium/issues/detail?id=25916\nvar queryIndex=url.indexOf(\"?\"),splitter=queryIndex!==-1&&queryIndex<url.indexOf(\"#\")?\"?\":\"#\",uSplit=url.split(splitter),slashRegex=/\\\\/g;uSplit[0]=uSplit[0].replace(slashRegex,\"/\");url=uSplit.join(splitter);var rest=url;// trim before proceeding.\n// This is to support parse stuff like \"  http://foo.com  \\n\"\nrest=rest.trim();if(!slashesDenoteHost&&url.split(\"#\").length===1){// Try fast path regexp\nvar simplePath=simplePathPattern.exec(rest);if(simplePath){this.path=rest;this.href=rest;this.pathname=simplePath[1];if(simplePath[2]){this.search=simplePath[2];if(parseQueryString){this.query=querystring.parse(this.search.substr(1))}else{this.query=this.search.substr(1)}}else if(parseQueryString){this.search=\"\";this.query={}}return this}}var proto=protocolPattern.exec(rest);if(proto){proto=proto[0];var lowerProto=proto.toLowerCase();this.protocol=lowerProto;rest=rest.substr(proto.length)}// figure out if it's got a host\n// user@server is *always* interpreted as a hostname, and url\n// resolution will treat //foo/bar as host=foo,path=bar because that's\n// how the browser resolves relative URLs.\nif(slashesDenoteHost||proto||rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)){var slashes=rest.substr(0,2)===\"//\";if(slashes&&!(proto&&hostlessProtocol[proto])){rest=rest.substr(2);this.slashes=true}}if(!hostlessProtocol[proto]&&(slashes||proto&&!slashedProtocol[proto])){// there's a hostname.\n// the first instance of /, ?, ;, or # ends the host.\n//\n// If there is an @ in the hostname, then non-host chars *are* allowed\n// to the left of the last @ sign, unless some host-ending character\n// comes *before* the @-sign.\n// URLs are obnoxious.\n//\n// ex:\n// http://a@b@c/ => user:a@b host:c\n// http://a@b?@c => user:a host:c path:/?@c\n// v0.12 TODO(isaacs): This is not quite how Chrome does things.\n// Review our test case against browsers more comprehensively.\n// find the first instance of any hostEndingChars\nvar hostEnd=-1;for(var i=0;i<hostEndingChars.length;i++){var hec=rest.indexOf(hostEndingChars[i]);if(hec!==-1&&(hostEnd===-1||hec<hostEnd))hostEnd=hec}// at this point, either we have an explicit point where the\n// auth portion cannot go past, or the last @ char is the decider.\nvar auth,atSign;if(hostEnd===-1){// atSign can be anywhere.\natSign=rest.lastIndexOf(\"@\")}else{// atSign must be in auth portion.\n// http://a@b/c@d => host:b auth:a path:/c@d\natSign=rest.lastIndexOf(\"@\",hostEnd)}// Now we have a portion which is definitely the auth.\n// Pull that off.\nif(atSign!==-1){auth=rest.slice(0,atSign);rest=rest.slice(atSign+1);this.auth=decodeURIComponent(auth)}// the host is the remaining to the left of the first non-host char\nhostEnd=-1;for(var i=0;i<nonHostChars.length;i++){var hec=rest.indexOf(nonHostChars[i]);if(hec!==-1&&(hostEnd===-1||hec<hostEnd))hostEnd=hec}// if we still have not hit it, then the entire thing is a host.\nif(hostEnd===-1)hostEnd=rest.length;this.host=rest.slice(0,hostEnd);rest=rest.slice(hostEnd);// pull out port.\nthis.parseHost();// we've indicated that there is a hostname,\n// so even if it's empty, it has to be present.\nthis.hostname=this.hostname||\"\";// if hostname begins with [ and ends with ]\n// assume that it's an IPv6 address.\nvar ipv6Hostname=this.hostname[0]===\"[\"&&this.hostname[this.hostname.length-1]===\"]\";// validate a little.\nif(!ipv6Hostname){var hostparts=this.hostname.split(/\\./);for(var i=0,l=hostparts.length;i<l;i++){var part=hostparts[i];if(!part)continue;if(!part.match(hostnamePartPattern)){var newpart=\"\";for(var j=0,k=part.length;j<k;j++){if(part.charCodeAt(j)>127){// we replace non-ASCII char with a temporary placeholder\n// we need this to make sure size of hostname is not\n// broken by replacing non-ASCII by nothing\nnewpart+=\"x\"}else{newpart+=part[j]}}// we test again with ASCII char only\nif(!newpart.match(hostnamePartPattern)){var validParts=hostparts.slice(0,i);var notHost=hostparts.slice(i+1);var bit=part.match(hostnamePartStart);if(bit){validParts.push(bit[1]);notHost.unshift(bit[2])}if(notHost.length){rest=\"/\"+notHost.join(\".\")+rest}this.hostname=validParts.join(\".\");break}}}}if(this.hostname.length>hostnameMaxLen){this.hostname=\"\"}else{// hostnames are always lower case.\nthis.hostname=this.hostname.toLowerCase()}if(!ipv6Hostname){// IDNA Support: Returns a punycoded representation of \"domain\".\n// It only converts parts of the domain name that\n// have non-ASCII characters, i.e. it doesn't matter if\n// you call it with a domain that already is ASCII-only.\nthis.hostname=punycode.toASCII(this.hostname)}var p=this.port?\":\"+this.port:\"\";var h=this.hostname||\"\";this.host=h+p;this.href+=this.host;// strip [ and ] from the hostname\n// the host field still retains them, though\nif(ipv6Hostname){this.hostname=this.hostname.substr(1,this.hostname.length-2);if(rest[0]!==\"/\"){rest=\"/\"+rest}}}// now rest is set to the post-host stuff.\n// chop off any delim chars.\nif(!unsafeProtocol[lowerProto]){// First, make 100% sure that any \"autoEscape\" chars get\n// escaped, even if encodeURIComponent doesn't think they\n// need to be.\nfor(var i=0,l=autoEscape.length;i<l;i++){var ae=autoEscape[i];if(rest.indexOf(ae)===-1)continue;var esc=encodeURIComponent(ae);if(esc===ae){esc=escape(ae)}rest=rest.split(ae).join(esc)}}// chop off from the tail first.\nvar hash=rest.indexOf(\"#\");if(hash!==-1){// got a fragment string.\nthis.hash=rest.substr(hash);rest=rest.slice(0,hash)}var qm=rest.indexOf(\"?\");if(qm!==-1){this.search=rest.substr(qm);this.query=rest.substr(qm+1);if(parseQueryString){this.query=querystring.parse(this.query)}rest=rest.slice(0,qm)}else if(parseQueryString){// no query string, but parseQueryString still requested\nthis.search=\"\";this.query={}}if(rest)this.pathname=rest;if(slashedProtocol[lowerProto]&&this.hostname&&!this.pathname){this.pathname=\"/\"}//to support http.request\nif(this.pathname||this.search){var p=this.pathname||\"\";var s=this.search||\"\";this.path=p+s}// finally, reconstruct the href based on what has been validated.\nthis.href=this.format();return this};// format a parsed object into a url string\nfunction urlFormat(obj){// ensure it's an object, and not a string url.\n// If it's an obj, this is a no-op.\n// this way, you can call url_format() on strings\n// to clean up potentially wonky urls.\nif(util.isString(obj))obj=urlParse(obj);if(!(obj instanceof Url))return Url.prototype.format.call(obj);return obj.format()}Url.prototype.format=function(){var auth=this.auth||\"\";if(auth){auth=encodeURIComponent(auth);auth=auth.replace(/%3A/i,\":\");auth+=\"@\"}var protocol=this.protocol||\"\",pathname=this.pathname||\"\",hash=this.hash||\"\",host=false,query=\"\";if(this.host){host=auth+this.host}else if(this.hostname){host=auth+(this.hostname.indexOf(\":\")===-1?this.hostname:\"[\"+this.hostname+\"]\");if(this.port){host+=\":\"+this.port}}if(this.query&&util.isObject(this.query)&&Object.keys(this.query).length){query=querystring.stringify(this.query)}var search=this.search||query&&\"?\"+query||\"\";if(protocol&&protocol.substr(-1)!==\":\")protocol+=\":\";// only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n// unless they had them to begin with.\nif(this.slashes||(!protocol||slashedProtocol[protocol])&&host!==false){host=\"//\"+(host||\"\");if(pathname&&pathname.charAt(0)!==\"/\")pathname=\"/\"+pathname}else if(!host){host=\"\"}if(hash&&hash.charAt(0)!==\"#\")hash=\"#\"+hash;if(search&&search.charAt(0)!==\"?\")search=\"?\"+search;pathname=pathname.replace(/[?#]/g,function(match){return encodeURIComponent(match)});search=search.replace(\"#\",\"%23\");return protocol+host+pathname+search+hash};function urlResolve(source,relative){return urlParse(source,false,true).resolve(relative)}Url.prototype.resolve=function(relative){return this.resolveObject(urlParse(relative,false,true)).format()};function urlResolveObject(source,relative){if(!source)return relative;return urlParse(source,false,true).resolveObject(relative)}Url.prototype.resolveObject=function(relative){if(util.isString(relative)){var rel=new Url;rel.parse(relative,false,true);relative=rel}var result=new Url;var tkeys=Object.keys(this);for(var tk=0;tk<tkeys.length;tk++){var tkey=tkeys[tk];result[tkey]=this[tkey]}// hash is always overridden, no matter what.\n// even href=\"\" will remove it.\nresult.hash=relative.hash;// if the relative url is empty, then there's nothing left to do here.\nif(relative.href===\"\"){result.href=result.format();return result}// hrefs like //foo/bar always cut to the protocol.\nif(relative.slashes&&!relative.protocol){// take everything except the protocol from relative\nvar rkeys=Object.keys(relative);for(var rk=0;rk<rkeys.length;rk++){var rkey=rkeys[rk];if(rkey!==\"protocol\")result[rkey]=relative[rkey]}//urlParse appends trailing / to urls like http://www.example.com\nif(slashedProtocol[result.protocol]&&result.hostname&&!result.pathname){result.path=result.pathname=\"/\"}result.href=result.format();return result}if(relative.protocol&&relative.protocol!==result.protocol){// if it's a known url protocol, then changing\n// the protocol does weird things\n// first, if it's not file:, then we MUST have a host,\n// and if there was a path\n// to begin with, then we MUST have a path.\n// if it is file:, then the host is dropped,\n// because that's known to be hostless.\n// anything else is assumed to be absolute.\nif(!slashedProtocol[relative.protocol]){var keys=Object.keys(relative);for(var v=0;v<keys.length;v++){var k=keys[v];result[k]=relative[k]}result.href=result.format();return result}result.protocol=relative.protocol;if(!relative.host&&!hostlessProtocol[relative.protocol]){var relPath=(relative.pathname||\"\").split(\"/\");while(relPath.length&&!(relative.host=relPath.shift()));if(!relative.host)relative.host=\"\";if(!relative.hostname)relative.hostname=\"\";if(relPath[0]!==\"\")relPath.unshift(\"\");if(relPath.length<2)relPath.unshift(\"\");result.pathname=relPath.join(\"/\")}else{result.pathname=relative.pathname}result.search=relative.search;result.query=relative.query;result.host=relative.host||\"\";result.auth=relative.auth;result.hostname=relative.hostname||relative.host;result.port=relative.port;// to support http.request\nif(result.pathname||result.search){var p=result.pathname||\"\";var s=result.search||\"\";result.path=p+s}result.slashes=result.slashes||relative.slashes;result.href=result.format();return result}var isSourceAbs=result.pathname&&result.pathname.charAt(0)===\"/\",isRelAbs=relative.host||relative.pathname&&relative.pathname.charAt(0)===\"/\",mustEndAbs=isRelAbs||isSourceAbs||result.host&&relative.pathname,removeAllDots=mustEndAbs,srcPath=result.pathname&&result.pathname.split(\"/\")||[],relPath=relative.pathname&&relative.pathname.split(\"/\")||[],psychotic=result.protocol&&!slashedProtocol[result.protocol];// if the url is a non-slashed url, then relative\n// links like ../.. should be able\n// to crawl up to the hostname, as well.  This is strange.\n// result.protocol has already been set by now.\n// Later on, put the first path part into the host field.\nif(psychotic){result.hostname=\"\";result.port=null;if(result.host){if(srcPath[0]===\"\")srcPath[0]=result.host;else srcPath.unshift(result.host)}result.host=\"\";if(relative.protocol){relative.hostname=null;relative.port=null;if(relative.host){if(relPath[0]===\"\")relPath[0]=relative.host;else relPath.unshift(relative.host)}relative.host=null}mustEndAbs=mustEndAbs&&(relPath[0]===\"\"||srcPath[0]===\"\")}if(isRelAbs){// it's absolute.\nresult.host=relative.host||relative.host===\"\"?relative.host:result.host;result.hostname=relative.hostname||relative.hostname===\"\"?relative.hostname:result.hostname;result.search=relative.search;result.query=relative.query;srcPath=relPath;// fall through to the dot-handling below.\n}else if(relPath.length){// it's relative\n// throw away the existing file, and take the new path instead.\nif(!srcPath)srcPath=[];srcPath.pop();srcPath=srcPath.concat(relPath);result.search=relative.search;result.query=relative.query}else if(!util.isNullOrUndefined(relative.search)){// just pull out the search.\n// like href='?foo'.\n// Put this after the other two cases because it simplifies the booleans\nif(psychotic){result.hostname=result.host=srcPath.shift();//occationaly the auth can get stuck only in host\n//this especially happens in cases like\n//url.resolveObject('mailto:local1@domain1', 'local2@domain2')\nvar authInHost=result.host&&result.host.indexOf(\"@\")>0?result.host.split(\"@\"):false;if(authInHost){result.auth=authInHost.shift();result.host=result.hostname=authInHost.shift()}}result.search=relative.search;result.query=relative.query;//to support http.request\nif(!util.isNull(result.pathname)||!util.isNull(result.search)){result.path=(result.pathname?result.pathname:\"\")+(result.search?result.search:\"\")}result.href=result.format();return result}if(!srcPath.length){// no path at all.  easy.\n// we've already handled the other stuff above.\nresult.pathname=null;//to support http.request\nif(result.search){result.path=\"/\"+result.search}else{result.path=null}result.href=result.format();return result}// if a url ENDs in . or .., then it must get a trailing slash.\n// however, if it ends in anything else non-slashy,\n// then it must NOT get a trailing slash.\nvar last=srcPath.slice(-1)[0];var hasTrailingSlash=(result.host||relative.host||srcPath.length>1)&&(last===\".\"||last===\"..\")||last===\"\";// strip single dots, resolve double dots to parent dir\n// if the path tries to go above the root, `up` ends up > 0\nvar up=0;for(var i=srcPath.length;i>=0;i--){last=srcPath[i];if(last===\".\"){srcPath.splice(i,1)}else if(last===\"..\"){srcPath.splice(i,1);up++}else if(up){srcPath.splice(i,1);up--}}// if the path is allowed to go above the root, restore leading ..s\nif(!mustEndAbs&&!removeAllDots){for(;up--;up){srcPath.unshift(\"..\")}}if(mustEndAbs&&srcPath[0]!==\"\"&&(!srcPath[0]||srcPath[0].charAt(0)!==\"/\")){srcPath.unshift(\"\")}if(hasTrailingSlash&&srcPath.join(\"/\").substr(-1)!==\"/\"){srcPath.push(\"\")}var isAbsolute=srcPath[0]===\"\"||srcPath[0]&&srcPath[0].charAt(0)===\"/\";// put the host back\nif(psychotic){result.hostname=result.host=isAbsolute?\"\":srcPath.length?srcPath.shift():\"\";//occationaly the auth can get stuck only in host\n//this especially happens in cases like\n//url.resolveObject('mailto:local1@domain1', 'local2@domain2')\nvar authInHost=result.host&&result.host.indexOf(\"@\")>0?result.host.split(\"@\"):false;if(authInHost){result.auth=authInHost.shift();result.host=result.hostname=authInHost.shift()}}mustEndAbs=mustEndAbs||result.host&&srcPath.length;if(mustEndAbs&&!isAbsolute){srcPath.unshift(\"\")}if(!srcPath.length){result.pathname=null;result.path=null}else{result.pathname=srcPath.join(\"/\")}//to support request.http\nif(!util.isNull(result.pathname)||!util.isNull(result.search)){result.path=(result.pathname?result.pathname:\"\")+(result.search?result.search:\"\")}result.auth=relative.auth||result.auth;result.slashes=result.slashes||relative.slashes;result.href=result.format();return result};Url.prototype.parseHost=function(){var host=this.host;var port=portPattern.exec(host);if(port){port=port[0];if(port!==\":\"){this.port=port.substr(1)}host=host.substr(0,host.length-port.length)}if(host)this.hostname=host};// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-url/url.js sha1 = 78d0ac233252dbbecf7afc93c2c3ad56965f53e2\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-url\"),\"url.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-url\")},\"./util\":{name:\"url\",path:\"../node_modules/browser-url/util.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-url/util.js\n\"use strict\";module.exports={isString:function(arg){return typeof arg===\"string\"},isObject:function(arg){return typeof arg===\"object\"&&arg!==null},isNull:function(arg){return arg===null},isNullOrUndefined:function(arg){return arg==null}};// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-url/util.js sha1 = b83cee072b6381001e94414862d934d65004d92b\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-url\"),\"util.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-url\")},\"querystring\":{name:\"browser-querystring\",path:\"../node_modules/browser-querystring/index.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/index.js\n\"use strict\";exports.decode=exports.parse=require(\"./decode\");exports.encode=exports.stringify=require(\"./encode\");// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/index.js sha1 = cb7fd2835f652938cfe501f3f0c225e2646eb801\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\"),\"index.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\")},\"./util\":{name:\"url\",path:\"../node_modules/browser-url/util.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-url/util.js\n\"use strict\";module.exports={isString:function(arg){return typeof arg===\"string\"},isObject:function(arg){return typeof arg===\"object\"&&arg!==null},isNull:function(arg){return arg===null},isNullOrUndefined:function(arg){return arg==null}};// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-url/util.js sha1 = b83cee072b6381001e94414862d934d65004d92b\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-url\"),\"util.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-url\")},\"./decode\":{name:\"querystring\",path:\"../node_modules/browser-querystring/decode.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/decode.js\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\"use strict\";// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}module.exports=function(qs,sep,eq,options){sep=sep||\"&\";eq=eq||\"=\";var obj={};if(typeof qs!==\"string\"||qs.length===0){return obj}var regexp=/\\+/g;qs=qs.split(sep);var maxKeys=1000;if(options&&typeof options.maxKeys===\"number\"){maxKeys=options.maxKeys}var len=qs.length;// maxKeys <= 0 means that we should not limit keys count\nif(maxKeys>0&&len>maxKeys){len=maxKeys}for(var i=0;i<len;++i){var x=qs[i].replace(regexp,\"%20\"),idx=x.indexOf(eq),kstr,vstr,k,v;if(idx>=0){kstr=x.substr(0,idx);vstr=x.substr(idx+1)}else{kstr=x;vstr=\"\"}k=decodeURIComponent(kstr);v=decodeURIComponent(vstr);if(!hasOwnProperty(obj,k)){obj[k]=v}else if(Array.isArray(obj[k])){obj[k].push(v)}else{obj[k]=[obj[k],v]}}return obj};// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/decode.js sha1 = 78c13537ae65852bb6b1df4563ced3a27f848376\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\"),\"decode.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\")},\"./encode\":{name:\"querystring\",path:\"../node_modules/browser-querystring/encode.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/encode.js\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\"use strict\";var stringifyPrimitive=function(v){switch(typeof v){case\"string\":return v;case\"boolean\":return v?\"true\":\"false\";case\"number\":return isFinite(v)?v:\"\";default:return\"\";}};module.exports=function(obj,sep,eq,name){sep=sep||\"&\";eq=eq||\"=\";if(obj===null){obj=undefined}if(typeof obj===\"object\"){return Object.keys(obj).map(function(k){var ks=encodeURIComponent(stringifyPrimitive(k))+eq;if(Array.isArray(obj[k])){return obj[k].map(function(v){return ks+encodeURIComponent(stringifyPrimitive(v))}).join(sep)}else{return ks+encodeURIComponent(stringifyPrimitive(obj[k]))}}).join(sep)}if(!name)return\"\";return encodeURIComponent(stringifyPrimitive(name))+eq+encodeURIComponent(stringifyPrimitive(obj))};// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/encode.js sha1 = bc42441192cea9de787398850f1d308980421017\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\"),\"encode.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\")},\"./decode\":{name:\"querystring\",path:\"../node_modules/browser-querystring/decode.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/decode.js\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\"use strict\";// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}module.exports=function(qs,sep,eq,options){sep=sep||\"&\";eq=eq||\"=\";var obj={};if(typeof qs!==\"string\"||qs.length===0){return obj}var regexp=/\\+/g;qs=qs.split(sep);var maxKeys=1000;if(options&&typeof options.maxKeys===\"number\"){maxKeys=options.maxKeys}var len=qs.length;// maxKeys <= 0 means that we should not limit keys count\nif(maxKeys>0&&len>maxKeys){len=maxKeys}for(var i=0;i<len;++i){var x=qs[i].replace(regexp,\"%20\"),idx=x.indexOf(eq),kstr,vstr,k,v;if(idx>=0){kstr=x.substr(0,idx);vstr=x.substr(idx+1)}else{kstr=x;vstr=\"\"}k=decodeURIComponent(kstr);v=decodeURIComponent(vstr);if(!hasOwnProperty(obj,k)){obj[k]=v}else if(Array.isArray(obj[k])){obj[k].push(v)}else{obj[k]=[obj[k],v]}}return obj};// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/decode.js sha1 = 78c13537ae65852bb6b1df4563ced3a27f848376\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\"),\"decode.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring\")},\"util\":{name:\"browser-util\",path:\"../node_modules/browser-util/util.js\",load:function(module,require,__filename,__dirname){var process={\"env\":{},\"cwd\":function(){return\"/\"}},exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/util.js\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar getOwnPropertyDescriptors=Object.getOwnPropertyDescriptors||function getOwnPropertyDescriptors(obj){var keys=Object.keys(obj);var descriptors={};for(var i=0;i<keys.length;i++){descriptors[keys[i]]=Object.getOwnPropertyDescriptor(obj,keys[i])}return descriptors};var formatRegExp=/%[sdj%]/g;exports.format=function(f){if(!isString(f)){var objects=[];for(var i=0;i<arguments.length;i++){objects.push(inspect(arguments[i]))}return objects.join(\" \")}var i=1;var args=arguments;var len=args.length;var str=String(f).replace(formatRegExp,function(x){if(x===\"%%\")return\"%\";if(i>=len)return x;switch(x){case\"%s\":return String(args[i++]);case\"%d\":return Number(args[i++]);case\"%j\":try{return JSON.stringify(args[i++])}catch(_){return\"[Circular]\"}default:return x;}});for(var x=args[i];i<len;x=args[++i]){if(isNull(x)||!isObject(x)){str+=\" \"+x}else{str+=\" \"+inspect(x)}}return str};// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate=function(fn,msg){if(typeof process!==\"undefined\"&&process.noDeprecation===true){return fn}// Allow for deprecating things in the process of starting up.\nif(typeof process===\"undefined\"){return function(){return exports.deprecate(fn,msg).apply(this,arguments)}}var warned=false;function deprecated(){if(!warned){if(process.throwDeprecation){throw new Error(msg)}else if(process.traceDeprecation){console.trace(msg)}else{console.error(msg)}warned=true}return fn.apply(this,arguments)}return deprecated};var debugs={};var debugEnvRegex=/^$/;if(process.env.NODE_DEBUG){var debugEnv=process.env.NODE_DEBUG;debugEnv=debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g,\"\\\\$&\").replace(/\\*/g,\".*\").replace(/,/g,\"$|^\").toUpperCase();debugEnvRegex=new RegExp(\"^\"+debugEnv+\"$\",\"i\")}exports.debuglog=function(set){set=set.toUpperCase();if(!debugs[set]){if(debugEnvRegex.test(set)){var pid=process.pid;debugs[set]=function(){var msg=exports.format.apply(exports,arguments);console.error(\"%s %d: %s\",set,pid,msg)}}else{debugs[set]=function(){}}}return debugs[set]};/**\n                 * Echos the value of a value. Trys to print the value out\n                 * in the best way possible given the different types.\n                 *\n                 * @param {Object} obj The object to print out.\n                 * @param {Object} opts Optional options object that alters the output.\n                 *//* legacy: obj, showHidden, depth, colors*/function inspect(obj,opts){// default options\nvar ctx={seen:[],stylize:stylizeNoColor};// legacy...\nif(arguments.length>=3)ctx.depth=arguments[2];if(arguments.length>=4)ctx.colors=arguments[3];if(isBoolean(opts)){// legacy...\nctx.showHidden=opts}else if(opts){// got an \"options\" object\nexports._extend(ctx,opts)}// set default options\nif(isUndefined(ctx.showHidden))ctx.showHidden=false;if(isUndefined(ctx.depth))ctx.depth=2;if(isUndefined(ctx.colors))ctx.colors=false;if(isUndefined(ctx.customInspect))ctx.customInspect=true;if(ctx.colors)ctx.stylize=stylizeWithColor;return formatValue(ctx,obj,ctx.depth)}exports.inspect=inspect;// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors={\"bold\":[1,22],\"italic\":[3,23],\"underline\":[4,24],\"inverse\":[7,27],\"white\":[37,39],\"grey\":[90,39],\"black\":[30,39],\"blue\":[34,39],\"cyan\":[36,39],\"green\":[32,39],\"magenta\":[35,39],\"red\":[31,39],\"yellow\":[33,39]};// Don't use 'blue' not visible on cmd.exe\ninspect.styles={\"special\":\"cyan\",\"number\":\"yellow\",\"boolean\":\"yellow\",\"undefined\":\"grey\",\"null\":\"bold\",\"string\":\"green\",\"date\":\"magenta\",// \"name\": intentionally not styling\n\"regexp\":\"red\"};function stylizeWithColor(str,styleType){var style=inspect.styles[styleType];if(style){return\"\\x1B[\"+inspect.colors[style][0]+\"m\"+str+\"\\x1B[\"+inspect.colors[style][1]+\"m\"}else{return str}}function stylizeNoColor(str,styleType){return str}function arrayToHash(array){var hash={};array.forEach(function(val,idx){hash[val]=true});return hash}function formatValue(ctx,value,recurseTimes){// Provide a hook for user-specified inspect functions.\n// Check that value is an object with an inspect function on it\nif(ctx.customInspect&&value&&isFunction(value.inspect)&&// Filter out the util module, it's inspect function is special\nvalue.inspect!==exports.inspect&&// Also filter out any prototype objects using the circular check.\n!(value.constructor&&value.constructor.prototype===value)){var ret=value.inspect(recurseTimes,ctx);if(!isString(ret)){ret=formatValue(ctx,ret,recurseTimes)}return ret}// Primitive types cannot have properties\nvar primitive=formatPrimitive(ctx,value);if(primitive){return primitive}// Look up the keys of the object.\nvar keys=Object.keys(value);var visibleKeys=arrayToHash(keys);if(ctx.showHidden){keys=Object.getOwnPropertyNames(value)}// IE doesn't make error fields non-enumerable\n// http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\nif(isError(value)&&(keys.indexOf(\"message\")>=0||keys.indexOf(\"description\")>=0)){return formatError(value)}// Some type of object without properties can be shortcutted.\nif(keys.length===0){if(isFunction(value)){var name=value.name?\": \"+value.name:\"\";return ctx.stylize(\"[Function\"+name+\"]\",\"special\")}if(isRegExp(value)){return ctx.stylize(RegExp.prototype.toString.call(value),\"regexp\")}if(isDate(value)){return ctx.stylize(Date.prototype.toString.call(value),\"date\")}if(isError(value)){return formatError(value)}}var base=\"\",array=false,braces=[\"{\",\"}\"];// Make Array say that they are Array\nif(isArray(value)){array=true;braces=[\"[\",\"]\"]}// Make functions say that they are functions\nif(isFunction(value)){var n=value.name?\": \"+value.name:\"\";base=\" [Function\"+n+\"]\"}// Make RegExps say that they are RegExps\nif(isRegExp(value)){base=\" \"+RegExp.prototype.toString.call(value)}// Make dates with properties first say the date\nif(isDate(value)){base=\" \"+Date.prototype.toUTCString.call(value)}// Make error with message first say the error\nif(isError(value)){base=\" \"+formatError(value)}if(keys.length===0&&(!array||value.length==0)){return braces[0]+base+braces[1]}if(recurseTimes<0){if(isRegExp(value)){return ctx.stylize(RegExp.prototype.toString.call(value),\"regexp\")}else{return ctx.stylize(\"[Object]\",\"special\")}}ctx.seen.push(value);var output;if(array){output=formatArray(ctx,value,recurseTimes,visibleKeys,keys)}else{output=keys.map(function(key){return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array)})}ctx.seen.pop();return reduceToSingleString(output,base,braces)}function formatPrimitive(ctx,value){if(isUndefined(value))return ctx.stylize(\"undefined\",\"undefined\");if(isString(value)){var simple=\"'\"+JSON.stringify(value).replace(/^\"|\"$/g,\"\").replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,\"\\\"\")+\"'\";return ctx.stylize(simple,\"string\")}if(isNumber(value))return ctx.stylize(\"\"+value,\"number\");if(isBoolean(value))return ctx.stylize(\"\"+value,\"boolean\");// For some reason typeof null is \"object\", so special case here.\nif(isNull(value))return ctx.stylize(\"null\",\"null\")}function formatError(value){return\"[\"+Error.prototype.toString.call(value)+\"]\"}function formatArray(ctx,value,recurseTimes,visibleKeys,keys){var output=[];for(var i=0,l=value.length;i<l;++i){if(hasOwnProperty(value,String(i))){output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,String(i),true))}else{output.push(\"\")}}keys.forEach(function(key){if(!key.match(/^\\d+$/)){output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,key,true))}});return output}function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){var name,str,desc;desc=Object.getOwnPropertyDescriptor(value,key)||{value:value[key]};if(desc.get){if(desc.set){str=ctx.stylize(\"[Getter/Setter]\",\"special\")}else{str=ctx.stylize(\"[Getter]\",\"special\")}}else{if(desc.set){str=ctx.stylize(\"[Setter]\",\"special\")}}if(!hasOwnProperty(visibleKeys,key)){name=\"[\"+key+\"]\"}if(!str){if(ctx.seen.indexOf(desc.value)<0){if(isNull(recurseTimes)){str=formatValue(ctx,desc.value,null)}else{str=formatValue(ctx,desc.value,recurseTimes-1)}if(str.indexOf(\"\\n\")>-1){if(array){str=str.split(\"\\n\").map(function(line){return\"  \"+line}).join(\"\\n\").substr(2)}else{str=\"\\n\"+str.split(\"\\n\").map(function(line){return\"   \"+line}).join(\"\\n\")}}}else{str=ctx.stylize(\"[Circular]\",\"special\")}}if(isUndefined(name)){if(array&&key.match(/^\\d+$/)){return str}name=JSON.stringify(\"\"+key);if(name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)){name=name.substr(1,name.length-2);name=ctx.stylize(name,\"name\")}else{name=name.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,\"\\\"\").replace(/(^\"|\"$)/g,\"'\");name=ctx.stylize(name,\"string\")}}return name+\": \"+str}function reduceToSingleString(output,base,braces){var numLinesEst=0;var length=output.reduce(function(prev,cur){numLinesEst++;if(cur.indexOf(\"\\n\")>=0)numLinesEst++;return prev+cur.replace(/\\u001b\\[\\d\\d?m/g,\"\").length+1},0);if(length>60){return braces[0]+(base===\"\"?\"\":base+\"\\n \")+\" \"+output.join(\",\\n  \")+\" \"+braces[1]}return braces[0]+base+\" \"+output.join(\", \")+\" \"+braces[1]}// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types=require(\"./support/types\");function isArray(ar){return Array.isArray(ar)}exports.isArray=isArray;function isBoolean(arg){return typeof arg===\"boolean\"}exports.isBoolean=isBoolean;function isNull(arg){return arg===null}exports.isNull=isNull;function isNullOrUndefined(arg){return arg==null}exports.isNullOrUndefined=isNullOrUndefined;function isNumber(arg){return typeof arg===\"number\"}exports.isNumber=isNumber;function isString(arg){return typeof arg===\"string\"}exports.isString=isString;function isSymbol(arg){return typeof arg===\"symbol\"}exports.isSymbol=isSymbol;function isUndefined(arg){return arg===void 0}exports.isUndefined=isUndefined;function isRegExp(re){return isObject(re)&&objectToString(re)===\"[object RegExp]\"}exports.isRegExp=isRegExp;exports.types.isRegExp=isRegExp;function isObject(arg){return typeof arg===\"object\"&&arg!==null}exports.isObject=isObject;function isDate(d){return isObject(d)&&objectToString(d)===\"[object Date]\"}exports.isDate=isDate;exports.types.isDate=isDate;function isError(e){return isObject(e)&&(objectToString(e)===\"[object Error]\"||e instanceof Error)}exports.isError=isError;exports.types.isNativeError=isError;function isFunction(arg){return typeof arg===\"function\"}exports.isFunction=isFunction;function isPrimitive(arg){return arg===null||typeof arg===\"boolean\"||typeof arg===\"number\"||typeof arg===\"string\"||typeof arg===\"symbol\"||// ES6 symbol\ntypeof arg===\"undefined\"}exports.isPrimitive=isPrimitive;exports.isBuffer=require(\"./support/isBuffer\");function objectToString(o){return Object.prototype.toString.call(o)}function pad(n){return n<10?\"0\"+n.toString(10):n.toString(10)}var months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];// 26 Feb 16:19:34\nfunction timestamp(){var d=new Date;var time=[pad(d.getHours()),pad(d.getMinutes()),pad(d.getSeconds())].join(\":\");return[d.getDate(),months[d.getMonth()],time].join(\" \")}// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log=function(){console.log(\"%s - %s\",timestamp(),exports.format.apply(exports,arguments))};/**\n                 * Inherit the prototype methods from one constructor into another.\n                 *\n                 * The Function.prototype.inherits from lang.js rewritten as a standalone\n                 * function (not on Function.prototype). NOTE: If this file is to be loaded\n                 * during bootstrapping this function needs to be rewritten using some native\n                 * functions as prototype setup using normal JavaScript does not work as\n                 * expected during bootstrapping (see mirror.js in r114903).\n                 *\n                 * @param {function} ctor Constructor function which needs to inherit the\n                 *     prototype.\n                 * @param {function} superCtor Constructor function to inherit prototype from.\n                 */exports.inherits=require(\"inherits\");exports._extend=function(origin,add){// Don't do anything if add isn't an object\nif(!add||!isObject(add))return origin;var keys=Object.keys(add);var i=keys.length;while(i--){origin[keys[i]]=add[keys[i]]}return origin};function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}var kCustomPromisifiedSymbol=typeof Symbol!==\"undefined\"?Symbol(\"util.promisify.custom\"):undefined;exports.promisify=function promisify(original){if(typeof original!==\"function\")throw new TypeError(\"The \\\"original\\\" argument must be of type Function\");if(kCustomPromisifiedSymbol&&original[kCustomPromisifiedSymbol]){var fn=original[kCustomPromisifiedSymbol];if(typeof fn!==\"function\"){throw new TypeError(\"The \\\"util.promisify.custom\\\" argument must be of type Function\")}Object.defineProperty(fn,kCustomPromisifiedSymbol,{value:fn,enumerable:false,writable:false,configurable:true});return fn}function fn(){var promiseResolve,promiseReject;var promise=new Promise(function(resolve,reject){promiseResolve=resolve;promiseReject=reject});var args=[];for(var i=0;i<arguments.length;i++){args.push(arguments[i])}args.push(function(err,value){if(err){promiseReject(err)}else{promiseResolve(value)}});try{original.apply(this,args)}catch(err){promiseReject(err)}return promise}Object.setPrototypeOf(fn,Object.getPrototypeOf(original));if(kCustomPromisifiedSymbol)Object.defineProperty(fn,kCustomPromisifiedSymbol,{value:fn,enumerable:false,writable:false,configurable:true});return Object.defineProperties(fn,getOwnPropertyDescriptors(original))};exports.promisify.custom=kCustomPromisifiedSymbol;function callbackifyOnRejected(reason,cb){// `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n// Because `null` is a special error value in callbacks which means \"no error\n// occurred\", we error-wrap so the callback consumer can distinguish between\n// \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\nif(!reason){var newReason=new Error(\"Promise was rejected with a falsy value\");newReason.reason=reason;reason=newReason}return cb(reason)}function callbackify(original){if(typeof original!==\"function\"){throw new TypeError(\"The \\\"original\\\" argument must be of type Function\")}// We DO NOT return the promise as it gives the user a false sense that\n// the promise is actually somehow related to the callback's execution\n// and that the callback throwing will reject the promise.\nfunction callbackified(){var args=[];for(var i=0;i<arguments.length;i++){args.push(arguments[i])}var maybeCb=args.pop();if(typeof maybeCb!==\"function\"){throw new TypeError(\"The last argument must be of type Function\")}var self=this;var cb=function(){return maybeCb.apply(self,arguments)};// In true node style we process the callback on `nextTick` with all the\n// implications (stack, `uncaughtException`, `async_hooks`)\noriginal.apply(this,args).then(function(ret){process.nextTick(cb.bind(null,null,ret))},function(rej){process.nextTick(callbackifyOnRejected.bind(null,rej,cb))})}Object.setPrototypeOf(callbackified,Object.getPrototypeOf(original));Object.defineProperties(callbackified,getOwnPropertyDescriptors(original));return callbackified}exports.callbackify=callbackify;// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/util.js sha1 = 6c4ffc8c5c96de1ecf5d8fe3422e9cd99f3b5200\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util\"),\"util.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util\")},\"./support/types\":{name:\"types\",path:\"../node_modules/browser-util/support/types.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/types.js\n// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\"use strict\";var isBuffer=require(\"./isBuffer\");var isArgumentsObject=require(\"is-arguments\");var isGeneratorFunction=require(\"is-generator-function\");function uncurryThis(f){return f.call.bind(f)}var BigIntSupported=typeof BigInt!==\"undefined\";var SymbolSupported=typeof Symbol!==\"undefined\";var SymbolToStringTagSupported=SymbolSupported&&typeof Symbol.toStringTag!==\"undefined\";var Uint8ArraySupported=typeof Uint8Array!==\"undefined\";var ArrayBufferSupported=typeof ArrayBuffer!==\"undefined\";if(Uint8ArraySupported&&SymbolToStringTagSupported){var TypedArrayPrototype=Object.getPrototypeOf(Uint8Array.prototype);var TypedArrayProto_toStringTag=uncurryThis(Object.getOwnPropertyDescriptor(TypedArrayPrototype,Symbol.toStringTag).get)}var ObjectToString=uncurryThis(Object.prototype.toString);var numberValue=uncurryThis(Number.prototype.valueOf);var stringValue=uncurryThis(String.prototype.valueOf);var booleanValue=uncurryThis(Boolean.prototype.valueOf);if(BigIntSupported){var bigIntValue=uncurryThis(BigInt.prototype.valueOf)}if(SymbolSupported){var symbolValue=uncurryThis(Symbol.prototype.valueOf)}function checkBoxedPrimitive(value,prototypeValueOf){if(typeof value!==\"object\"){return false}try{prototypeValueOf(value);return true}catch(e){return false}}exports.isArgumentsObject=isArgumentsObject;exports.isGeneratorFunction=isGeneratorFunction;// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input){return typeof Promise!==\"undefined\"&&input instanceof Promise||input!==null&&typeof input===\"object\"&&typeof input.then===\"function\"&&typeof input.catch===\"function\"}exports.isPromise=isPromise;function isArrayBufferView(value){if(ArrayBufferSupported&&ArrayBuffer.isView){return ArrayBuffer.isView(value)}return isTypedArray(value)||isDataView(value)}exports.isArrayBufferView=isArrayBufferView;function isTypedArray(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)!==undefined}else{return isUint8Array(value)||isUint8ClampedArray(value)||isUint16Array(value)||isUint32Array(value)||isInt8Array(value)||isInt16Array(value)||isInt32Array(value)||isFloat32Array(value)||isFloat64Array(value)||isBigInt64Array(value)||isBigUint64Array(value)}}exports.isTypedArray=isTypedArray;function isUint8Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Uint8Array\"}else{return ObjectToString(value)===\"[object Uint8Array]\"||// If it's a Buffer instance _and_ has a `.buffer` property,\n// this is an ArrayBuffer based buffer; thus it's an Uint8Array\n// (Old Node.js had a custom non-Uint8Array implementation)\nisBuffer(value)&&value.buffer!==undefined}}exports.isUint8Array=isUint8Array;function isUint8ClampedArray(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Uint8ClampedArray\"}else{return ObjectToString(value)===\"[object Uint8ClampedArray]\"}}exports.isUint8ClampedArray=isUint8ClampedArray;function isUint16Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Uint16Array\"}else{return ObjectToString(value)===\"[object Uint16Array]\"}}exports.isUint16Array=isUint16Array;function isUint32Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Uint32Array\"}else{return ObjectToString(value)===\"[object Uint32Array]\"}}exports.isUint32Array=isUint32Array;function isInt8Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Int8Array\"}else{return ObjectToString(value)===\"[object Int8Array]\"}}exports.isInt8Array=isInt8Array;function isInt16Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Int16Array\"}else{return ObjectToString(value)===\"[object Int16Array]\"}}exports.isInt16Array=isInt16Array;function isInt32Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Int32Array\"}else{return ObjectToString(value)===\"[object Int32Array]\"}}exports.isInt32Array=isInt32Array;function isFloat32Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Float32Array\"}else{return ObjectToString(value)===\"[object Float32Array]\"}}exports.isFloat32Array=isFloat32Array;function isFloat64Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Float64Array\"}else{return ObjectToString(value)===\"[object Float64Array]\"}}exports.isFloat64Array=isFloat64Array;function isBigInt64Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"BigInt64Array\"}else{return ObjectToString(value)===\"[object BigInt64Array]\"}}exports.isBigInt64Array=isBigInt64Array;function isBigUint64Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"BigUint64Array\"}else{return ObjectToString(value)===\"[object BigUint64Array]\"}}exports.isBigUint64Array=isBigUint64Array;function isMapToString(value){return ObjectToString(value)===\"[object Map]\"}isMapToString.working=typeof Map!==\"undefined\"&&isMapToString(new Map);function isMap(value){if(typeof Map===\"undefined\"){return false}return isMapToString.working?isMapToString(value):value instanceof Map}exports.isMap=isMap;function isSetToString(value){return ObjectToString(value)===\"[object Set]\"}isSetToString.working=typeof Set!==\"undefined\"&&isSetToString(new Set);function isSet(value){if(typeof Set===\"undefined\"){return false}return isSetToString.working?isSetToString(value):value instanceof Set}exports.isSet=isSet;function isWeakMapToString(value){return ObjectToString(value)===\"[object WeakMap]\"}isWeakMapToString.working=typeof WeakMap!==\"undefined\"&&isWeakMapToString(new WeakMap);function isWeakMap(value){if(typeof WeakMap===\"undefined\"){return false}return isWeakMapToString.working?isWeakMapToString(value):value instanceof WeakMap}exports.isWeakMap=isWeakMap;function isWeakSetToString(value){return ObjectToString(value)===\"[object WeakSet]\"}isWeakSetToString.working=typeof WeakSet!==\"undefined\"&&isWeakSetToString(new WeakSet);function isWeakSet(value){return isWeakSetToString(value);if(typeof WeakSet===\"undefined\"){return false}return isWeakSetToString.working?isWeakSetToString(value):value instanceof WeakSet}exports.isWeakSet=isWeakSet;function isArrayBufferToString(value){return ObjectToString(value)===\"[object ArrayBuffer]\"}isArrayBufferToString.working=typeof ArrayBuffer!==\"undefined\"&&isArrayBufferToString(new ArrayBuffer);function isArrayBuffer(value){if(typeof ArrayBuffer===\"undefined\"){return false}return isArrayBufferToString.working?isArrayBufferToString(value):value instanceof ArrayBuffer}exports.isArrayBuffer=isArrayBuffer;function isDataViewToString(value){return ObjectToString(value)===\"[object DataView]\"}isDataViewToString.working=typeof ArrayBuffer!==\"undefined\"&&typeof DataView!==\"undefined\"&&isDataViewToString(new DataView(new ArrayBuffer(1),0,1));function isDataView(value){if(typeof DataView===\"undefined\"){return false}return isDataViewToString.working?isDataViewToString(value):value instanceof DataView}exports.isDataView=isDataView;function isSharedArrayBufferToString(value){return ObjectToString(value)===\"[object SharedArrayBuffer]\"}isSharedArrayBufferToString.working=typeof SharedArrayBuffer!==\"undefined\"&&isSharedArrayBufferToString(new SharedArrayBuffer);function isSharedArrayBuffer(value){if(typeof SharedArrayBuffer===\"undefined\"){return false}return isSharedArrayBufferToString.working?isSharedArrayBufferToString(value):value instanceof SharedArrayBuffer}exports.isSharedArrayBuffer=isSharedArrayBuffer;function isAsyncFunction(value){return ObjectToString(value)===\"[object AsyncFunction]\"}exports.isAsyncFunction=isAsyncFunction;function isMapIterator(value){return ObjectToString(value)===\"[object Map Iterator]\"}exports.isMapIterator=isMapIterator;function isSetIterator(value){return ObjectToString(value)===\"[object Set Iterator]\"}exports.isSetIterator=isSetIterator;function isGeneratorObject(value){return ObjectToString(value)===\"[object Generator]\"}exports.isGeneratorObject=isGeneratorObject;function isWebAssemblyCompiledModule(value){return ObjectToString(value)===\"[object WebAssembly.Module]\"}exports.isWebAssemblyCompiledModule=isWebAssemblyCompiledModule;function isNumberObject(value){return checkBoxedPrimitive(value,numberValue)}exports.isNumberObject=isNumberObject;function isStringObject(value){return checkBoxedPrimitive(value,stringValue)}exports.isStringObject=isStringObject;function isBooleanObject(value){return checkBoxedPrimitive(value,booleanValue)}exports.isBooleanObject=isBooleanObject;function isBigIntObject(value){return BigIntSupported&&checkBoxedPrimitive(value,bigIntValue)}exports.isBigIntObject=isBigIntObject;function isSymbolObject(value){return SymbolSupported&&checkBoxedPrimitive(value,symbolValue)}exports.isSymbolObject=isSymbolObject;function isBoxedPrimitive(value){return isNumberObject(value)||isStringObject(value)||isBooleanObject(value)||isBigIntObject(value)||isSymbolObject(value)}exports.isBoxedPrimitive=isBoxedPrimitive;function isAnyArrayBuffer(value){return Uint8ArraySupported&&(isArrayBuffer(value)||isSharedArrayBuffer(value))}exports.isAnyArrayBuffer=isAnyArrayBuffer;[\"isProxy\",\"isExternal\",\"isModuleNamespaceObject\"].forEach(function(method){Object.defineProperty(exports,method,{enumerable:false,value:function(){throw new Error(method+\" is not supported in userland\")}})});// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/types.js sha1 = 3bfa608d786eeb0caad9f69079a1a13006fd50a9\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\"),\"types.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\")},\"./support/isBuffer\":{name:\"isBuffer\",path:\"../node_modules/browser-util/support/isBuffer.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js\nmodule.exports=function isBuffer(arg){return arg instanceof Buffer};// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js sha1 = ab526fa0e6a7e7f560d2126a632cc8342158334d\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\"),\"isBuffer.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\")},\"inherits\":{name:\"inherits\",path:\"../node_modules/inherits/inherits.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/inherits/inherits.js\ntry{var util=require(\"util\");if(typeof util.inherits!==\"function\")throw\"\";module.exports=util.inherits}catch(e){module.exports=require(\"./inherits_browser.js\")}// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/inherits/inherits.js sha1 = 491caba7b70590f6dcbe37d7edccd9f89ac1b9fd\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/inherits\"),\"inherits.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/inherits\")},\"./support/types\":{name:\"types\",path:\"../node_modules/browser-util/support/types.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/types.js\n// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\"use strict\";var isBuffer=require(\"./isBuffer\");var isArgumentsObject=require(\"is-arguments\");var isGeneratorFunction=require(\"is-generator-function\");function uncurryThis(f){return f.call.bind(f)}var BigIntSupported=typeof BigInt!==\"undefined\";var SymbolSupported=typeof Symbol!==\"undefined\";var SymbolToStringTagSupported=SymbolSupported&&typeof Symbol.toStringTag!==\"undefined\";var Uint8ArraySupported=typeof Uint8Array!==\"undefined\";var ArrayBufferSupported=typeof ArrayBuffer!==\"undefined\";if(Uint8ArraySupported&&SymbolToStringTagSupported){var TypedArrayPrototype=Object.getPrototypeOf(Uint8Array.prototype);var TypedArrayProto_toStringTag=uncurryThis(Object.getOwnPropertyDescriptor(TypedArrayPrototype,Symbol.toStringTag).get)}var ObjectToString=uncurryThis(Object.prototype.toString);var numberValue=uncurryThis(Number.prototype.valueOf);var stringValue=uncurryThis(String.prototype.valueOf);var booleanValue=uncurryThis(Boolean.prototype.valueOf);if(BigIntSupported){var bigIntValue=uncurryThis(BigInt.prototype.valueOf)}if(SymbolSupported){var symbolValue=uncurryThis(Symbol.prototype.valueOf)}function checkBoxedPrimitive(value,prototypeValueOf){if(typeof value!==\"object\"){return false}try{prototypeValueOf(value);return true}catch(e){return false}}exports.isArgumentsObject=isArgumentsObject;exports.isGeneratorFunction=isGeneratorFunction;// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input){return typeof Promise!==\"undefined\"&&input instanceof Promise||input!==null&&typeof input===\"object\"&&typeof input.then===\"function\"&&typeof input.catch===\"function\"}exports.isPromise=isPromise;function isArrayBufferView(value){if(ArrayBufferSupported&&ArrayBuffer.isView){return ArrayBuffer.isView(value)}return isTypedArray(value)||isDataView(value)}exports.isArrayBufferView=isArrayBufferView;function isTypedArray(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)!==undefined}else{return isUint8Array(value)||isUint8ClampedArray(value)||isUint16Array(value)||isUint32Array(value)||isInt8Array(value)||isInt16Array(value)||isInt32Array(value)||isFloat32Array(value)||isFloat64Array(value)||isBigInt64Array(value)||isBigUint64Array(value)}}exports.isTypedArray=isTypedArray;function isUint8Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Uint8Array\"}else{return ObjectToString(value)===\"[object Uint8Array]\"||// If it's a Buffer instance _and_ has a `.buffer` property,\n// this is an ArrayBuffer based buffer; thus it's an Uint8Array\n// (Old Node.js had a custom non-Uint8Array implementation)\nisBuffer(value)&&value.buffer!==undefined}}exports.isUint8Array=isUint8Array;function isUint8ClampedArray(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Uint8ClampedArray\"}else{return ObjectToString(value)===\"[object Uint8ClampedArray]\"}}exports.isUint8ClampedArray=isUint8ClampedArray;function isUint16Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Uint16Array\"}else{return ObjectToString(value)===\"[object Uint16Array]\"}}exports.isUint16Array=isUint16Array;function isUint32Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Uint32Array\"}else{return ObjectToString(value)===\"[object Uint32Array]\"}}exports.isUint32Array=isUint32Array;function isInt8Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Int8Array\"}else{return ObjectToString(value)===\"[object Int8Array]\"}}exports.isInt8Array=isInt8Array;function isInt16Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Int16Array\"}else{return ObjectToString(value)===\"[object Int16Array]\"}}exports.isInt16Array=isInt16Array;function isInt32Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Int32Array\"}else{return ObjectToString(value)===\"[object Int32Array]\"}}exports.isInt32Array=isInt32Array;function isFloat32Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Float32Array\"}else{return ObjectToString(value)===\"[object Float32Array]\"}}exports.isFloat32Array=isFloat32Array;function isFloat64Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"Float64Array\"}else{return ObjectToString(value)===\"[object Float64Array]\"}}exports.isFloat64Array=isFloat64Array;function isBigInt64Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"BigInt64Array\"}else{return ObjectToString(value)===\"[object BigInt64Array]\"}}exports.isBigInt64Array=isBigInt64Array;function isBigUint64Array(value){if(Uint8ArraySupported&&SymbolToStringTagSupported){return TypedArrayProto_toStringTag(value)===\"BigUint64Array\"}else{return ObjectToString(value)===\"[object BigUint64Array]\"}}exports.isBigUint64Array=isBigUint64Array;function isMapToString(value){return ObjectToString(value)===\"[object Map]\"}isMapToString.working=typeof Map!==\"undefined\"&&isMapToString(new Map);function isMap(value){if(typeof Map===\"undefined\"){return false}return isMapToString.working?isMapToString(value):value instanceof Map}exports.isMap=isMap;function isSetToString(value){return ObjectToString(value)===\"[object Set]\"}isSetToString.working=typeof Set!==\"undefined\"&&isSetToString(new Set);function isSet(value){if(typeof Set===\"undefined\"){return false}return isSetToString.working?isSetToString(value):value instanceof Set}exports.isSet=isSet;function isWeakMapToString(value){return ObjectToString(value)===\"[object WeakMap]\"}isWeakMapToString.working=typeof WeakMap!==\"undefined\"&&isWeakMapToString(new WeakMap);function isWeakMap(value){if(typeof WeakMap===\"undefined\"){return false}return isWeakMapToString.working?isWeakMapToString(value):value instanceof WeakMap}exports.isWeakMap=isWeakMap;function isWeakSetToString(value){return ObjectToString(value)===\"[object WeakSet]\"}isWeakSetToString.working=typeof WeakSet!==\"undefined\"&&isWeakSetToString(new WeakSet);function isWeakSet(value){return isWeakSetToString(value);if(typeof WeakSet===\"undefined\"){return false}return isWeakSetToString.working?isWeakSetToString(value):value instanceof WeakSet}exports.isWeakSet=isWeakSet;function isArrayBufferToString(value){return ObjectToString(value)===\"[object ArrayBuffer]\"}isArrayBufferToString.working=typeof ArrayBuffer!==\"undefined\"&&isArrayBufferToString(new ArrayBuffer);function isArrayBuffer(value){if(typeof ArrayBuffer===\"undefined\"){return false}return isArrayBufferToString.working?isArrayBufferToString(value):value instanceof ArrayBuffer}exports.isArrayBuffer=isArrayBuffer;function isDataViewToString(value){return ObjectToString(value)===\"[object DataView]\"}isDataViewToString.working=typeof ArrayBuffer!==\"undefined\"&&typeof DataView!==\"undefined\"&&isDataViewToString(new DataView(new ArrayBuffer(1),0,1));function isDataView(value){if(typeof DataView===\"undefined\"){return false}return isDataViewToString.working?isDataViewToString(value):value instanceof DataView}exports.isDataView=isDataView;function isSharedArrayBufferToString(value){return ObjectToString(value)===\"[object SharedArrayBuffer]\"}isSharedArrayBufferToString.working=typeof SharedArrayBuffer!==\"undefined\"&&isSharedArrayBufferToString(new SharedArrayBuffer);function isSharedArrayBuffer(value){if(typeof SharedArrayBuffer===\"undefined\"){return false}return isSharedArrayBufferToString.working?isSharedArrayBufferToString(value):value instanceof SharedArrayBuffer}exports.isSharedArrayBuffer=isSharedArrayBuffer;function isAsyncFunction(value){return ObjectToString(value)===\"[object AsyncFunction]\"}exports.isAsyncFunction=isAsyncFunction;function isMapIterator(value){return ObjectToString(value)===\"[object Map Iterator]\"}exports.isMapIterator=isMapIterator;function isSetIterator(value){return ObjectToString(value)===\"[object Set Iterator]\"}exports.isSetIterator=isSetIterator;function isGeneratorObject(value){return ObjectToString(value)===\"[object Generator]\"}exports.isGeneratorObject=isGeneratorObject;function isWebAssemblyCompiledModule(value){return ObjectToString(value)===\"[object WebAssembly.Module]\"}exports.isWebAssemblyCompiledModule=isWebAssemblyCompiledModule;function isNumberObject(value){return checkBoxedPrimitive(value,numberValue)}exports.isNumberObject=isNumberObject;function isStringObject(value){return checkBoxedPrimitive(value,stringValue)}exports.isStringObject=isStringObject;function isBooleanObject(value){return checkBoxedPrimitive(value,booleanValue)}exports.isBooleanObject=isBooleanObject;function isBigIntObject(value){return BigIntSupported&&checkBoxedPrimitive(value,bigIntValue)}exports.isBigIntObject=isBigIntObject;function isSymbolObject(value){return SymbolSupported&&checkBoxedPrimitive(value,symbolValue)}exports.isSymbolObject=isSymbolObject;function isBoxedPrimitive(value){return isNumberObject(value)||isStringObject(value)||isBooleanObject(value)||isBigIntObject(value)||isSymbolObject(value)}exports.isBoxedPrimitive=isBoxedPrimitive;function isAnyArrayBuffer(value){return Uint8ArraySupported&&(isArrayBuffer(value)||isSharedArrayBuffer(value))}exports.isAnyArrayBuffer=isAnyArrayBuffer;[\"isProxy\",\"isExternal\",\"isModuleNamespaceObject\"].forEach(function(method){Object.defineProperty(exports,method,{enumerable:false,value:function(){throw new Error(method+\" is not supported in userland\")}})});// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/types.js sha1 = 3bfa608d786eeb0caad9f69079a1a13006fd50a9\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\"),\"types.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\")},\"./isBuffer\":{name:\"isBuffer\",path:\"../node_modules/browser-util/support/isBuffer.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js\nmodule.exports=function isBuffer(arg){return arg instanceof Buffer};// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js sha1 = ab526fa0e6a7e7f560d2126a632cc8342158334d\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\"),\"isBuffer.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\")},\"is-arguments\":{name:\"is-arguments\",path:\"../node_modules/is-arguments/index.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/is-arguments/index.js\n\"use strict\";var hasToStringTag=typeof Symbol===\"function\"&&typeof Symbol.toStringTag===\"symbol\";var toStr=Object.prototype.toString;var isStandardArguments=function isArguments(value){if(hasToStringTag&&value&&typeof value===\"object\"&&Symbol.toStringTag in value){return false}return toStr.call(value)===\"[object Arguments]\"};var isLegacyArguments=function isArguments(value){if(isStandardArguments(value)){return true}return value!==null&&typeof value===\"object\"&&typeof value.length===\"number\"&&value.length>=0&&toStr.call(value)!==\"[object Array]\"&&toStr.call(value.callee)===\"[object Function]\"};var supportsStandardArguments=function(){return isStandardArguments(arguments)}();isStandardArguments.isLegacyArguments=isLegacyArguments;// for tests\nmodule.exports=supportsStandardArguments?isStandardArguments:isLegacyArguments;// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/is-arguments/index.js sha1 = 03e026d417599e244476071ea2b165c63bb647a5\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/is-arguments\"),\"index.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/is-arguments\")},\"is-generator-function\":{name:\"is-generator-function\",path:\"../node_modules/is-generator-function/index.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/is-generator-function/index.js\n\"use strict\";var toStr=Object.prototype.toString;var fnToStr=Function.prototype.toString;var isFnRegex=/^\\s*(?:function)?\\*/;var hasToStringTag=typeof Symbol===\"function\"&&typeof Symbol.toStringTag===\"symbol\";var getProto=Object.getPrototypeOf;var getGeneratorFunc=function(){// eslint-disable-line consistent-return\nif(!hasToStringTag){return false}try{return Function(\"return function*() {}\")()}catch(e){}};var generatorFunc=getGeneratorFunc();var GeneratorFunction=generatorFunc?getProto(generatorFunc):{};module.exports=function isGeneratorFunction(fn){if(typeof fn!==\"function\"){return false}if(isFnRegex.test(fnToStr.call(fn))){return true}if(!hasToStringTag){var str=toStr.call(fn);return str===\"[object GeneratorFunction]\"}return getProto(fn)===GeneratorFunction};// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/is-generator-function/index.js sha1 = aa4dacfbf2826bea0fdfb40c9e566137f53456b9\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/is-generator-function\"),\"index.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/is-generator-function\")},\"./inherits_browser.js\":{name:\"inherits\",path:\"../node_modules/inherits/inherits_browser.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/inherits/inherits_browser.js\nif(typeof Object.create===\"function\"){// implementation from standard node.js 'util' module\nmodule.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}})}}else{// old school shim for old browsers\nmodule.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor;ctor.prototype.constructor=ctor}}// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/inherits/inherits_browser.js sha1 = 7c13eacf36e79e5e7dd257d80ec25846e4df7eb3\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/inherits\"),\"inherits_browser.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/inherits\")},\"./isBuffer\":{name:\"isBuffer\",path:\"../node_modules/browser-util/support/isBuffer.js\",load:function(module,require,__filename,__dirname){var exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js\nmodule.exports=function isBuffer(arg){return arg instanceof Buffer};// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js sha1 = ab526fa0e6a7e7f560d2126a632cc8342158334d\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\"),\"isBuffer.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support\")},\"path\":{name:\"browser-path\",path:\"../node_modules/browser-path/path.js\",load:function(module,require,__filename,__dirname){var process={\"env\":{},\"cwd\":function(){return\"/\"}},exports=module.exports;// paste begin:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-path/path.js\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\"use strict\";var isWindows=process.platform===\"win32\";var util=require(\"util\");// resolves . and .. elements in a path array with directory names there\n// must be no slashes or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts,allowAboveRoot){var res=[];for(var i=0;i<parts.length;i++){var p=parts[i];// ignore empty parts\nif(!p||p===\".\")continue;if(p===\"..\"){if(res.length&&res[res.length-1]!==\"..\"){res.pop()}else if(allowAboveRoot){res.push(\"..\")}}else{res.push(p)}}return res}// returns an array with empty elements removed from either end of the input\n// array or the original array if no elements need to be removed\nfunction trimArray(arr){var lastIndex=arr.length-1;var start=0;for(;start<=lastIndex;start++){if(arr[start])break}var end=lastIndex;for(;end>=0;end--){if(arr[end])break}if(start===0&&end===lastIndex)return arr;if(start>end)return[];return arr.slice(start,end+1)}// Regex to split a windows path into three parts: [*, device, slash,\n// tail] windows-only\nvar splitDeviceRe=/^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;// Regex to split the tail part of the above into [*, dir, basename, ext]\nvar splitTailRe=/^([\\s\\S]*?)((?:\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))(?:[\\\\\\/]*)$/;var win32={};// Function to split a filename into [root, dir, basename, ext]\nfunction win32SplitPath(filename){// Separate device+slash from tail\nvar result=splitDeviceRe.exec(filename),device=(result[1]||\"\")+(result[2]||\"\"),tail=result[3]||\"\";// Split the tail into dir, basename and extension\nvar result2=splitTailRe.exec(tail),dir=result2[1],basename=result2[2],ext=result2[3];return[device,dir,basename,ext]}function win32StatPath(path){var result=splitDeviceRe.exec(path),device=result[1]||\"\",isUnc=!!device&&device[1]!==\":\";return{device:device,isUnc:isUnc,isAbsolute:isUnc||!!result[2],// UNC paths are always absolute\ntail:result[3]}}function normalizeUNCRoot(device){return\"\\\\\\\\\"+device.replace(/^[\\\\\\/]+/,\"\").replace(/[\\\\\\/]+/g,\"\\\\\")}// path.resolve([from ...], to)\nwin32.resolve=function(){var resolvedDevice=\"\",resolvedTail=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1;i--){var path;if(i>=0){path=arguments[i]}else if(!resolvedDevice){path=process.cwd()}else{// Windows has the concept of drive-specific current working\n// directories. If we've resolved a drive letter but not yet an\n// absolute path, get cwd for that drive. We're sure the device is not\n// an unc path at this points, because unc paths are always absolute.\npath=process.env[\"=\"+resolvedDevice];// Verify that a drive-local cwd was found and that it actually points\n// to our drive. If not, default to the drive's root.\nif(!path||path.substr(0,3).toLowerCase()!==resolvedDevice.toLowerCase()+\"\\\\\"){path=resolvedDevice+\"\\\\\"}}// Skip empty and invalid entries\nif(!util.isString(path)){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){continue}var result=win32StatPath(path),device=result.device,isUnc=result.isUnc,isAbsolute=result.isAbsolute,tail=result.tail;if(device&&resolvedDevice&&device.toLowerCase()!==resolvedDevice.toLowerCase()){// This path points to another device so it is not applicable\ncontinue}if(!resolvedDevice){resolvedDevice=device}if(!resolvedAbsolute){resolvedTail=tail+\"\\\\\"+resolvedTail;resolvedAbsolute=isAbsolute}if(resolvedDevice&&resolvedAbsolute){break}}// Convert slashes to backslashes when `resolvedDevice` points to an UNC\n// root. Also squash multiple slashes into a single one where appropriate.\nif(isUnc){resolvedDevice=normalizeUNCRoot(resolvedDevice)}// At this point the path should be resolved to a full absolute path,\n// but handle relative paths to be safe (might happen when process.cwd()\n// fails)\n// Normalize the tail path\nresolvedTail=normalizeArray(resolvedTail.split(/[\\\\\\/]+/),!resolvedAbsolute).join(\"\\\\\");return resolvedDevice+(resolvedAbsolute?\"\\\\\":\"\")+resolvedTail||\".\"};win32.normalize=function(path){var result=win32StatPath(path),device=result.device,isUnc=result.isUnc,isAbsolute=result.isAbsolute,tail=result.tail,trailingSlash=/[\\\\\\/]$/.test(tail);// Normalize the tail path\ntail=normalizeArray(tail.split(/[\\\\\\/]+/),!isAbsolute).join(\"\\\\\");if(!tail&&!isAbsolute){tail=\".\"}if(tail&&trailingSlash){tail+=\"\\\\\"}// Convert slashes to backslashes when `device` points to an UNC root.\n// Also squash multiple slashes into a single one where appropriate.\nif(isUnc){device=normalizeUNCRoot(device)}return device+(isAbsolute?\"\\\\\":\"\")+tail};win32.isAbsolute=function(path){return win32StatPath(path).isAbsolute};win32.join=function(){var paths=[];for(var i=0;i<arguments.length;i++){var arg=arguments[i];if(!util.isString(arg)){throw new TypeError(\"Arguments to path.join must be strings\")}if(arg){paths.push(arg)}}var joined=paths.join(\"\\\\\");// Make sure that the joined path doesn't start with two slashes, because\n// normalize() will mistake it for an UNC path then.\n//\n// This step is skipped when it is very clear that the user actually\n// intended to point at an UNC path. This is assumed when the first\n// non-empty string arguments starts with exactly two slashes followed by\n// at least one more non-slash character.\n//\n// Note that for normalize() to treat a path as an UNC path it needs to\n// have at least 2 components, so we don't filter for that here.\n// This means that the user can use join to construct UNC paths from\n// a server name and a share name; for example:\n//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\')\nif(!/^[\\\\\\/]{2}[^\\\\\\/]/.test(paths[0])){joined=joined.replace(/^[\\\\\\/]{2,}/,\"\\\\\")}return win32.normalize(joined)};// path.relative(from, to)\n// it will solve the relative path from 'from' to 'to', for instance:\n// from = 'C:\\\\orandea\\\\test\\\\aaa'\n// to = 'C:\\\\orandea\\\\impl\\\\bbb'\n// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\nwin32.relative=function(from,to){from=win32.resolve(from);to=win32.resolve(to);// windows is not case sensitive\nvar lowerFrom=from.toLowerCase();var lowerTo=to.toLowerCase();var toParts=trimArray(to.split(\"\\\\\"));var lowerFromParts=trimArray(lowerFrom.split(\"\\\\\"));var lowerToParts=trimArray(lowerTo.split(\"\\\\\"));var length=Math.min(lowerFromParts.length,lowerToParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(lowerFromParts[i]!==lowerToParts[i]){samePartsLength=i;break}}if(samePartsLength==0){return to}var outputParts=[];for(var i=samePartsLength;i<lowerFromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"\\\\\")};win32._makeLong=function(path){// Note: this will *probably* throw somewhere.\nif(!util.isString(path))return path;if(!path){return\"\"}var resolvedPath=win32.resolve(path);if(/^[a-zA-Z]\\:\\\\/.test(resolvedPath)){// path is local filesystem path, which needs to be converted\n// to long UNC path.\nreturn\"\\\\\\\\?\\\\\"+resolvedPath}else if(/^\\\\\\\\[^?.]/.test(resolvedPath)){// path is network UNC path, which needs to be converted\n// to long UNC path.\nreturn\"\\\\\\\\?\\\\UNC\\\\\"+resolvedPath.substring(2)}return path};win32.dirname=function(path){var result=win32SplitPath(path),root=result[0],dir=result[1];if(!root&&!dir){// No dirname whatsoever\nreturn\".\"}if(dir){// It has a dirname, strip trailing slash\ndir=dir.substr(0,dir.length-1)}return root+dir};win32.basename=function(path,ext){var f=win32SplitPath(path)[2];// TODO: make this comparison case-insensitive on windows?\nif(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length)}return f};win32.extname=function(path){return win32SplitPath(path)[3]};win32.format=function(pathObject){if(!util.isObject(pathObject)){throw new TypeError(\"Parameter 'pathObject' must be an object, not \"+typeof pathObject)}var root=pathObject.root||\"\";if(!util.isString(root)){throw new TypeError(\"'pathObject.root' must be a string or undefined, not \"+typeof pathObject.root)}var dir=pathObject.dir;var base=pathObject.base||\"\";if(!dir){return base}if(dir[dir.length-1]===win32.sep){return dir+base}return dir+win32.sep+base};win32.parse=function(pathString){if(!util.isString(pathString)){throw new TypeError(\"Parameter 'pathString' must be a string, not \"+typeof pathString)}var allParts=win32SplitPath(pathString);if(!allParts||allParts.length!==4){throw new TypeError(\"Invalid path '\"+pathString+\"'\")}return{root:allParts[0],dir:allParts[0]+allParts[1].slice(0,-1),base:allParts[2],ext:allParts[3],name:allParts[2].slice(0,allParts[2].length-allParts[3].length)}};win32.sep=\"\\\\\";win32.delimiter=\";\";// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;var posix={};function posixSplitPath(filename){return splitPathRe.exec(filename).slice(1)}// path.resolve([from ...], to)\n// posix version\nposix.resolve=function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:process.cwd();// Skip empty and invalid entries\nif(!util.isString(path)){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){continue}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=path[0]===\"/\"}// At this point the path should be resolved to a full absolute path, but\n// handle relative paths to be safe (might happen when process.cwd() fails)\n// Normalize the path\nresolvedPath=normalizeArray(resolvedPath.split(\"/\"),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"};// path.normalize(path)\n// posix version\nposix.normalize=function(path){var isAbsolute=posix.isAbsolute(path),trailingSlash=path&&path[path.length-1]===\"/\";// Normalize the path\npath=normalizeArray(path.split(\"/\"),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path};// posix version\nposix.isAbsolute=function(path){return path.charAt(0)===\"/\"};// posix version\nposix.join=function(){var path=\"\";for(var i=0;i<arguments.length;i++){var segment=arguments[i];if(!util.isString(segment)){throw new TypeError(\"Arguments to path.join must be strings\")}if(segment){if(!path){path+=segment}else{path+=\"/\"+segment}}}return posix.normalize(path)};// path.relative(from, to)\n// posix version\nposix.relative=function(from,to){from=posix.resolve(from).substr(1);to=posix.resolve(to).substr(1);var fromParts=trimArray(from.split(\"/\"));var toParts=trimArray(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")};posix._makeLong=function(path){return path};posix.dirname=function(path){var result=posixSplitPath(path),root=result[0],dir=result[1];if(!root&&!dir){// No dirname whatsoever\nreturn\".\"}if(dir){// It has a dirname, strip trailing slash\ndir=dir.substr(0,dir.length-1)}return root+dir};posix.basename=function(path,ext){var f=posixSplitPath(path)[2];// TODO: make this comparison case-insensitive on windows?\nif(ext&&f.substr(-1*ext.length)===ext){f=f.substr(0,f.length-ext.length)}return f};posix.extname=function(path){return posixSplitPath(path)[3]};posix.format=function(pathObject){if(!util.isObject(pathObject)){throw new TypeError(\"Parameter 'pathObject' must be an object, not \"+typeof pathObject)}var root=pathObject.root||\"\";if(!util.isString(root)){throw new TypeError(\"'pathObject.root' must be a string or undefined, not \"+typeof pathObject.root)}var dir=pathObject.dir?pathObject.dir+posix.sep:\"\";var base=pathObject.base||\"\";return dir+base};posix.parse=function(pathString){if(!util.isString(pathString)){throw new TypeError(\"Parameter 'pathString' must be a string, not \"+typeof pathString)}var allParts=posixSplitPath(pathString);if(!allParts||allParts.length!==4){throw new TypeError(\"Invalid path '\"+pathString+\"'\")}allParts[1]=allParts[1]||\"\";allParts[2]=allParts[2]||\"\";allParts[3]=allParts[3]||\"\";return{root:allParts[0],dir:allParts[0]+allParts[1].slice(0,-1),base:allParts[2],ext:allParts[3],name:allParts[2].slice(0,allParts[2].length-allParts[3].length)}};posix.sep=\"/\";posix.delimiter=\":\";if(isWindows)module.exports=win32;else/* posix */module.exports=posix;module.exports.posix=posix;module.exports.win32=win32;// paste end:file:/home/jonathanmaxannett/jsextensions/node_modules/browser-path/path.js sha1 = f14f27107c2666c5ea412b37e34ab947ec3d2453\nreturn module.exports}.bind(this,{exports:{}},__sim_require.bind(this,\"/home/jonathanmaxannett/jsextensions/node_modules/browser-path\"),\"path.js\",\"/home/jonathanmaxannett/jsextensions/node_modules/browser-path\")},___the___:\"end\"};var mod=function(module,require,__filename,__dirname){var exports=module.exports;//paste-begin: http://npmjs.com\nmodule.exports=function(){var res={};[\"punycode\",\"url\",\"querystring\",\"util\",\"path\"].forEach(function(m){res[m]=require(m)});return res}();//paste-end: http://npmjs.com\nreturn module.exports};return mod({exports:{}},__sim_require.bind(this,\".\"),\"browser-internal.js\",\".\")}()})(typeof process+typeof module+typeof require===\"objectobjectfunction\"?[module,\"exports\"]:[window,\"simRequire\"]);"},"files":{"/home/jonathanmaxannett/jsextensions/node_modules/browser-punycode/punycode.js":{"name":"browser-punycode","sha1":"39ab3964d954c66ab440a590444fd7dd3493be37"},"/home/jonathanmaxannett/jsextensions/node_modules/browser-url/url.js":{"name":"browser-url","sha1":"78d0ac233252dbbecf7afc93c2c3ad56965f53e2"},"/home/jonathanmaxannett/jsextensions/node_modules/browser-url/util.js":{"name":"url","sha1":"b83cee072b6381001e94414862d934d65004d92b"},"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/index.js":{"name":"browser-querystring","sha1":"cb7fd2835f652938cfe501f3f0c225e2646eb801"},"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/decode.js":{"name":"querystring","sha1":"78c13537ae65852bb6b1df4563ced3a27f848376"},"/home/jonathanmaxannett/jsextensions/node_modules/browser-querystring/encode.js":{"name":"querystring","sha1":"bc42441192cea9de787398850f1d308980421017"},"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/util.js":{"name":"browser-util","sha1":"6c4ffc8c5c96de1ecf5d8fe3422e9cd99f3b5200"},"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/types.js":{"name":"types","sha1":"3bfa608d786eeb0caad9f69079a1a13006fd50a9"},"/home/jonathanmaxannett/jsextensions/node_modules/browser-util/support/isBuffer.js":{"name":"isBuffer","sha1":"ab526fa0e6a7e7f560d2126a632cc8342158334d"},"/home/jonathanmaxannett/jsextensions/node_modules/inherits/inherits.js":{"name":"inherits","sha1":"491caba7b70590f6dcbe37d7edccd9f89ac1b9fd"},"/home/jonathanmaxannett/jsextensions/node_modules/is-arguments/index.js":{"name":"is-arguments","sha1":"03e026d417599e244476071ea2b165c63bb647a5"},"/home/jonathanmaxannett/jsextensions/node_modules/is-generator-function/index.js":{"name":"is-generator-function","sha1":"aa4dacfbf2826bea0fdfb40c9e566137f53456b9"},"/home/jonathanmaxannett/jsextensions/node_modules/inherits/inherits_browser.js":{"name":"inherits","sha1":"7c13eacf36e79e5e7dd257d80ec25846e4df7eb3"},"/home/jonathanmaxannett/jsextensions/node_modules/browser-path/path.js":{"name":"browser-path","sha1":"f14f27107c2666c5ea412b37e34ab947ec3d2453"}}}